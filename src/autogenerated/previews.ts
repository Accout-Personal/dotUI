// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "blocks/marketing/pages/pricing": {
    component: React.lazy<React.FC>(() => import("@/lib/blocks/marketing/pages/pricing")),
    code: [
      {
        title: "pricing.tsx",
        code: 'import React from "react";\nimport { CallToAction } from "./cta";\nimport { FAQ } from "./faq";\nimport { PricingComparaison } from "./pricing-comparaison";\nimport type { Plan } from "./types";\n\nconst headline = "Simple pricing";\nconst subheadline = "Use rCopy for free. Upgrade to enable to access premium templates.";\nconst pricingPlans: Plan[] = [\n  {\n    name: "Free",\n    description: "Use rCopy for free",\n    featured: false,\n    price: {\n      monthly: "$0",\n      yearly: "$0",\n    },\n    features: [\n      "Free hosting on \'turbocharger.cc\'",\n      "Optimized SEO",\n      "Has \'Built with Turbocharger\' branding",\n    ],\n    cta: {\n      label: "Get started",\n      href: "#",\n    },\n  },\n  {\n    name: "Pro",\n    featured: true,\n    price: { monthly: "$19", yearly: "$190" },\n    description: "Perfect for small / medium sized businesses.",\n    features: [\n      "Everything in Free.",\n      "Basic analytics",\n      "Remove \'Built with Turbocharger\' branding",\n    ],\n    cta: {\n      label: "Get started",\n      href: "#",\n    },\n  },\n  {\n    name: "Entreprise",\n    price: { monthly: "$39", yearly: "$390" },\n    description: "For even the biggest enterprise companies.",\n    featured: false,\n    features: ["Everything in Personal site.", "Advanced analytics", "Priority support"],\n    cta: {\n      label: "Get started",\n      href: "#",\n    },\n  },\n];\nconst questions = [\n  {\n    question: "How does turbocharger works?",\n    answer:\n      "Turbocharger is a monorepo starter that comes with Next.js, Tailwind CSS, Shadcn-ui, Server components, and more. It\'s a great way to start your next project.",\n  },\n  {\n    question: "How do I create a website with turbocharger?",\n    answer: "You can create a website with turbocharger by following the documentation.",\n  },\n  {\n    question: "How much does turbocharger cost?",\n    answer: "It\'s free to use turbocharger",\n  },\n  {\n    question: "Can I use turbocharger for free?",\n    answer: "Yes, you can use turbocharger for free.",\n  },\n];\nconst cta = {\n  headline: "Get started today",\n  subheadline: "Start creating your own react project today.",\n  cta: {\n    label: "Get started",\n    href: "#",\n  },\n};\n\nexport default function PricingPage() {\n  return (\n    <div className="container py-24">\n      <h2 className="text-center font-display text-5xl font-bold tracking-tight">\n        {headline}\n      </h2>\n      <p className="mt-2 text-center text-lg text-muted-foreground">{subheadline}</p>\n      <PricingComparaison plans={pricingPlans} className="mt-8" />\n      <FAQ questions={questions} className="mt-32" />\n      <CallToAction\n        headline={cta.headline}\n        subheadline={cta.subheadline}\n        cta={cta.cta}\n        className="mt-32"\n      />\n    </div>\n  );\n}\n',
      },
      {
        title: "cta.tsx",
        code: 'import React from "react";\nimport Link from "next/link";\nimport { Button } from "@/lib/components/core/default/button";\nimport { cn } from "@/lib/utils/classes";\n\ninterface CallToActionProps {\n  headline: string;\n  subheadline: string;\n  cta: {\n    label: string;\n    href: string;\n  };\n  className?: string;\n}\n\nexport const CallToAction = (props: CallToActionProps) => {\n  const { headline, subheadline, cta, className } = props;\n  return (\n    <section className={cn("mx-auto max-w-xl text-center", className)}>\n      <h2 className="font-display text-4xl font-semibold tracking-tighter sm:text-5xl">\n        {headline}\n      </h2>\n      <p className="mt-4 text-muted-foreground">{subheadline}</p>\n      <Button asChild size="lg" className="mt-8">\n        <Link href={cta.href}>{cta.label}</Link>\n      </Button>\n    </section>\n  );\n};\n',
      },
      {
        title: "faq.tsx",
        code: 'import React from "react";\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from "@/lib/components/core/default/accordion";\n\ninterface FAQProps {\n  questions: { question: string; answer: string }[];\n  className?: string;\n}\n\nexport const FAQ = (props: FAQProps) => {\n  const { questions, className } = props;\n\n  return (\n    <section className={className}>\n      <h2 className="text-center text-3xl font-semibold tracking-tight sm:text-4xl">\n        Frequently asked questions\n      </h2>\n      <div className="container mt-8 max-w-3xl">\n        <Accordion type="single" collapsible className="w-full">\n          {questions.map((elem, index) => (\n            <AccordionItem key={index} value={index.toString()}>\n              <AccordionTrigger className="text-lg font-semibold">\n                {elem.question}\n              </AccordionTrigger>\n              <AccordionContent className="text-md pb-8">{elem.answer}</AccordionContent>\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </div>\n    </section>\n  );\n};\n',
      },
      {
        title: "pricing-comparaison.tsx",
        code: '"use client";\n\nimport React from "react";\nimport { Label } from "@/lib/components/core/default/label";\nimport { Switch } from "@/lib/components/core/default/switch";\nimport { cn } from "@/lib/utils/classes";\nimport { PricingPlan } from "./pricing-plan";\nimport type { Plan } from "./types";\n\ninterface PricingProps {\n  plans: Plan[];\n  className?: string;\n}\n\nexport const PricingComparaison = (props: PricingProps) => {\n  const { plans, className } = props;\n  const [billing, setBilling] = React.useState<"monthly" | "yearly">("monthly");\n\n  return (\n    <div className={className}>\n      <div className="flex items-center justify-center space-x-4">\n        <Label htmlFor="subscription" className="text-xl">\n          Monthly\n        </Label>\n        <Switch\n          checked={!(billing === "monthly")}\n          onCheckedChange={(checked) => setBilling(checked ? "yearly" : "monthly")}\n          id="subscription"\n        />\n        <Label htmlFor="subscription" className="text-xl">\n          Yearly\n        </Label>\n      </div>\n      <div\n        className={cn("mt-16 grid grid-cols-3 items-center", {\n          "mx-auto max-w-3xl grid-cols-2": plans.length === 2,\n        })}\n      >\n        {plans.map((plan, index) => (\n          <PricingPlan\n            key={plan.name}\n            {...plan}\n            billing={billing}\n            className={\n              index === 0\n                ? "rounded-l-3xl"\n                : index === 1\n                  ? "rounded-3xl"\n                  : index === 2\n                    ? "rounded-r-3xl"\n                    : "rounded-3xl"\n            }\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n',
      },
      {
        title: "pricing-plan.tsx",
        code: 'import { CheckCircleIcon } from "lucide-react";\nimport { Button } from "@/lib/components/core/default/button";\nimport { cn } from "@/lib/utils/classes";\nimport type { Plan } from "./types";\n\ninterface PlanProps extends Plan {\n  billing: "monthly" | "yearly";\n  className?: string;\n}\nexport const PricingPlan = (props: PlanProps) => {\n  const {\n    name,\n    price,\n    description,\n    features,\n    featured = false,\n    billing,\n    className,\n  } = props;\n\n  return (\n    <section\n      className={cn(\n        "relative flex min-h-[530px] flex-col border border-gray-400 bg-card px-6 py-16 shadow-2xl dark:border-gray-800 sm:px-8",\n        featured && "z-10 border-none ring-4 ring-ring/80",\n        className\n      )}\n    >\n      {featured && (\n        <div className="absolute right-8 top-[-4px] z-[-1] translate-y-[-100%] rounded-t-lg bg-ring/80 px-4 py-1 text-white shadow-lg">\n          Most popular\n        </div>\n      )}\n      <h3 className="mt-5 text-xl font-bold">{name}</h3>\n      <p className={cn("mt-2 text-base")}>{description}</p>\n      <p className="order-first text-5xl font-light tracking-tight">\n        {billing === "monthly" ? price.monthly : price.yearly}\n        <span className="ml-2 text-base font-normal text-muted-foreground">\n          billed {billing}\n        </span>\n      </p>\n      <ul\n        role="list"\n        className={cn("order-last mt-10 flex min-h-[100px] flex-col gap-y-3 text-sm", {\n          "min-h-[220px]": featured,\n        })}\n      >\n        {features.map((feature) => (\n          <li key={feature} className="flex">\n            <CheckCircleIcon />\n            <span className="ml-4">{feature}</span>\n          </li>\n        ))}\n      </ul>\n      <Button\n        variant={featured ? "default" : "outline"}\n        className="mt-8"\n        aria-label={`Get started with the ${name} plan for ${billing === "monthly" ? price.monthly : price.yearly}`}\n      >\n        Get started\n      </Button>\n    </section>\n  );\n};\n',
      },
      {
        title: "types.ts",
        code: "export interface Plan {\n  name: string;\n  description: string;\n  features: string[];\n  featured: boolean;\n  price: {\n    monthly: string;\n    yearly: string;\n  };\n  cta: {\n    label: string;\n    href: string;\n  };\n}\n",
      },
    ],
  },
  "demos/components/animations/sparkle-button": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/animations/sparkle-button")
    ),
    code: [
      {
        title: "sparkle-button.tsx",
        code: 'import { SparkleButton } from "@/lib/components/animations/sparkle-button";\n\nexport default function Demo() {\n  return <SparkleButton size="lg">Get started</SparkleButton>;\n}\n',
      },
    ],
  },
  "demos/components/core/accordion": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/accordion")
    ),
    code: [
      {
        title: "accordion.tsx",
        code: 'import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from "@/lib/components/core/default/accordion";\n\nexport default function AccordionDemo() {\n  return (\n    <Accordion type="single" collapsible className="w-full max-w-sm">\n      <AccordionItem value="item-1">\n        <AccordionTrigger>Is it accessible?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It adheres to the WAI-ARIA design pattern.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value="item-2">\n        <AccordionTrigger>Is it styled?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It comes with default styles that matches the other components&apos;\n          aesthetic.\n        </AccordionContent>\n      </AccordionItem>\n      <AccordionItem value="item-3">\n        <AccordionTrigger>Is it animated?</AccordionTrigger>\n        <AccordionContent>\n          Yes. It&apos;s animated by default, but you can disable it if you prefer.\n        </AccordionContent>\n      </AccordionItem>\n    </Accordion>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/avatar-group": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/avatar-group")
    ),
    code: [
      {
        title: "avatar-group.tsx",
        code: 'import {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from "@/lib/components/core/default/avatar";\nimport { AvatarGroup } from "@/lib/components/core/default/avatar-group";\n\nexport default function AvatarDemo() {\n  return (\n    <AvatarGroup>\n      {[\n        { name: "@mehdibha", src: "https://github.com/mehdibha.png" },\n        { name: "@shadcn", src: "https://github.com/shadcn.png" },\n        { name: "@leerob", src: "https://github.com/leerob.png" },\n        { name: "@t3dotgg", src: "https://github.com/t3dotgg.png" },\n        { name: "@joshwcomeau", src: "https://github.com/joshwcomeau.png" },\n      ].map((user) => (\n        <Avatar key={user.name}>\n          <AvatarImage src={user.src} alt={user.name} />\n          <AvatarFallback>{user.name[1]}</AvatarFallback>\n        </Avatar>\n      ))}\n    </AvatarGroup>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/avatar": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar")),
    code: [
      {
        title: "avatar.tsx",
        code: 'import {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from "@/lib/components/core/default/avatar";\n\nexport default function AvatarDemo() {\n  return (\n    <Avatar>\n      <AvatarImage src="https://github.com/mehdibha.png" alt="@mehdibha" />\n      <AvatarFallback>M</AvatarFallback>\n    </Avatar>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/badge": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/badge")),
    code: [
      {
        title: "badge.tsx",
        code: 'import { Badge } from "@/lib/components/core/default/badge";\n\nexport default function BadgeDemo() {\n  return <Badge>Badge</Badge>;\n}\n',
      },
    ],
  },
  "demos/components/core/calendar": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar")),
    code: [
      {
        title: "calendar.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { Calendar } from "@/lib/components/core/default/calendar";\n\nexport default function CalendarDemo() {\n  const [date, setDate] = React.useState<Date | undefined>(new Date());\n\n  return (\n    <Calendar\n      mode="single"\n      selected={date}\n      onSelect={setDate}\n      className="rounded-md border"\n    />\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/card": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/card")),
    code: [
      {
        title: "card.tsx",
        code: 'import * as React from "react";\nimport { Button } from "@/lib/components/core/default/button";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from "@/lib/components/core/default/card";\nimport { Input } from "@/lib/components/core/default/input";\nimport { Label } from "@/lib/components/core/default/label";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from "@/lib/components/core/default/select";\n\nexport default function CardWithForm() {\n  return (\n    <Card className="w-[350px]">\n      <CardHeader>\n        <CardTitle>Create project</CardTitle>\n        <CardDescription>Deploy your new project in one-click.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form>\n          <div className="grid w-full items-center gap-4">\n            <div className="flex flex-col space-y-1.5">\n              <Label htmlFor="name">Name</Label>\n              <Input id="name" placeholder="Name of your project" />\n            </div>\n            <div className="flex flex-col space-y-1.5">\n              <Label htmlFor="framework">Framework</Label>\n              <Select>\n                <SelectTrigger id="framework">\n                  <SelectValue placeholder="Select" />\n                </SelectTrigger>\n                <SelectContent position="popper">\n                  <SelectItem value="next">Next.js</SelectItem>\n                  <SelectItem value="sveltekit">SvelteKit</SelectItem>\n                  <SelectItem value="astro">Astro</SelectItem>\n                  <SelectItem value="nuxt">Nuxt.js</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <CardFooter className="flex justify-between">\n        <Button variant="outline">Cancel</Button>\n        <Button>Deploy</Button>\n      </CardFooter>\n    </Card>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/carousel": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/carousel")),
    code: [
      {
        title: "carousel.tsx",
        code: 'import * as React from "react";\nimport { Card, CardContent } from "@/lib/components/core/default/card";\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from "@/lib/components/core/default/carousel";\n\nexport default function CarouselDemo() {\n  return (\n    <Carousel className="w-full max-w-xs">\n      <CarouselContent>\n        {Array.from({ length: 5 }).map((_, index) => (\n          <CarouselItem key={index}>\n            <div className="p-1">\n              <Card>\n                <CardContent className="flex aspect-square items-center justify-center p-6">\n                  <span className="text-4xl font-semibold">{index + 1}</span>\n                </CardContent>\n              </Card>\n            </div>\n          </CarouselItem>\n        ))}\n      </CarouselContent>\n      <CarouselPrevious />\n      <CarouselNext />\n    </Carousel>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/data-table": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/data-table")
    ),
    code: [
      {
        title: "data-table.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport {\n  type ColumnDef,\n  type ColumnFiltersState,\n  type SortingState,\n  type VisibilityState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from "@tanstack/react-table";\nimport { ArrowUpDown, ChevronDown, MoreHorizontal } from "lucide-react";\nimport { Button } from "@/lib/components/core/default/button";\nimport { Checkbox } from "@/lib/components/core/default/checkbox";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from "@/lib/components/core/default/dropdown-menu";\nimport { Input } from "@/lib/components/core/default/input";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from "@/lib/components/core/default/table";\n\nconst data: Payment[] = [\n  {\n    id: "m5gr84i9",\n    amount: 316,\n    status: "success",\n    email: "ken99@yahoo.com",\n  },\n  {\n    id: "3u1reuv4",\n    amount: 242,\n    status: "success",\n    email: "Abe45@gmail.com",\n  },\n  {\n    id: "derv1ws0",\n    amount: 837,\n    status: "processing",\n    email: "Monserrat44@gmail.com",\n  },\n  {\n    id: "5kma53ae",\n    amount: 874,\n    status: "success",\n    email: "Silas22@gmail.com",\n  },\n];\n\nexport type Payment = {\n  id: string;\n  amount: number;\n  status: "pending" | "processing" | "success" | "failed";\n  email: string;\n};\n\nexport const columns: ColumnDef<Payment>[] = [\n  {\n    id: "select",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && "indeterminate")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label="Select all"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label="Select row"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: "status",\n    header: "Status",\n    cell: ({ row }) => <div className="capitalize">{row.getValue("status")}</div>,\n  },\n  {\n    accessorKey: "email",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant="ghost"\n          onClick={() => column.toggleSorting(column.getIsSorted() === "asc")}\n        >\n          Email\n          <ArrowUpDown className="ml-2 h-4 w-4" />\n        </Button>\n      );\n    },\n    cell: ({ row }) => <div className="lowercase">{row.getValue("email")}</div>,\n  },\n  {\n    accessorKey: "amount",\n    header: () => <div className="text-right">Amount</div>,\n    cell: ({ row }) => {\n      const amount = parseFloat(row.getValue("amount"));\n\n      // Format the amount as a dollar amount\n      const formatted = new Intl.NumberFormat("en-US", {\n        style: "currency",\n        currency: "USD",\n      }).format(amount);\n\n      return <div className="text-right font-medium">{formatted}</div>;\n    },\n  },\n  {\n    id: "actions",\n    enableHiding: false,\n    cell: ({ row }) => {\n      const payment = row.original;\n\n      return (\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant="ghost" className="h-8 w-8 p-0">\n              <span className="sr-only">Open menu</span>\n              <MoreHorizontal className="h-4 w-4" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align="end">\n            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n            <DropdownMenuItem onClick={() => navigator.clipboard.writeText(payment.id)}>\n              Copy payment ID\n            </DropdownMenuItem>\n            <DropdownMenuSeparator />\n            <DropdownMenuItem>View customer</DropdownMenuItem>\n            <DropdownMenuItem>View payment details</DropdownMenuItem>\n          </DropdownMenuContent>\n        </DropdownMenu>\n      );\n    },\n  },\n];\n\nexport default function DataTableDemo() {\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([]);\n  const [columnVisibility, setColumnVisibility] = React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div className="w-full">\n      <div className="flex items-center pb-4">\n        <Input\n          placeholder="Filter emails..."\n          value={(table.getColumn("email")?.getFilterValue() as string) ?? ""}\n          onChange={(event) =>\n            table.getColumn("email")?.setFilterValue(event.target.value)\n          }\n          className="max-w-sm"\n        />\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant="outline" className="ml-auto">\n              Columns <ChevronDown className="ml-2 h-4 w-4" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align="end">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => {\n                return (\n                  <DropdownMenuCheckboxItem\n                    key={column.id}\n                    className="capitalize"\n                    checked={column.getIsVisible()}\n                    onCheckedChange={(value) => column.toggleVisibility(!!value)}\n                  >\n                    {column.id}\n                  </DropdownMenuCheckboxItem>\n                );\n              })}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n      <div className="rounded-md border">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(header.column.columnDef.header, header.getContext())}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow key={row.id} data-state={row.getIsSelected() && "selected"}>\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={columns.length} className="h-24 text-center">\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className="flex items-center justify-end space-x-2 pt-4">\n        <div className="flex-1 text-sm text-muted-foreground">\n          {table.getFilteredSelectedRowModel().rows.length} of{" "}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className="space-x-2">\n          <Button\n            variant="outline"\n            size="sm"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant="outline"\n            size="sm"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/seperator": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/seperator")
    ),
    code: [
      {
        title: "seperator.tsx",
        code: 'import { Separator } from "@/lib/components/core/default/separator";\n\nexport default function SeparatorDemo() {\n  return (\n    <div>\n      <div className="space-y-1">\n        <h4 className="text-sm font-medium leading-none">Radix Primitives</h4>\n        <p className="text-sm text-muted-foreground">\n          An open-source UI component library.\n        </p>\n      </div>\n      <Separator className="my-4" />\n      <div className="flex h-5 items-center space-x-4 text-sm">\n        <div>Blog</div>\n        <Separator orientation="vertical" />\n        <div>Docs</div>\n        <Separator orientation="vertical" />\n        <div>Source</div>\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/table": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/table")),
    code: [
      {
        title: "table.tsx",
        code: 'import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from "@/lib/components/core/default/table";\n\nconst invoices = [\n  {\n    invoice: "INV001",\n    paymentStatus: "Paid",\n    totalAmount: "$250.00",\n    paymentMethod: "Credit Card",\n  },\n  {\n    invoice: "INV002",\n    paymentStatus: "Pending",\n    totalAmount: "$150.00",\n    paymentMethod: "PayPal",\n  },\n  {\n    invoice: "INV003",\n    paymentStatus: "Unpaid",\n    totalAmount: "$350.00",\n    paymentMethod: "Bank Transfer",\n  },\n  {\n    invoice: "INV004",\n    paymentStatus: "Paid",\n    totalAmount: "$450.00",\n    paymentMethod: "Credit Card",\n  },\n  {\n    invoice: "INV005",\n    paymentStatus: "Paid",\n    totalAmount: "$550.00",\n    paymentMethod: "PayPal",\n  },\n  {\n    invoice: "INV006",\n    paymentStatus: "Pending",\n    totalAmount: "$200.00",\n    paymentMethod: "Bank Transfer",\n  },\n  {\n    invoice: "INV007",\n    paymentStatus: "Unpaid",\n    totalAmount: "$300.00",\n    paymentMethod: "Credit Card",\n  },\n];\n\nexport default function TableDemo() {\n  return (\n    <Table>\n      <TableCaption>A list of your recent invoices.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead className="w-[100px]">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Method</TableHead>\n          <TableHead className="text-right">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map((invoice) => (\n          <TableRow key={invoice.invoice}>\n            <TableCell className="font-medium">{invoice.invoice}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell>{invoice.paymentMethod}</TableCell>\n            <TableCell className="text-right">{invoice.totalAmount}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={3}>Total</TableCell>\n          <TableCell className="text-right">$2,500.00</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/alert": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert")),
    code: [
      {
        title: "alert.tsx",
        code: 'import { Terminal } from "lucide-react";\nimport { Alert, AlertDescription, AlertTitle } from "@/lib/components/core/default/alert";\n\nexport default function AlertDemo() {\n  return (\n    <Alert>\n      <Terminal className="h-4 w-4" />\n      <AlertTitle>Heads up!</AlertTitle>\n      <AlertDescription>\n        You can add components to your app using the cli.\n      </AlertDescription>\n    </Alert>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/progress": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress")),
    code: [
      {
        title: "progress.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { Progress } from "@/lib/components/core/default/progress";\n\nexport default function ProgressDemo() {\n  const [progress, setProgress] = React.useState(0);\n\n  React.useEffect(() => {\n    const timer1 = setTimeout(() => setProgress(13), 800);\n    const timer2 = setTimeout(() => setProgress(66), 1700);\n    const timer3 = setTimeout(() => setProgress(100), 2500);\n    return () => {\n      clearTimeout(timer1);\n      clearTimeout(timer2);\n      clearTimeout(timer3);\n    };\n  }, []);\n\n  return <Progress value={progress} className="w-[60%]" />;\n}\n',
      },
    ],
  },
  "demos/components/core/skeleton": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton")),
    code: [
      {
        title: "skeleton.tsx",
        code: 'import { Skeleton } from "@/lib/components/core/default/skeleton";\n\nexport default function SkeletonDemo() {\n  return (\n    <div className="flex items-center space-x-4">\n      <Skeleton className="h-12 w-12 rounded-full" />\n      <div className="space-y-2">\n        <Skeleton className="h-4 w-[250px]" />\n        <Skeleton className="h-4 w-[200px]" />\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/sonner": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/sonner")),
    code: [
      {
        title: "sonner.tsx",
        code: '"use client";\n\nimport { toast } from "sonner";\nimport { Button } from "@/lib/components/core/default/button";\n\nexport default function SonnerDemo() {\n  return (\n    <Button\n      variant="outline"\n      onClick={() =>\n        toast("Event has been created", {\n          description: "Sunday, December 03, 2023 at 9:00 AM",\n          action: {\n            label: "Undo",\n            onClick: () => console.log("Undo"),\n          },\n        })\n      }\n    >\n      Show Toast\n    </Button>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/toast": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast")),
    code: [
      {
        title: "toast.tsx",
        code: '"use client";\n\nimport { Button } from "@/lib/components/core/default/button";\nimport { ToastAction } from "@/lib/components/core/default/toast";\nimport { useToast } from "@/lib/components/core/default/use-toast";\n\nexport default function ToastDemo() {\n  const { toast } = useToast();\n\n  return (\n    <Button\n      variant="outline"\n      onClick={() => {\n        toast({\n          title: "Scheduled: Catch up ",\n          description: "Friday, February 10, 2023 at 5:57 PM",\n          action: <ToastAction altText="Goto schedule to undo">Undo</ToastAction>,\n        });\n      }}\n    >\n      Add to calendar\n    </Button>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/button": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button")),
    code: [
      {
        title: "button.tsx",
        code: 'import { Button } from "@/lib/components/core/default/button";\n\nexport default function ButtonDemo() {\n  return <Button>Button</Button>;\n}\n',
      },
    ],
  },
  "demos/components/core/checkbox": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox")),
    code: [
      {
        title: "checkbox.tsx",
        code: '"use client";\n\nimport { Checkbox } from "@/lib/components/core/default/checkbox";\n\nexport default function CheckboxDemo() {\n  return (\n    <div className="flex items-center space-x-2">\n      <Checkbox id="terms" />\n      <label\n        htmlFor="terms"\n        className="text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"\n      >\n        Accept terms and conditions\n      </label>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/combobox": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox")),
    code: [
      {
        title: "combobox.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { Check, ChevronsUpDown } from "lucide-react";\nimport { Button } from "@/lib/components/core/default/button";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n} from "@/lib/components/core/default/command";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from "@/lib/components/core/default/popover";\nimport { cn } from "@/lib/utils/classes";\n\nconst frameworks = [\n  {\n    value: "next.js",\n    label: "Next.js",\n  },\n  {\n    value: "sveltekit",\n    label: "SvelteKit",\n  },\n  {\n    value: "nuxt.js",\n    label: "Nuxt.js",\n  },\n  {\n    value: "remix",\n    label: "Remix",\n  },\n  {\n    value: "astro",\n    label: "Astro",\n  },\n];\n\nexport default function ComboboxDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState("");\n\n  return (\n    <Popover open={open} onOpenChange={setOpen}>\n      <PopoverTrigger asChild>\n        <Button\n          variant="outline"\n          role="combobox"\n          aria-expanded={open}\n          className="w-[200px] justify-between"\n        >\n          {value\n            ? frameworks.find((framework) => framework.value === value)?.label\n            : "Select framework..."}\n          <ChevronsUpDown className="ml-2 h-4 w-4 shrink-0 opacity-50" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className="w-[200px] p-0">\n        <Command>\n          <CommandInput placeholder="Search framework..." />\n          <CommandEmpty>No framework found.</CommandEmpty>\n          <CommandGroup>\n            {frameworks.map((framework) => (\n              <CommandItem\n                key={framework.value}\n                value={framework.value}\n                onSelect={(currentValue) => {\n                  setValue(currentValue === value ? "" : currentValue);\n                  setOpen(false);\n                }}\n              >\n                <Check\n                  className={cn(\n                    "mr-2 h-4 w-4",\n                    value === framework.value ? "opacity-100" : "opacity-0"\n                  )}\n                />\n                {framework.label}\n              </CommandItem>\n            ))}\n          </CommandGroup>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/input": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/input")),
    code: [
      {
        title: "input.tsx",
        code: 'import { Input } from "@/lib/components/core/default/input";\n\nexport default function InputDemo() {\n  return <Input type="email" placeholder="Email" />;\n}\n',
      },
    ],
  },
  "demos/components/core/label": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/label")),
    code: [
      {
        title: "label.tsx",
        code: 'import { Input } from "@/lib/components/core/default/input";\nimport { Label } from "@/lib/components/core/default/label";\n\nexport default function LabelDemo() {\n  return (\n    <div>\n      <div className="flex items-center space-x-4">\n        <Label htmlFor="name">Name</Label>\n        <Input id="name" />\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/menu-bar": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu-bar")),
    code: [
      {
        title: "menu-bar.tsx",
        code: 'import {\n  Menubar,\n  MenubarCheckboxItem,\n  MenubarContent,\n  MenubarItem,\n  MenubarMenu,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarSeparator,\n  MenubarShortcut,\n  MenubarSub,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarTrigger,\n} from "@/lib/components/core/default/menubar";\n\nexport default function MenubarDemo() {\n  return (\n    <Menubar>\n      <MenubarMenu>\n        <MenubarTrigger>File</MenubarTrigger>\n        <MenubarContent>\n          <MenubarItem>\n            New Tab <MenubarShortcut>⌘T</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem>\n            New Window <MenubarShortcut>⌘N</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem disabled>New Incognito Window</MenubarItem>\n          <MenubarSeparator />\n          <MenubarSub>\n            <MenubarSubTrigger>Share</MenubarSubTrigger>\n            <MenubarSubContent>\n              <MenubarItem>Email link</MenubarItem>\n              <MenubarItem>Messages</MenubarItem>\n              <MenubarItem>Notes</MenubarItem>\n            </MenubarSubContent>\n          </MenubarSub>\n          <MenubarSeparator />\n          <MenubarItem>\n            Print... <MenubarShortcut>⌘P</MenubarShortcut>\n          </MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n      <MenubarMenu>\n        <MenubarTrigger>Edit</MenubarTrigger>\n        <MenubarContent>\n          <MenubarItem>\n            Undo <MenubarShortcut>⌘Z</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem>\n            Redo <MenubarShortcut>⇧⌘Z</MenubarShortcut>\n          </MenubarItem>\n          <MenubarSeparator />\n          <MenubarSub>\n            <MenubarSubTrigger>Find</MenubarSubTrigger>\n            <MenubarSubContent>\n              <MenubarItem>Search the web</MenubarItem>\n              <MenubarSeparator />\n              <MenubarItem>Find...</MenubarItem>\n              <MenubarItem>Find Next</MenubarItem>\n              <MenubarItem>Find Previous</MenubarItem>\n            </MenubarSubContent>\n          </MenubarSub>\n          <MenubarSeparator />\n          <MenubarItem>Cut</MenubarItem>\n          <MenubarItem>Copy</MenubarItem>\n          <MenubarItem>Paste</MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n      <MenubarMenu>\n        <MenubarTrigger>View</MenubarTrigger>\n        <MenubarContent>\n          <MenubarCheckboxItem>Always Show Bookmarks Bar</MenubarCheckboxItem>\n          <MenubarCheckboxItem checked>Always Show Full URLs</MenubarCheckboxItem>\n          <MenubarSeparator />\n          <MenubarItem inset>\n            Reload <MenubarShortcut>⌘R</MenubarShortcut>\n          </MenubarItem>\n          <MenubarItem disabled inset>\n            Force Reload <MenubarShortcut>⇧⌘R</MenubarShortcut>\n          </MenubarItem>\n          <MenubarSeparator />\n          <MenubarItem inset>Toggle Fullscreen</MenubarItem>\n          <MenubarSeparator />\n          <MenubarItem inset>Hide Sidebar</MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n      <MenubarMenu>\n        <MenubarTrigger>Profiles</MenubarTrigger>\n        <MenubarContent>\n          <MenubarRadioGroup value="benoit">\n            <MenubarRadioItem value="andy">Andy</MenubarRadioItem>\n            <MenubarRadioItem value="benoit">Benoit</MenubarRadioItem>\n            <MenubarRadioItem value="Luis">Luis</MenubarRadioItem>\n          </MenubarRadioGroup>\n          <MenubarSeparator />\n          <MenubarItem inset>Edit...</MenubarItem>\n          <MenubarSeparator />\n          <MenubarItem inset>Add Profile...</MenubarItem>\n        </MenubarContent>\n      </MenubarMenu>\n    </Menubar>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/radio-group": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/radio-group")
    ),
    code: [
      {
        title: "radio-group.tsx",
        code: 'import { Label } from "@/lib/components/core/default/label";\nimport { RadioGroup, RadioGroupItem } from "@/lib/components/core/default/radio-group";\n\nexport default function RadioGroupDemo() {\n  return (\n    <RadioGroup defaultValue="comfortable">\n      <div className="flex items-center space-x-3">\n        <RadioGroupItem value="default" id="r1" />\n        <Label htmlFor="r1" className="text-lg">\n          Default\n        </Label>\n      </div>\n      <div className="flex items-center space-x-3">\n        <RadioGroupItem value="comfortable" id="r2" />\n        <Label htmlFor="r2" className="text-lg">\n          Comfortable\n        </Label>\n      </div>\n      <div className="flex items-center space-x-3">\n        <RadioGroupItem value="compact" id="r3" />\n        <Label htmlFor="r3" className="text-lg">\n          Compact\n        </Label>\n      </div>\n    </RadioGroup>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/select": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select")),
    code: [
      {
        title: "select.tsx",
        code: 'import * as React from "react";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectTrigger,\n  SelectValue,\n} from "@/lib/components/core/default/select";\n\nexport default function SelectDemo() {\n  return (\n    <Select>\n      <SelectTrigger className="w-[180px]">\n        <SelectValue placeholder="Select a fruit" />\n      </SelectTrigger>\n      <SelectContent>\n        <SelectGroup>\n          <SelectLabel>Fruits</SelectLabel>\n          <SelectItem value="apple">Apple</SelectItem>\n          <SelectItem value="banana">Banana</SelectItem>\n          <SelectItem value="blueberry">Blueberry</SelectItem>\n          <SelectItem value="grapes">Grapes</SelectItem>\n          <SelectItem value="pineapple">Pineapple</SelectItem>\n        </SelectGroup>\n      </SelectContent>\n    </Select>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/slider": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider")),
    code: [
      {
        title: "slider.tsx",
        code: 'import { Slider } from "@/lib/components/core/default/slider";\nimport { cn } from "@/lib/utils/classes";\n\ntype SliderProps = React.ComponentProps<typeof Slider>;\n\nexport default function SliderDemo({ className, ...props }: SliderProps) {\n  return (\n    <Slider\n      defaultValue={[50]}\n      max={100}\n      step={1}\n      className={cn("w-[60%]", className)}\n      {...props}\n    />\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/switch": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch")),
    code: [
      {
        title: "switch.tsx",
        code: 'import { Label } from "@/lib/components/core/default/label";\nimport { Switch } from "@/lib/components/core/default/switch";\n\nexport default function SwitchDemo() {\n  return (\n    <div className="flex items-center space-x-2">\n      <Switch id="airplane-mode" />\n      <Label htmlFor="airplane-mode">Airplane Mode</Label>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/tabs": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs")),
    code: [
      {
        title: "tabs.tsx",
        code: 'import { Button } from "@/lib/components/core/default/button";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from "@/lib/components/core/default/card";\nimport { Input } from "@/lib/components/core/default/input";\nimport { Label } from "@/lib/components/core/default/label";\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from "@/lib/components/core/default/tabs";\n\nexport default function TabsDemo() {\n  return (\n    <Tabs defaultValue="account" className="w-[400px]">\n      <TabsList className="grid w-full grid-cols-2">\n        <TabsTrigger value="account">Account</TabsTrigger>\n        <TabsTrigger value="password">Password</TabsTrigger>\n      </TabsList>\n      <TabsContent value="account">\n        <Card>\n          <CardHeader>\n            <CardTitle>Account</CardTitle>\n            <CardDescription>\n              Make changes to your account here. Click save when you&apos;re done.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className="space-y-2">\n            <div className="space-y-1">\n              <Label htmlFor="name">Name</Label>\n              <Input id="name" defaultValue="Pedro Duarte" />\n            </div>\n            <div className="space-y-1">\n              <Label htmlFor="username">Username</Label>\n              <Input id="username" defaultValue="@peduarte" />\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button>Save changes</Button>\n          </CardFooter>\n        </Card>\n      </TabsContent>\n      <TabsContent value="password">\n        <Card>\n          <CardHeader>\n            <CardTitle>Password</CardTitle>\n            <CardDescription>\n              Change your password here. After saving, you&apos;ll be logged out.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className="space-y-2">\n            <div className="space-y-1">\n              <Label htmlFor="current">Current password</Label>\n              <Input id="current" type="password" />\n            </div>\n            <div className="space-y-1">\n              <Label htmlFor="new">New password</Label>\n              <Input id="new" type="password" />\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button>Save password</Button>\n          </CardFooter>\n        </Card>\n      </TabsContent>\n    </Tabs>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/textarea": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/textarea")),
    code: [
      {
        title: "textarea.tsx",
        code: 'import { Textarea } from "@/lib/components/core/default/textarea";\n\nexport default function TextareaDemo() {\n  return <Textarea placeholder="Type your message here." />;\n}\n',
      },
    ],
  },
  "demos/components/core/toggle-group": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/toggle-group")
    ),
    code: [
      {
        title: "toggle-group.tsx",
        code: 'import { Bold, Italic, Underline } from "lucide-react";\nimport { ToggleGroup, ToggleGroupItem } from "@/lib/components/core/default/toggle-group";\n\nexport default function ToggleGroupDemo() {\n  return (\n    <ToggleGroup type="multiple">\n      <ToggleGroupItem value="bold" aria-label="Toggle bold">\n        <Bold className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="italic" aria-label="Toggle italic">\n        <Italic className="h-4 w-4" />\n      </ToggleGroupItem>\n      <ToggleGroupItem value="underline" aria-label="Toggle underline">\n        <Underline className="h-4 w-4" />\n      </ToggleGroupItem>\n    </ToggleGroup>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/toggle": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle")),
    code: [
      {
        title: "toggle.tsx",
        code: 'import { Bold } from "lucide-react";\nimport { Toggle } from "@/lib/components/core/default/toggle";\n\nexport default function ToggleDemo() {\n  return (\n    <Toggle aria-label="Toggle bold">\n      <Bold className="h-4 w-4" />\n    </Toggle>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/aspect-ratio": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/aspect-ratio")
    ),
    code: [
      {
        title: "aspect-ratio.tsx",
        code: 'import Image from "next/image";\nimport { AspectRatio } from "@/lib/components/core/default/aspect-ratio";\n\nexport default function AspectRatioDemo() {\n  return (\n    <AspectRatio ratio={16 / 9} className="bg-muted">\n      <Image\n        src="https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80"\n        alt="Photo by Drew Beamer"\n        fill\n        className="rounded-md object-cover"\n      />\n    </AspectRatio>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/resizable": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/resizable")
    ),
    code: [
      {
        title: "resizable.tsx",
        code: 'import {\n  ResizableHandle,\n  ResizablePanel,\n  ResizablePanelGroup,\n} from "@/lib/components/core/default/resizable";\n\nexport default function ResizableDemo() {\n  return (\n    <ResizablePanelGroup direction="horizontal" className="max-w-md rounded-lg border">\n      <ResizablePanel defaultSize={50}>\n        <div className="flex h-[200px] items-center justify-center p-6">\n          <span className="font-semibold">One</span>\n        </div>\n      </ResizablePanel>\n      <ResizableHandle withHandle />\n      <ResizablePanel defaultSize={50}>\n        <ResizablePanelGroup direction="vertical">\n          <ResizablePanel defaultSize={25}>\n            <div className="flex h-full items-center justify-center p-6">\n              <span className="font-semibold">Two</span>\n            </div>\n          </ResizablePanel>\n          <ResizableHandle withHandle />\n          <ResizablePanel defaultSize={75}>\n            <div className="flex h-full items-center justify-center p-6">\n              <span className="font-semibold">Three</span>\n            </div>\n          </ResizablePanel>\n        </ResizablePanelGroup>\n      </ResizablePanel>\n    </ResizablePanelGroup>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/scroll-area": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/scroll-area")
    ),
    code: [
      {
        title: "scroll-area.tsx",
        code: 'import * as React from "react";\nimport { ScrollArea } from "@/lib/components/core/default/scroll-area";\nimport { Separator } from "@/lib/components/core/default/separator";\n\nconst tags = Array.from({ length: 50 }).map((_, i, a) => `v1.2.0-beta.${a.length - i}`);\n\nexport default function ScrollAreaDemo() {\n  return (\n    <ScrollArea className="h-72 w-48 rounded-md border">\n      <div className="p-4">\n        <h4 className="mb-4 text-sm font-medium leading-none">Tags</h4>\n        {tags.map((tag) => (\n          <>\n            <div key={tag} className="text-sm">\n              {tag}\n            </div>\n            <Separator className="my-2" />\n          </>\n        ))}\n      </div>\n    </ScrollArea>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/collapsible": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/collapsible")
    ),
    code: [
      {
        title: "collapsible.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { ChevronsUpDown } from "lucide-react";\nimport { Button } from "@/lib/components/core/default/button";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from "@/lib/components/core/default/collapsible";\n\nexport default function CollapsibleDemo() {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <Collapsible open={isOpen} onOpenChange={setIsOpen} className="w-[350px] space-y-2">\n      <div className="flex items-center justify-between space-x-4 px-4">\n        <h4 className="text-sm font-semibold">@peduarte starred 3 repositories</h4>\n        <CollapsibleTrigger asChild>\n          <Button variant="ghost" size="sm" className="w-9 p-0">\n            <ChevronsUpDown className="h-4 w-4" />\n            <span className="sr-only">Toggle</span>\n          </Button>\n        </CollapsibleTrigger>\n      </div>\n      <div className="rounded-md border px-4 py-3 font-mono text-sm">\n        @radix-ui/primitives\n      </div>\n      <CollapsibleContent className="space-y-2">\n        <div className="rounded-md border px-4 py-3 font-mono text-sm">\n          @radix-ui/colors\n        </div>\n        <div className="rounded-md border px-4 py-3 font-mono text-sm">\n          @stitches/react\n        </div>\n      </CollapsibleContent>\n    </Collapsible>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/command": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/command")),
    code: [
      {
        title: "command.tsx",
        code: 'import { Calculator, Calendar, CreditCard, Settings, Smile, User } from "lucide-react";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n  CommandShortcut,\n} from "@/lib/components/core/default/command";\n\nexport default function CommandDemo() {\n  return (\n    <Command className="rounded-lg border shadow-md">\n      <CommandInput placeholder="Type a command or search..." />\n      <CommandList>\n        <CommandEmpty>No results found.</CommandEmpty>\n        <CommandGroup heading="Suggestions">\n          <CommandItem>\n            <Calendar className="mr-2 h-4 w-4" />\n            <span>Calendar</span>\n          </CommandItem>\n          <CommandItem>\n            <Smile className="mr-2 h-4 w-4" />\n            <span>Search Emoji</span>\n          </CommandItem>\n          <CommandItem>\n            <Calculator className="mr-2 h-4 w-4" />\n            <span>Calculator</span>\n          </CommandItem>\n        </CommandGroup>\n        <CommandSeparator />\n        <CommandGroup heading="Settings">\n          <CommandItem>\n            <User className="mr-2 h-4 w-4" />\n            <span>Profile</span>\n            <CommandShortcut>⌘P</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <CreditCard className="mr-2 h-4 w-4" />\n            <span>Billing</span>\n            <CommandShortcut>⌘B</CommandShortcut>\n          </CommandItem>\n          <CommandItem>\n            <Settings className="mr-2 h-4 w-4" />\n            <span>Settings</span>\n            <CommandShortcut>⌘S</CommandShortcut>\n          </CommandItem>\n        </CommandGroup>\n      </CommandList>\n    </Command>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/navigation-menu": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/navigation-menu")
    ),
    code: [
      {
        title: "navigation-menu.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport Link from "next/link";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from "@/lib/components/core/default/navigation-menu";\nimport { cn } from "@/lib/utils/classes";\n\nconst components: { title: string; href: string; description: string }[] = [\n  {\n    title: "Alert Dialog",\n    href: "/docs/primitives/alert-dialog",\n    description:\n      "A modal dialog that interrupts the user with important content and expects a response.",\n  },\n  {\n    title: "Hover Card",\n    href: "/docs/primitives/hover-card",\n    description: "For sighted users to preview content available behind a link.",\n  },\n  {\n    title: "Progress",\n    href: "/docs/primitives/progress",\n    description:\n      "Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.",\n  },\n  {\n    title: "Scroll-area",\n    href: "/docs/primitives/scroll-area",\n    description: "Visually or semantically separates content.",\n  },\n  {\n    title: "Tabs",\n    href: "/docs/primitives/tabs",\n    description:\n      "A set of layered sections of content—known as tab panels—that are displayed one at a time.",\n  },\n  {\n    title: "Tooltip",\n    href: "/docs/primitives/tooltip",\n    description:\n      "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.",\n  },\n];\n\nexport default function NavigationMenuDemo() {\n  return (\n    <NavigationMenu>\n      <NavigationMenuList>\n        <NavigationMenuItem>\n          <NavigationMenuTrigger>Getting started</NavigationMenuTrigger>\n          <NavigationMenuContent>\n            <ul className="grid gap-3 p-6 md:w-[400px] lg:w-[500px] lg:grid-cols-[.75fr_1fr]">\n              <li className="row-span-3">\n                <NavigationMenuLink asChild>\n                  <a\n                    className="flex h-full w-full select-none flex-col justify-end rounded-md bg-gradient-to-b from-muted/50 to-muted p-6 no-underline outline-none focus:shadow-md"\n                    href="/"\n                  >\n                    {/* <Icons.logo className="h-6 w-6" /> */}\n                    <div className="mb-2 mt-4 text-lg font-medium">shadcn/ui</div>\n                    <p className="text-sm leading-tight text-muted-foreground">\n                      Beautifully designed components that you can copy and paste into\n                      your apps. Accessible. Customizable. Open Source.\n                    </p>\n                  </a>\n                </NavigationMenuLink>\n              </li>\n              <ListItem href="/docs" title="Introduction">\n                Re-usable components built using Radix UI and Tailwind CSS.\n              </ListItem>\n              <ListItem href="/docs/installation" title="Installation">\n                How to install dependencies and structure your app.\n              </ListItem>\n              <ListItem href="/docs/primitives/typography" title="Typography">\n                Styles for headings, paragraphs, lists...etc\n              </ListItem>\n            </ul>\n          </NavigationMenuContent>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <NavigationMenuTrigger>Components</NavigationMenuTrigger>\n          <NavigationMenuContent>\n            <ul className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px] ">\n              {components.map((component) => (\n                <ListItem\n                  key={component.title}\n                  title={component.title}\n                  href={component.href}\n                >\n                  {component.description}\n                </ListItem>\n              ))}\n            </ul>\n          </NavigationMenuContent>\n        </NavigationMenuItem>\n        <NavigationMenuItem>\n          <Link href="/docs" legacyBehavior passHref>\n            <NavigationMenuLink className={navigationMenuTriggerStyle()}>\n              Documentation\n            </NavigationMenuLink>\n          </Link>\n        </NavigationMenuItem>\n      </NavigationMenuList>\n    </NavigationMenu>\n  );\n}\n\nconst ListItem = React.forwardRef<\n  React.ElementRef<"a">,\n  React.ComponentPropsWithoutRef<"a">\n>(({ className, title, children, ...props }, ref) => {\n  return (\n    <li>\n      <NavigationMenuLink asChild>\n        <a\n          ref={ref}\n          className={cn(\n            "block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground",\n            className\n          )}\n          {...props}\n        >\n          <div className="text-sm font-medium leading-none">{title}</div>\n          <p className="line-clamp-2 text-sm leading-snug text-muted-foreground">\n            {children}\n          </p>\n        </a>\n      </NavigationMenuLink>\n    </li>\n  );\n});\nListItem.displayName = "ListItem";\n',
      },
    ],
  },
  "demos/components/core/pagination": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/pagination")
    ),
    code: [
      {
        title: "pagination.tsx",
        code: 'import {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n} from "@/lib/components/core/default/pagination";\n\nexport default function PaginationDemo() {\n  return (\n    <Pagination>\n      <PaginationContent>\n        <PaginationItem>\n          <PaginationPrevious href="#" />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href="#">1</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href="#" isActive>\n            2\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationLink href="#">3</PaginationLink>\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationEllipsis />\n        </PaginationItem>\n        <PaginationItem>\n          <PaginationNext href="#" />\n        </PaginationItem>\n      </PaginationContent>\n    </Pagination>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/alert-dialog": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/alert-dialog")
    ),
    code: [
      {
        title: "alert-dialog.tsx",
        code: 'import {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from "@/lib/components/core/default/alert-dialog";\nimport { Button } from "@/lib/components/core/default/button";\n\nexport default function AlertDialogDemo() {\n  return (\n    <AlertDialog>\n      <AlertDialogTrigger asChild>\n        <Button variant="outline">Show Dialog</Button>\n      </AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Are you absolutely sure?</AlertDialogTitle>\n          <AlertDialogDescription>\n            This action cannot be undone. This will permanently delete your account and\n            remove your data from our servers.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction>Continue</AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialog>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/context-menu": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/context-menu")
    ),
    code: [
      {
        title: "context-menu.tsx",
        code: 'import {\n  ContextMenu,\n  ContextMenuCheckboxItem,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuLabel,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuTrigger,\n} from "@/lib/components/core/default/context-menu";\n\nexport default function ContextMenuDemo() {\n  return (\n    <ContextMenu>\n      <ContextMenuTrigger className="flex h-[150px] w-[300px] items-center justify-center rounded-md border border-dashed text-sm">\n        Right click here\n      </ContextMenuTrigger>\n      <ContextMenuContent className="w-64">\n        <ContextMenuItem inset>\n          Back\n          <ContextMenuShortcut>⌘[</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset disabled>\n          Forward\n          <ContextMenuShortcut>⌘]</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuItem inset>\n          Reload\n          <ContextMenuShortcut>⌘R</ContextMenuShortcut>\n        </ContextMenuItem>\n        <ContextMenuSub>\n          <ContextMenuSubTrigger inset>More Tools</ContextMenuSubTrigger>\n          <ContextMenuSubContent className="w-48">\n            <ContextMenuItem>\n              Save Page As...\n              <ContextMenuShortcut>⇧⌘S</ContextMenuShortcut>\n            </ContextMenuItem>\n            <ContextMenuItem>Create Shortcut...</ContextMenuItem>\n            <ContextMenuItem>Name Window...</ContextMenuItem>\n            <ContextMenuSeparator />\n            <ContextMenuItem>Developer Tools</ContextMenuItem>\n          </ContextMenuSubContent>\n        </ContextMenuSub>\n        <ContextMenuSeparator />\n        <ContextMenuCheckboxItem checked>\n          Show Bookmarks Bar\n          <ContextMenuShortcut>⌘⇧B</ContextMenuShortcut>\n        </ContextMenuCheckboxItem>\n        <ContextMenuCheckboxItem>Show Full URLs</ContextMenuCheckboxItem>\n        <ContextMenuSeparator />\n        <ContextMenuRadioGroup value="pedro">\n          <ContextMenuLabel inset>People</ContextMenuLabel>\n          <ContextMenuSeparator />\n          <ContextMenuRadioItem value="pedro">Pedro Duarte</ContextMenuRadioItem>\n          <ContextMenuRadioItem value="colm">Colm Tuite</ContextMenuRadioItem>\n        </ContextMenuRadioGroup>\n      </ContextMenuContent>\n    </ContextMenu>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/dialog": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog")),
    code: [
      {
        title: "dialog.tsx",
        code: 'import { Button } from "@/lib/components/core/default/button";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from "@/lib/components/core/default/dialog";\nimport { Input } from "@/lib/components/core/default/input";\nimport { Label } from "@/lib/components/core/default/label";\n\nexport default function DialogDemo() {\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button variant="outline">Edit Profile</Button>\n      </DialogTrigger>\n      <DialogContent className="sm:max-w-[425px]">\n        <DialogHeader>\n          <DialogTitle>Edit profile</DialogTitle>\n          <DialogDescription>\n            Make changes to your profile here. Click save when you&apos;re done.\n          </DialogDescription>\n        </DialogHeader>\n        <div className="grid gap-4 py-4">\n          <div className="grid grid-cols-4 items-center gap-4">\n            <Label htmlFor="name" className="text-right">\n              Name\n            </Label>\n            <Input id="name" defaultValue="Pedro Duarte" className="col-span-3" />\n          </div>\n          <div className="grid grid-cols-4 items-center gap-4">\n            <Label htmlFor="username" className="text-right">\n              Username\n            </Label>\n            <Input id="username" defaultValue="@peduarte" className="col-span-3" />\n          </div>\n        </div>\n        <DialogFooter>\n          <Button type="submit">Save changes</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/drawer": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer")),
    code: [
      {
        title: "drawer.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { Minus, Plus } from "lucide-react";\nimport { Bar, BarChart, ResponsiveContainer } from "recharts";\nimport { Button } from "@/lib/components/core/default/button";\nimport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from "@/lib/components/core/default/drawer";\n\nconst data = [\n  {\n    goal: 400,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 239,\n  },\n  {\n    goal: 300,\n  },\n  {\n    goal: 200,\n  },\n  {\n    goal: 278,\n  },\n  {\n    goal: 189,\n  },\n  {\n    goal: 349,\n  },\n];\n\nexport default function DrawerDemo() {\n  const [goal, setGoal] = React.useState(350);\n\n  function onClick(adjustment: number) {\n    setGoal(Math.max(200, Math.min(400, goal + adjustment)));\n  }\n\n  return (\n    <Drawer>\n      <DrawerTrigger asChild>\n        <Button variant="outline">Open Drawer</Button>\n      </DrawerTrigger>\n      <DrawerContent>\n        <div className="mx-auto w-full max-w-sm">\n          <DrawerHeader>\n            <DrawerTitle>Move Goal</DrawerTitle>\n            <DrawerDescription>Set your daily activity goal.</DrawerDescription>\n          </DrawerHeader>\n          <div className="p-4 pb-0">\n            <div className="flex items-center justify-center space-x-2">\n              <Button\n                variant="outline"\n                size="icon"\n                className="h-8 w-8 shrink-0 rounded-full"\n                onClick={() => onClick(-10)}\n                disabled={goal <= 200}\n              >\n                <Minus className="h-4 w-4" />\n                <span className="sr-only">Decrease</span>\n              </Button>\n              <div className="flex-1 text-center">\n                <div className="text-7xl font-bold tracking-tighter">{goal}</div>\n                <div className="text-[0.70rem] uppercase text-muted-foreground">\n                  Calories/day\n                </div>\n              </div>\n              <Button\n                variant="outline"\n                size="icon"\n                className="h-8 w-8 shrink-0 rounded-full"\n                onClick={() => onClick(10)}\n                disabled={goal >= 400}\n              >\n                <Plus className="h-4 w-4" />\n                <span className="sr-only">Increase</span>\n              </Button>\n            </div>\n            <div className="mt-3 h-[120px]">\n              <ResponsiveContainer width="100%" height="100%">\n                <BarChart data={data}>\n                  <Bar\n                    dataKey="goal"\n                    style={\n                      {\n                        fill: "hsl(var(--foreground))",\n                        opacity: 0.9,\n                      } as React.CSSProperties\n                    }\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n          <DrawerFooter>\n            <Button>Submit</Button>\n            <DrawerClose asChild>\n              <Button variant="outline">Cancel</Button>\n            </DrawerClose>\n          </DrawerFooter>\n        </div>\n      </DrawerContent>\n    </Drawer>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/dropdown-menu": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/dropdown-menu")
    ),
    code: [
      {
        title: "dropdown-menu.tsx",
        code: 'import {\n  Cloud,\n  CreditCard,\n  Github,\n  Keyboard,\n  LifeBuoy,\n  LogOut,\n  Mail,\n  MessageSquare,\n  Plus,\n  PlusCircle,\n  Settings,\n  User,\n  UserPlus,\n  Users,\n} from "lucide-react";\nimport { Button } from "@/lib/components/core/default/button";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuPortal,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuTrigger,\n} from "@/lib/components/core/default/dropdown-menu";\n\nexport default function DropdownMenuDemo() {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant="outline">Open</Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className="w-56">\n        <DropdownMenuLabel>My Account</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem>\n            <User className="mr-2 h-4 w-4" />\n            <span>Profile</span>\n            <DropdownMenuShortcut>⇧⌘P</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <CreditCard className="mr-2 h-4 w-4" />\n            <span>Billing</span>\n            <DropdownMenuShortcut>⌘B</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <Settings className="mr-2 h-4 w-4" />\n            <span>Settings</span>\n            <DropdownMenuShortcut>⌘S</DropdownMenuShortcut>\n          </DropdownMenuItem>\n          <DropdownMenuItem>\n            <Keyboard className="mr-2 h-4 w-4" />\n            <span>Keyboard shortcuts</span>\n            <DropdownMenuShortcut>⌘K</DropdownMenuShortcut>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuGroup>\n          <DropdownMenuItem>\n            <Users className="mr-2 h-4 w-4" />\n            <span>Team</span>\n          </DropdownMenuItem>\n          <DropdownMenuSub>\n            <DropdownMenuSubTrigger>\n              <UserPlus className="mr-2 h-4 w-4" />\n              <span>Invite users</span>\n            </DropdownMenuSubTrigger>\n            <DropdownMenuPortal>\n              <DropdownMenuSubContent>\n                <DropdownMenuItem>\n                  <Mail className="mr-2 h-4 w-4" />\n                  <span>Email</span>\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <MessageSquare className="mr-2 h-4 w-4" />\n                  <span>Message</span>\n                </DropdownMenuItem>\n                <DropdownMenuSeparator />\n                <DropdownMenuItem>\n                  <PlusCircle className="mr-2 h-4 w-4" />\n                  <span>More...</span>\n                </DropdownMenuItem>\n              </DropdownMenuSubContent>\n            </DropdownMenuPortal>\n          </DropdownMenuSub>\n          <DropdownMenuItem>\n            <Plus className="mr-2 h-4 w-4" />\n            <span>New Team</span>\n            <DropdownMenuShortcut>⌘+T</DropdownMenuShortcut>\n          </DropdownMenuItem>\n        </DropdownMenuGroup>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>\n          <Github className="mr-2 h-4 w-4" />\n          <span>GitHub</span>\n        </DropdownMenuItem>\n        <DropdownMenuItem>\n          <LifeBuoy className="mr-2 h-4 w-4" />\n          <span>Support</span>\n        </DropdownMenuItem>\n        <DropdownMenuItem disabled>\n          <Cloud className="mr-2 h-4 w-4" />\n          <span>API</span>\n        </DropdownMenuItem>\n        <DropdownMenuSeparator />\n        <DropdownMenuItem>\n          <LogOut className="mr-2 h-4 w-4" />\n          <span>Log out</span>\n          <DropdownMenuShortcut>⇧⌘Q</DropdownMenuShortcut>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/hover-card": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/hover-card")
    ),
    code: [
      {
        title: "hover-card.tsx",
        code: 'import { CalendarDays } from "lucide-react";\nimport {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from "@/lib/components/core/default/avatar";\nimport { Button } from "@/lib/components/core/default/button";\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from "@/lib/components/core/default/hover-card";\n\nexport default function HoverCardDemo() {\n  return (\n    <HoverCard>\n      <HoverCardTrigger asChild>\n        <Button variant="link">@nextjs</Button>\n      </HoverCardTrigger>\n      <HoverCardContent className="w-80">\n        <div className="flex justify-between space-x-4">\n          <Avatar>\n            <AvatarImage src="https://github.com/vercel.png" />\n            <AvatarFallback>VC</AvatarFallback>\n          </Avatar>\n          <div className="space-y-1">\n            <h4 className="text-sm font-semibold">@nextjs</h4>\n            <p className="text-sm">\n              The React Framework – created and maintained by @vercel.\n            </p>\n            <div className="flex items-center pt-2">\n              <CalendarDays className="mr-2 h-4 w-4 opacity-70" />{" "}\n              <span className="text-xs text-muted-foreground">Joined December 2021</span>\n            </div>\n          </div>\n        </div>\n      </HoverCardContent>\n    </HoverCard>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/popover": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover")),
    code: [
      {
        title: "popover.tsx",
        code: 'import { Button } from "@/lib/components/core/default/button";\nimport { Input } from "@/lib/components/core/default/input";\nimport { Label } from "@/lib/components/core/default/label";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from "@/lib/components/core/default/popover";\n\nexport default function PopoverDemo() {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button variant="outline">Open popover</Button>\n      </PopoverTrigger>\n      <PopoverContent className="w-80">\n        <div className="grid gap-4">\n          <div className="space-y-2">\n            <h4 className="font-medium leading-none">Dimensions</h4>\n            <p className="text-sm text-muted-foreground">\n              Set the dimensions for the layer.\n            </p>\n          </div>\n          <div className="grid gap-2">\n            <div className="grid grid-cols-3 items-center gap-4">\n              <Label htmlFor="width">Width</Label>\n              <Input id="width" defaultValue="100%" className="col-span-2 h-8" />\n            </div>\n            <div className="grid grid-cols-3 items-center gap-4">\n              <Label htmlFor="maxWidth">Max. width</Label>\n              <Input id="maxWidth" defaultValue="300px" className="col-span-2 h-8" />\n            </div>\n            <div className="grid grid-cols-3 items-center gap-4">\n              <Label htmlFor="height">Height</Label>\n              <Input id="height" defaultValue="25px" className="col-span-2 h-8" />\n            </div>\n            <div className="grid grid-cols-3 items-center gap-4">\n              <Label htmlFor="maxHeight">Max. height</Label>\n              <Input id="maxHeight" defaultValue="none" className="col-span-2 h-8" />\n            </div>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/sheet": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/sheet")),
    code: [
      {
        title: "sheet.tsx",
        code: 'import { Button } from "@/lib/components/core/default/button";\nimport { Input } from "@/lib/components/core/default/input";\nimport { Label } from "@/lib/components/core/default/label";\nimport {\n  Sheet,\n  SheetClose,\n  SheetContent,\n  SheetDescription,\n  SheetFooter,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n} from "@/lib/components/core/default/sheet";\n\nexport default function SheetDemo() {\n  return (\n    <Sheet>\n      <SheetTrigger asChild>\n        <Button variant="outline">Open</Button>\n      </SheetTrigger>\n      <SheetContent>\n        <SheetHeader>\n          <SheetTitle>Edit profile</SheetTitle>\n          <SheetDescription>\n            Make changes to your profile here. Click save when you&apos;re done.\n          </SheetDescription>\n        </SheetHeader>\n        <div className="grid gap-4 py-4">\n          <div className="grid grid-cols-4 items-center gap-4">\n            <Label htmlFor="name" className="text-right">\n              Name\n            </Label>\n            <Input id="name" value="Pedro Duarte" className="col-span-3" />\n          </div>\n          <div className="grid grid-cols-4 items-center gap-4">\n            <Label htmlFor="username" className="text-right">\n              Username\n            </Label>\n            <Input id="username" value="@peduarte" className="col-span-3" />\n          </div>\n        </div>\n        <SheetFooter>\n          <SheetClose asChild>\n            <Button type="submit">Save changes</Button>\n          </SheetClose>\n        </SheetFooter>\n      </SheetContent>\n    </Sheet>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/tooltip": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip")),
    code: [
      {
        title: "tooltip.tsx",
        code: 'import { Button } from "@/lib/components/core/default/button";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from "@/lib/components/core/default/tooltip";\n\nexport default function TooltipDemo() {\n  return (\n    <TooltipProvider>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <Button variant="outline">Hover</Button>\n        </TooltipTrigger>\n        <TooltipContent>\n          <p>Add to library</p>\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  );\n}\n',
      },
    ],
  },
  "demos/components/core/all-components": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/components/core/all-components")
    ),
    code: [
      {
        title: "all-components.tsx",
        code: 'import { Button } from "@/lib/components/core/default/button"\r\n\r\nexport default function AllComponents() {\r\n  return (\r\n    <div className="grid grid-cols-3">\r\n      <Button>Hello world</Button>\r\n    </div>\r\n  )\r\n}\r\n',
      },
    ],
  },
  "demos/hooks/use-media-query": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-media-query")),
    code: [
      {
        title: "use-media-query.tsx",
        code: '"use client";\n\nimport React from "react";\nimport { LaptopIcon, MonitorIcon, PhoneIcon, TabletIcon } from "lucide-react";\nimport { ClientOnly } from "@/lib/components/utils/client-only";\nimport { useMediaQuery } from "@/lib/hooks/use-media-query";\nimport { cn } from "@/lib/utils/classes";\n\nfunction Demo() {\n  const isSmallDevice = useMediaQuery("only screen and (max-width : 768px)");\n  const isMediumDevice = useMediaQuery(\n    "only screen and (min-width : 769px) and (max-width : 992px)"\n  );\n  const isLargeDevice = useMediaQuery(\n    "only screen and (min-width : 993px) and (max-width : 1200px)"\n  );\n  const isExtraLargeDevice = useMediaQuery("only screen and (min-width : 1201px)");\n\n  return (\n    <ClientOnly>\n      <div className="text-center">\n        <p>Resize your browser window to see changes.</p>\n        <div className="mt-8 grid grid-cols-4 gap-4">\n          {[\n            {\n              name: "Small",\n              isMatched: isSmallDevice,\n              icon: <PhoneIcon size={20} />,\n            },\n            {\n              name: "Medium",\n              isMatched: isMediumDevice,\n              icon: <TabletIcon size={20} />,\n            },\n            {\n              name: "Large",\n              isMatched: isLargeDevice,\n              icon: <LaptopIcon size={20} />,\n            },\n            {\n              name: "Extra Large",\n              isMatched: isExtraLargeDevice,\n              icon: <MonitorIcon size={20} />,\n            },\n          ].map(({ name, icon, isMatched }) => (\n            <div\n              key={name}\n              className={cn(\n                "flex flex-col items-center gap-2 rounded border-2 p-4",\n                isMatched && "border-green-800 text-green-200"\n              )}\n            >\n              {icon}\n              <p>{name}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </ClientOnly>\n  );\n}\n\nexport default function ClientOnlyDemo() {\n  return (\n    <ClientOnly>\n      <Demo />\n    </ClientOnly>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-intersection-observer": {
    component: React.lazy<React.FC>(
      () => import("@/lib/demos/hooks/use-intersection-observer")
    ),
    code: [
      {
        title: "use-intersection-observer.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { ScrollArea } from "@/lib/components/core/default/scroll-area";\nimport { useIntersectionObserver } from "@/lib/hooks/use-intersection-observer";\nimport { cn } from "@/lib/utils/classes";\n\nexport default function Demo() {\n  const [ref, entry] = useIntersectionObserver({\n    threshold: 0,\n    root: null,\n    rootMargin: "0px",\n  });\n\n  return (\n    <div className="w-full max-w-sm">\n      <p>\n        Element{" "}\n        <span\n          className={cn(entry?.isIntersecting ? "text-green-700" : "text-yellow-600")}\n        >\n          {entry?.isIntersecting ? "inside" : "outside"}\n        </span>{" "}\n        the viewport\n      </p>\n      <ScrollArea type="always" className="mt-4 h-32 border">\n        <div className="flex h-96 flex-col items-center justify-between py-8">\n          <p className="text-muted-foreground">Scroll me down!</p>\n          <p ref={ref} className="border-4 border-dashed p-4">\n            Hello world!\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-window-size": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-window-size")),
    code: [
      {
        title: "use-window-size.tsx",
        code: '"use client";\n\nimport { useWindowSize } from "@/lib/hooks/use-window-size";\n\nexport default function Demo() {\n  const size = useWindowSize();\n\n  return (\n    <div>\n      <p className="text-center text-xl font-bold">Resize your window</p>\n      <div className="mt-4 grid grid-cols-2 gap-8">\n        <div>\n          <p className="text-muted-foreground">width</p>\n          <p className="text-xl">{size.width}px</p>\n        </div>\n        <div>\n          <p className="text-muted-foreground">height</p>\n          <p className="text-xl">{size.height}px</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-battery": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-battery")),
    code: [
      {
        title: "use-battery.tsx",
        code: '"use client";\n\nimport {\n  BatteryChargingIcon,\n  BatteryFullIcon,\n  BatteryLowIcon,\n  BatteryMediumIcon,\n  BatteryWarning,\n  Loader2Icon,\n} from "lucide-react";\nimport { useBattery } from "@/lib/hooks/use-battery";\n\nexport default function Demo() {\n  const { isLoading, isSupported, isCharging, level } = useBattery();\n\n  const size = 120;\n\n  return (\n    <div className="text-center">\n      <h2 className="text-xl font-semibold">Battery status</h2>\n      <div className="mt-4 flex items-center justify-center space-x-4">\n        {isLoading ? (\n          <Loader2Icon className="animate-spin" />\n        ) : !isSupported ? (\n          <p className="text-muted-foreground">\n            Battery status API is not supported in your browser.\n          </p>\n        ) : (\n          <>\n            <span className="text-5xl font-bold">{Math.round(level * 100)}%</span>\n            {isCharging ? (\n              <BatteryChargingIcon size={size} />\n            ) : level === 1 ? (\n              <BatteryFullIcon size={size} />\n            ) : level > 0.5 ? (\n              <BatteryMediumIcon size={size} />\n            ) : level > 0.2 ? (\n              <BatteryLowIcon size={size} />\n            ) : (\n              <BatteryWarning size={size} />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-mouse": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-mouse")),
    code: [
      {
        title: "use-mouse.tsx",
        code: '"use client";\n\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from "@/lib/components/core/default/table";\nimport { useMouse } from "@/lib/hooks/use-mouse";\nimport { cn } from "@/lib/utils/classes";\n\nexport default function Demo() {\n  const [mouse, ref] = useMouse<HTMLDivElement>();\n\n  const xIntersecting = mouse.elementX > 0 && mouse.elementX < 300;\n  const yIntersecting = mouse.elementY > 0 && mouse.elementY < 300;\n  const isIntersecting = xIntersecting && yIntersecting;\n\n  return (\n    <div>\n      <div className="mx-auto flex rounded-lg border bg-card py-4">\n        {[\n          {\n            caption: "Mouse Position",\n            headers: ["X", "Y"],\n            rows: [[mouse.x, mouse.y]],\n          },\n          {\n            caption: "Relative to ref",\n            headers: ["ElementX", "ElementY"],\n            rows: [[mouse.elementX, mouse.elementY]],\n          },\n        ].map(({ caption, headers, rows }) => (\n          <Table key={caption} className="mx-auto">\n            <TableCaption>{caption}</TableCaption>\n            <TableHeader>\n              <TableRow>\n                {headers.map((header, i) => (\n                  <TableHead key={i} className="w-[100px]">\n                    {header}\n                  </TableHead>\n                ))}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {rows.map((row, i) => (\n                <TableRow key={i}>\n                  {row.map((cell, j) => (\n                    <TableCell key={j} className="max-w-[50px] truncate">\n                      {cell}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        ))}\n      </div>\n      <div\n        ref={ref}\n        className={cn(\n          "mx-auto mt-4 flex h-[200px] w-full max-w-sm items-center justify-center rounded-lg border bg-background p-4 transition-colors",\n          isIntersecting && "bg-green-900"\n        )}\n      >\n        <span>Use a ref to add coords relative to the element</span>\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-orientation": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-orientation")),
    code: [
      {
        title: "use-orientation.tsx",
        code: '"use client";\n\nimport React from "react";\nimport { useOrientation } from "@/lib/hooks/use-orientation";\n\nexport default function Demo() {\n  const orientation = useOrientation();\n\n  return (\n    <section>\n      <p className="text-xl font-bold">Orientation</p>\n      <div className="mt-4 grid grid-cols-2 gap-4">\n        <div>\n          <p className="text-muted-foreground">Angle</p>\n          <p className="text-xl">{orientation.angle}</p>\n        </div>\n        <div>\n          <p className="text-muted-foreground">Type</p>\n          <p className="text-xl">{orientation.type}</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-local-storage": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-local-storage")),
    code: [
      {
        title: "use-local-storage.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { Button } from "@/lib/components/core/default/button";\nimport { Textarea } from "@/lib/components/core/default/textarea";\nimport { ClientOnly } from "@/lib/components/utils/client-only";\nimport { useLocalStorage } from "@/lib/hooks/use-local-storage";\n\nfunction Demo() {\n  const [writing, saveWriting] = useLocalStorage<string | null>("writing", null);\n  const [input, setInput] = React.useState(writing ?? "");\n\n  return (\n    <div className="w-full max-w-sm">\n      <Textarea\n        value={input}\n        onChange={(e) => {\n          setInput(e.target.value);\n        }}\n        placeholder="Start your writing here, save it and refresh the page to see it persist."\n      />\n      <div className="mt-4 flex items-center justify-end space-x-2">\n        <Button\n          variant="secondary"\n          size="sm"\n          onClick={() => {\n            setInput("");\n            saveWriting(null);\n          }}\n        >\n          Clear\n        </Button>\n        <Button\n          variant="default"\n          size="sm"\n          onClick={() => {\n            saveWriting(input);\n            // TODO: toast notification\n          }}\n        >\n          Save\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default function ClientOnlyDemo() {\n  return (\n    <ClientOnly>\n      <Demo />\n    </ClientOnly>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-counter": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-counter")),
    code: [
      {
        title: "use-counter.tsx",
        code: '"use client";\n\nimport { Button } from "@/lib/components/core/default/button";\nimport { useCounter } from "@/lib/hooks/use-counter";\n\nexport default function Demo() {\n  const [count, { increment, decrement, set, reset }] = useCounter(3, {\n    min: 0,\n    max: 10,\n  });\n  return (\n    <div>\n      <p className="text-center text-muted-foreground">\n        startingValue: 3, min: 0, max: 10\n      </p>\n      <div className="mt-4 flex items-center gap-2">\n        <Button onClick={increment} disabled={count >= 10}>\n          Increment\n        </Button>\n        <Button onClick={decrement} disabled={count <= 0}>\n          Decrement\n        </Button>\n        <Button\n          onClick={() => {\n            set(5);\n          }}\n        >\n          Set to 5\n        </Button>\n        <Button onClick={reset}>Reset</Button>\n      </div>\n      <p className="mt-8 text-center text-4xl">{count}</p>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-debounce": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-debounce")),
    code: [
      {
        title: "use-debounce.tsx",
        code: '"use client";\n\nimport * as React from "react";\nimport { SearchIcon } from "lucide-react";\nimport { Input } from "@/lib/components/core/default/input";\nimport { useDebounce } from "@/lib/hooks/use-debounce";\n\nexport default function Demo() {\n  const [searchInput, setSearchInput] = React.useState("");\n  const debouncedValue = useDebounce(searchInput, 1000);\n\n  return (\n    <div className="w-full max-w-sm">\n      <div className="relative">\n        <SearchIcon\n          size={18}\n          className="pointer-events-none absolute left-2 top-1/2 -translate-y-1/2 transform text-muted-foreground"\n        />\n        <Input\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          placeholder="Search"\n          className="full-w pl-8"\n        />\n      </div>\n      <div className="mt-10 text-center">\n        {debouncedValue ? (\n          <p>Results for &quot;{debouncedValue}&quot;</p>\n        ) : (\n          <p className="text-muted-foreground">Start searching</p>\n        )}\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-list": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-list")),
    code: [
      {
        title: "use-list.tsx",
        code: '"use client";\n\nimport React from "react";\nimport { EditIcon, Trash2Icon } from "lucide-react";\nimport { Button } from "@/lib/components/core/default/button";\nimport { Input } from "@/lib/components/core/default/input";\nimport { useList } from "@/lib/hooks/use-list";\n\nexport default function Demo() {\n  const [inputValue, setInputValue] = React.useState("");\n  const [list, { set, push, removeAt, insertAt, clear }] = useList<string | number>([\n    "First",\n    "Second",\n    "Third",\n  ]);\n  return (\n    <div>\n      <div className="flex gap-2">\n        <Button\n          variant="secondary"\n          disabled={list.length < 1}\n          onClick={() => insertAt(1, "woo")}\n        >\n          Insert After First\n        </Button>\n        <Button\n          variant="secondary"\n          disabled={list.length < 2}\n          onClick={() => removeAt(1)}\n        >\n          Remove Second Item\n        </Button>\n        <Button variant="secondary" onClick={() => set([1, 2, 3])}>\n          Reset\n        </Button>\n        <Button variant="secondary" onClick={() => clear()}>\n          Clear\n        </Button>\n      </div>\n      <div className="mt-4 space-y-2">\n        <div className="flex items-center space-x-2">\n          <Input\n            value={inputValue}\n            onChange={(e) => {\n              setInputValue(e.target.value);\n            }}\n          />\n          <Button variant="secondary" onClick={() => push(inputValue)}>\n            Add\n          </Button>\n        </div>\n        {list.map((item, index) => (\n          <div\n            key={index}\n            className="group relative flex h-10 items-center rounded-md border bg-background px-2"\n          >\n            <div className="mr-2">{item}</div>\n            <div className="absolute right-3 top-[50%] flex translate-y-[-50%] items-center space-x-2 opacity-0 duration-100 group-hover:opacity-100">\n              <Button variant="ghost" size="icon" className="h-7 w-7">\n                <EditIcon size={15} />\n              </Button>\n              <Button\n                variant="ghost"\n                size="icon"\n                className="h-7 w-7"\n                onClick={() => {\n                  removeAt(index);\n                }}\n              >\n                <Trash2Icon size={15} />\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
  "demos/hooks/use-previous": {
    component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-previous")),
    code: [
      {
        title: "use-previous.tsx",
        code: '"use client";\n\nimport React from "react";\nimport { Button } from "@/lib/components/core/default/button";\nimport { usePrevious } from "@/lib/hooks/use-previous";\n\nfunction getRandomColor() {\n  const colors = ["green", "blue", "purple", "red", "pink"];\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nexport default function Demo() {\n  const [color, setColor] = React.useState(getRandomColor());\n  const previousColor = usePrevious(color);\n\n  const handleClick = () => {\n    function getNewColor() {\n      const newColor = getRandomColor();\n      if (color === newColor) {\n        getNewColor();\n      } else {\n        setColor(newColor);\n      }\n    }\n    getNewColor();\n  };\n\n  return (\n    <div className="text-center">\n      <Button size="sm" onClick={handleClick}>\n        Next\n      </Button>\n      <div className="mt-8 grid grid-cols-2 gap-4">\n        <div\n          className="flex h-16 w-52 items-center justify-center rounded-lg"\n          style={{ background: previousColor ?? undefined }}\n        >\n          Previous: {previousColor ?? "null"}\n        </div>\n        <div\n          className="flex h-16 w-52 items-center justify-center rounded-lg"\n          style={{ background: color }}\n        >\n          Previous: {color ?? "null"}\n        </div>\n      </div>\n    </div>\n  );\n}\n',
      },
    ],
  },
};

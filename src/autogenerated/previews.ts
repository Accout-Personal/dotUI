// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "components/sparkle-button/demo": {
    component: React.lazy<React.FC>(() => import("@/lib/components/sparkle-button/demo")),
    code: [
      {
        title: "demo.tsx",
        code: 'import { Button } from "@/lib/components/sparkle-button";\r\n\r\nexport default function SparkleButton() {\r\n  return <Button variant="sparkle">Get started</Button>;\r\n}\r\n',
      },
    ],
  },
  "components/hero-section": {
    component: React.lazy<React.FC>(() => import("@/lib/components/hero-section")),
    code: [
      {
        title: "hero-section.tsx",
        code: 'import React from "react";\r\nimport Link from "next/link";\r\nimport { ArrowRightIcon, SearchIcon, SparklesIcon } from "lucide-react";\r\nimport { badgeVariants } from "@/components/ui/badge";\r\nimport { Button } from "@/components/ui/button";\r\nimport { cn } from "@/utils/classes";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <section>\r\n      <Link\r\n        href="https://github.com/mehdibha/rcopy"\r\n        target="_blank"\r\n        className={cn(\r\n          badgeVariants({ variant: "outline", size: "md" }),\r\n          "cursor-pointer space-x-2 font-mono delay-75 duration-200 hover:bg-secondary"\r\n        )}\r\n      >\r\n        <SparklesIcon size={18} />\r\n        <span>Star us on GitHub</span> <ArrowRightIcon size={15} />\r\n      </Link>\r\n      <h1 className="mt-4 max-w-2xl font-display text-5xl font-bold leading-tight">\r\n        Copy and paste components for you React App\r\n      </h1>\r\n      <h2 className="text-md mt-6 text-muted-foreground md:text-lg lg:text-xl">\r\n        Copy the code, paste it, customize it, own it. Done.\r\n      </h2>\r\n      <div className="mt-10 flex space-x-4">\r\n        <Button size="lg" variant="default">\r\n          Explore components\r\n        </Button>\r\n        <Button size="lg" variant="outline">\r\n          <SearchIcon size={20} className="mr-2" />\r\n          Quick search\r\n        </Button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n',
      },
    ],
  },
  "hooks/use-battery/demo": {
    component: React.lazy<React.FC>(() => import("@/lib/hooks/use-battery/demo")),
    code: [
      {
        title: "demo.tsx",
        code: '"use client";\r\n\r\nimport {\r\n  BatteryChargingIcon,\r\n  BatteryFullIcon,\r\n  BatteryLowIcon,\r\n  BatteryMediumIcon,\r\n  BatteryWarning,\r\n  Loader2Icon,\r\n} from "lucide-react";\r\nimport { useBattery } from "@/lib/hooks/use-battery";\r\n\r\nexport default function Demo() {\r\n  const { isLoading, isSupported, isCharging, level } = useBattery();\r\n\r\n  const size = 120;\r\n\r\n  return (\r\n    <div className="text-center">\r\n      <h2 className="text-xl font-semibold">Battery status</h2>\r\n      <div className="mt-4 flex items-center justify-center space-x-4">\r\n        {isLoading ? (\r\n          <Loader2Icon className="animate-spin" />\r\n        ) : !isSupported ? (\r\n          <p className="text-muted-foreground">\r\n            Battery status API is not supported in your browser.\r\n          </p>\r\n        ) : (\r\n          <>\r\n            <span className="text-5xl font-bold">{level * 100}%</span>\r\n            {isCharging ? (\r\n              <BatteryChargingIcon size={size} />\r\n            ) : level === 1 ? (\r\n              <BatteryFullIcon size={size} />\r\n            ) : level > 0.5 ? (\r\n              <BatteryMediumIcon size={size} />\r\n            ) : level > 0.2 ? (\r\n              <BatteryLowIcon size={size} />\r\n            ) : (\r\n              <BatteryWarning size={size} />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n',
      },
    ],
  },
  "hooks/use-debounce/demo": {
    component: React.lazy<React.FC>(() => import("@/lib/hooks/use-debounce/demo")),
    code: [
      {
        title: "demo.tsx",
        code: '"use client";\r\n\r\nimport * as React from "react";\r\nimport { SearchIcon } from "lucide-react";\r\nimport { Input } from "@/components/ui/input";\r\nimport { useDebounce } from "@/lib/hooks/use-debounce";\r\n\r\nexport default function Demo() {\r\n  const [searchInput, setSearchInput] = React.useState("");\r\n  const debouncedValue = useDebounce(searchInput, 1000);\r\n\r\n  return (\r\n    <div className="w-full max-w-sm">\r\n      <div className="relative">\r\n        <SearchIcon\r\n          size={18}\r\n          className="pointer-events-none absolute left-2 top-1/2 -translate-y-1/2 transform text-muted-foreground"\r\n        />\r\n        <Input\r\n          value={searchInput}\r\n          onChange={(e) => {\r\n            setSearchInput(e.target.value);\r\n          }}\r\n          placeholder="Search"\r\n          className="full-w pl-8"\r\n        />\r\n      </div>\r\n      <div className="mt-10 text-center">\r\n        {debouncedValue ? (\r\n          <p>Results for &quot;{debouncedValue}&quot;</p>\r\n        ) : (\r\n          <p className="text-muted-foreground">Start searching</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n',
      },
    ],
  },
  "pages/pricing": {
    component: React.lazy<React.FC>(() => import("@/lib/pages/pricing")),
    code: [
      {
        title: "pricing.tsx",
        code: '"use client";\r\n\r\nimport React from "react";\r\nimport { CallToAction } from "./cta";\r\nimport { FAQ } from "./faq";\r\nimport { PricingComparaison } from "./pricing-comparaison";\r\nimport type { Plan } from "./types";\r\n\r\nconst headline = "Simple pricing";\r\nconst subheadline = "Use rCopy for free. Upgrade to enable to access premium templates.";\r\nconst pricingPlans: Plan[] = [\r\n  {\r\n    name: "Free",\r\n    description: "Use rCopy for free",\r\n    featured: false,\r\n    price: {\r\n      monthly: "$0",\r\n      yearly: "$0",\r\n    },\r\n    features: [\r\n      "Free hosting on \'turbocharger.cc\'",\r\n      "Optimized SEO",\r\n      "Has \'Built with Turbocharger\' branding",\r\n    ],\r\n    cta: {\r\n      label: "Get started",\r\n      href: "#",\r\n    },\r\n  },\r\n  {\r\n    name: "Pro",\r\n    featured: true,\r\n    price: { monthly: "$19", yearly: "$190" },\r\n    description: "Perfect for small / medium sized businesses.",\r\n    features: [\r\n      "Everything in Free.",\r\n      "Basic analytics",\r\n      "Remove \'Built with Turbocharger\' branding",\r\n    ],\r\n    cta: {\r\n      label: "Get started",\r\n      href: "#",\r\n    },\r\n  },\r\n  {\r\n    name: "Entreprise",\r\n    price: { monthly: "$39", yearly: "$390" },\r\n    description: "For even the biggest enterprise companies.",\r\n    featured: false,\r\n    features: ["Everything in Personal site.", "Advanced analytics", "Priority support"],\r\n    cta: {\r\n      label: "Get started",\r\n      href: "#",\r\n    },\r\n  },\r\n];\r\nconst questions = [\r\n  {\r\n    question: "How does turbocharger works?",\r\n    answer:\r\n      "Turbocharger is a monorepo starter that comes with Next.js, Tailwind CSS, Shadcn-ui, Server components, and more. It\'s a great way to start your next project.",\r\n  },\r\n  {\r\n    question: "How do I create a website with turbocharger?",\r\n    answer: "You can create a website with turbocharger by following the documentation.",\r\n  },\r\n  {\r\n    question: "How much does turbocharger cost?",\r\n    answer: "It\'s free to use turbocharger",\r\n  },\r\n  {\r\n    question: "Can I use turbocharger for free?",\r\n    answer: "Yes, you can use turbocharger for free.",\r\n  },\r\n];\r\nconst cta = {\r\n  headline: "Get started today",\r\n  subheadline: "Start creating your own react project today.",\r\n  cta: {\r\n    label: "Get started",\r\n    href: "#",\r\n  },\r\n};\r\n\r\nexport default function PricingPage() {\r\n  return (\r\n    <div className="container py-24">\r\n      <h2 className="text-center font-display text-5xl font-bold tracking-tight">\r\n        {headline}\r\n      </h2>\r\n      <p className="mt-2 text-center text-lg text-muted-foreground">{subheadline}</p>\r\n      <PricingComparaison plans={pricingPlans} className="mt-8" />\r\n      <FAQ questions={questions} className="mt-32" />\r\n      <CallToAction\r\n        headline={cta.headline}\r\n        subheadline={cta.subheadline}\r\n        cta={cta.cta}\r\n        className="mt-32"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n',
      },
      {
        title: "cta.tsx",
        code: 'import React from "react";\r\nimport Link from "next/link";\r\nimport { Button } from "@/components/ui/button";\r\nimport { cn } from "@/utils/classes";\r\n\r\ninterface CallToActionProps {\r\n  headline: string;\r\n  subheadline: string;\r\n  cta: {\r\n    label: string;\r\n    href: string;\r\n  };\r\n  className?: string;\r\n}\r\n\r\nexport const CallToAction = (props: CallToActionProps) => {\r\n  const { headline, subheadline, cta, className } = props;\r\n  return (\r\n    <section className={cn("mx-auto max-w-xl text-center", className)}>\r\n      <h2 className="font-display text-4xl font-semibold tracking-tighter sm:text-5xl">{headline}</h2>\r\n      <p className="mt-4 text-muted-foreground">{subheadline}</p>\r\n      <Button asChild size="lg" className="mt-8">\r\n        <Link href={cta.href}>{cta.label}</Link>\r\n      </Button>\r\n    </section>\r\n  );\r\n};\r\n',
      },
      {
        title: "faq.tsx",
        code: 'import React from "react";\r\nimport {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from "@/components/ui/accordion";\r\n\r\ninterface FAQProps {\r\n  questions: { question: string; answer: string }[];\r\n  className?: string;\r\n}\r\n\r\nexport const FAQ = (props: FAQProps) => {\r\n  const { questions, className } = props;\r\n\r\n  return (\r\n    <section className={className}>\r\n      <h2 className="text-center text-3xl font-semibold tracking-tight sm:text-4xl">\r\n        Frequently asked questions\r\n      </h2>\r\n      <div className="container mt-8 max-w-3xl">\r\n        <Accordion type="single" collapsible className="w-full">\r\n          {questions.map((elem, index) => (\r\n            <AccordionItem key={index} value={index.toString()}>\r\n              <AccordionTrigger className="text-lg font-semibold">\r\n                {elem.question}\r\n              </AccordionTrigger>\r\n              <AccordionContent className="text-md pb-8">{elem.answer}</AccordionContent>\r\n            </AccordionItem>\r\n          ))}\r\n        </Accordion>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n',
      },
      {
        title: "pricing-comparaison.tsx",
        code: '"use client";\r\n\r\nimport React from "react";\r\nimport { Label } from "@/components/ui/label";\r\nimport { Switch } from "@/components/ui/switch";\r\nimport { cn } from "@/utils/classes";\r\nimport { PricingPlan } from "./pricing-plan";\r\nimport type { Plan } from "./types";\r\n\r\ninterface PricingProps {\r\n  plans: Plan[];\r\n  className?: string;\r\n}\r\n\r\nexport const PricingComparaison = (props: PricingProps) => {\r\n  const { plans, className } = props;\r\n  const [billing, setBilling] = React.useState<"monthly" | "yearly">("monthly");\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className="flex items-center justify-center space-x-4">\r\n        <Label htmlFor="subscription" className="text-xl">\r\n          Monthly\r\n        </Label>\r\n        <Switch\r\n          checked={!(billing === "monthly")}\r\n          onCheckedChange={(checked) => setBilling(checked ? "yearly" : "monthly")}\r\n          id="subscription"\r\n        />\r\n        <Label htmlFor="subscription" className="text-xl">\r\n          Yearly\r\n        </Label>\r\n      </div>\r\n      <div\r\n        className={cn("mt-16 grid grid-cols-3 items-center", {\r\n          "mx-auto max-w-3xl grid-cols-2": plans.length === 2,\r\n        })}\r\n      >\r\n        {plans.map((plan, index) => (\r\n          <PricingPlan\r\n            key={plan.name}\r\n            {...plan}\r\n            billing={billing}\r\n            className={\r\n              index === 0\r\n                ? "rounded-l-3xl"\r\n                : index === 1\r\n                  ? "rounded-3xl"\r\n                  : index === 2\r\n                    ? "rounded-r-3xl"\r\n                    : "rounded-3xl"\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n',
      },
      {
        title: "pricing-plan.tsx",
        code: 'import { CheckCircleIcon } from "lucide-react";\r\nimport { Button } from "@/components/ui/button";\r\nimport { cn } from "@/utils/classes";\r\nimport type { Plan } from "./types";\r\n\r\ninterface PlanProps extends Plan {\r\n  billing: "monthly" | "yearly";\r\n  className?: string;\r\n}\r\nexport const PricingPlan = (props: PlanProps) => {\r\n  const {\r\n    name,\r\n    price,\r\n    description,\r\n    features,\r\n    featured = false,\r\n    billing,\r\n    className,\r\n  } = props;\r\n\r\n  return (\r\n    <section\r\n      className={cn(\r\n        "relative flex min-h-[530px] flex-col border border-gray-400 bg-card px-6 py-16 shadow-2xl dark:border-gray-800 sm:px-8",\r\n        featured && "z-10 border-none ring-4 ring-ring/80",\r\n        className\r\n      )}\r\n    >\r\n      {featured && (\r\n        <div className="absolute right-8 top-[-4px] z-[-1] translate-y-[-100%] rounded-t-lg bg-ring/80 px-4 py-1 text-white shadow-lg">\r\n          Most popular\r\n        </div>\r\n      )}\r\n      <h3 className="mt-5 text-xl font-bold">{name}</h3>\r\n      <p className={cn("mt-2 text-base")}>{description}</p>\r\n      <p className="order-first text-5xl font-light tracking-tight">\r\n        {billing === "monthly" ? price.monthly : price.yearly}\r\n        <span className="ml-2 text-base font-normal text-muted-foreground">\r\n          billed {billing}\r\n        </span>\r\n      </p>\r\n      <ul\r\n        role="list"\r\n        className={cn("order-last mt-10 flex min-h-[100px] flex-col gap-y-3 text-sm", {\r\n          "min-h-[220px]": featured,\r\n        })}\r\n      >\r\n        {features.map((feature) => (\r\n          <li key={feature} className="flex">\r\n            <CheckCircleIcon />\r\n            <span className="ml-4">{feature}</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Button\r\n        variant={featured ? "default" : "outline"}\r\n        className="mt-8"\r\n        aria-label={`Get started with the ${name} plan for ${billing === "monthly" ? price.monthly : price.yearly}`}\r\n      >\r\n        Get started\r\n      </Button>\r\n    </section>\r\n  );\r\n};\r\n',
      },
      {
        title: "types.ts",
        code: "export interface Plan {\r\n  name: string;\r\n  description: string;\r\n  features: string[];\r\n  featured: boolean;\r\n  price: {\r\n    monthly: string;\r\n    yearly: string;\r\n  };\r\n  cta: {\r\n    label: string;\r\n    href: string;\r\n  };\r\n}\r\n",
      },
    ],
  },
};

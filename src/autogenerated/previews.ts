
// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "demos/components/core/button/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/default")),
      code : [{"title":"default.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function Demo() {\n  return <Button>Button</Button>;\n}\n"}]
    },
    "demos/components/core/button/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/variants")),
      code : [{"title":"variants.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nconst variants = [\n  \"default\",\n  \"primary\",\n  \"outline\",\n  \"quiet\",\n  \"success\",\n  \"warning\",\n  \"danger\",\n  \"accent\",\n] as const;\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-4 gap-2\">\n      {variants.map((variant) => (\n        <Button key={variant} variant={variant}>\n          {variant}\n        </Button>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Button size=\"sm\">Button</Button>\n      <Button size=\"md\">Button</Button>\n      <Button size=\"lg\">Button</Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/shapes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/shapes")),
      code : [{"title":"shapes.tsx","code":"import { UploadIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center justify-center gap-4\">\n      <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { UploadIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center justify-center gap-2\">\n      <Button prefix={<UploadIcon />} size=\"sm\">\n        Upload\n      </Button>\n      <Button prefix={<UploadIcon />}>Upload</Button>\n      <Button suffix={<UploadIcon />}>Upload</Button>\n      <Button prefix={<UploadIcon />} suffix={<UploadIcon />}>\n        Upload\n      </Button>\n      <Button prefix={<UploadIcon />} size=\"lg\">\n        Upload\n      </Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/loading")),
      code : [{"title":"loading.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-2\">\n      <Button size=\"sm\" isLoading>\n        Button\n      </Button>\n      <Button size=\"md\" isLoading>\n        Button\n      </Button>\n      <Button size=\"lg\" isLoading>\n        Button\n      </Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function Demo() {\n  return <Button isDisabled>Button</Button>;\n}\n"}]
    },
    "demos/components/core/button/link-button": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/link-button")),
      code : [{"title":"link-button.tsx","code":"import { LogInIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Button href=\"/login\" prefix={<LogInIcon />} target=\"_blank\">\r\n      Login\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { UploadIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  const [file, setFile] = React.useState<string | null>(null);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <FileTrigger\r\n        onSelect={(e) => {\r\n          if (e) {\r\n            const files = Array.from(e);\r\n            setFile(files[0].name);\r\n          }\r\n        }}\r\n        allowsMultiple\r\n      >\r\n        <Button prefix={<UploadIcon />}>Upload</Button>\r\n      </FileTrigger>\r\n      {file && (\r\n        <p>\r\n          You selected <span className=\"font-semibold\">{file}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/file-types": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/file-types")),
      code : [{"title":"file-types.tsx","code":"import React from \"react\";\r\nimport { UploadIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  return (\r\n    <FileTrigger acceptedFileTypes={[\"image/*\"]}>\r\n      <Button prefix={<UploadIcon />}>Upload image</Button>\r\n    </FileTrigger>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/multiple-files": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/multiple-files")),
      code : [{"title":"multiple-files.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { UploadIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  const [files, setFiles] = React.useState<string[] | null>(null);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <FileTrigger\r\n        onSelect={(e) => {\r\n          if (e) {\r\n            const files = Array.from(e);\r\n            const filenames = files.map((file) => file.name);\r\n            setFiles(filenames);\r\n          }\r\n        }}\r\n        allowsMultiple\r\n      >\r\n        <Button prefix={<UploadIcon />}>Upload</Button>\r\n      </FileTrigger>\r\n      {files && (\r\n        <p>\r\n          You selected <span className=\"font-semibold\">{files.join(\", \")}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/directory-selection": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/directory-selection")),
      code : [{"title":"directory-selection.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { UploadIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  const [files, setFiles] = React.useState<string[] | null>(null);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <FileTrigger\r\n        acceptDirectory\r\n        onSelect={(e) => {\r\n          if (e) {\r\n            const files = Array.from(e);\r\n            const filenames = files.map((file) => file.name);\r\n            setFiles(filenames);\r\n          }\r\n        }}\r\n      >\r\n        <Button prefix={<UploadIcon />}>Upload a directory</Button>\r\n      </FileTrigger>\r\n      {files && (\r\n        <ul>\r\n          {files.map((file, index) => (\r\n            <li key={index}>{file}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/media-capture": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/media-capture")),
      code : [{"title":"media-capture.tsx","code":"import React from \"react\";\r\nimport { CameraIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  return (\r\n    <FileTrigger defaultCamera=\"environment\">\r\n      <Button prefix={<CameraIcon />}>Take a picture</Button>\r\n    </FileTrigger>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle-button/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/default")),
      code : [{"title":"default.tsx","code":"import { PinIcon } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nexport default function Demo() {\n  return (\n    <ToggleButton aria-label=\"Toggle pin\" defaultSelected>\n      <PinIcon className=\"rotate-45\" />\n    </ToggleButton>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-button/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/variants")),
      code : [{"title":"variants.tsx","code":"import { PinIcon } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nconst variants = [\"quiet\", \"outline\", \"accent\"] as const;\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      {variants.map((variant) => (\n        <ToggleButton\n          key={variant}\n          variant={variant}\n          defaultSelected={variant === \"accent\"}\n          aria-label=\"Toggle pin\"\n        >\n          <PinIcon className=\"rotate-45\" />\n        </ToggleButton>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-button/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/sizes")),
      code : [{"title":"sizes.tsx","code":"import { PinIcon } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      {sizes.map((size) => (\n        <ToggleButton key={size} size={size} variant=\"outline\" aria-label=\"Toggle pin\">\n          <PinIcon className=\"rotate-45\" />\n        </ToggleButton>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-button/shapes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/shapes")),
      code : [{"title":"shapes.tsx","code":"import { PinIcon } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      <ToggleButton variant=\"outline\" shape=\"square\" aria-label=\"Toggle pin\">\n        <PinIcon className=\"rotate-45\" />\n      </ToggleButton>\n      <ToggleButton variant=\"outline\" shape=\"circle\" aria-label=\"Toggle pin\">\n        <PinIcon className=\"rotate-45\" />\n      </ToggleButton>\n      <ToggleButton\n        variant=\"accent\"\n        shape=\"rectangle\"\n        prefix={<PinIcon className=\"rotate-45\" />}\n        defaultSelected\n        aria-label=\"Toggle pin\"\n      >\n        Pin\n      </ToggleButton>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-button/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/disabled")),
      code : [{"title":"disabled.tsx","code":"import { PinIcon } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nexport default function Demo() {\n  return (\n    <ToggleButton isDisabled aria-label=\"Toggle pin\">\n      <PinIcon className=\"rotate-45\" />\n    </ToggleButton>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-button/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-button/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { PinIcon } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nexport default function Demo() {\n  const [isSelected, setSelected] = React.useState(true);\n  return (\n    <div className=\"flex flex-col items-center gap-2\">\n      <ToggleButton\n        isSelected={isSelected}\n        onChange={(isSelected) => setSelected(isSelected)}\n        aria-label=\"Toggle pin\"\n      >\n        <PinIcon className=\"rotate-45\" />\n      </ToggleButton>\n      <span className=\"text-sm text-fg-muted\">state: {isSelected ? \"On\" : \"Off\"}</span>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/menu/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/basic")),
      code : [{"title":"basic.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Menu, MenuItem, MenuRoot, MenuSub } from \"@/lib/components/core/default/menu\";\n\nexport default function Demo() {\n  return (\n    <MenuRoot>\n      <Button variant=\"quiet\" shape=\"square\">\n        <Avatar src=\"https://github.com/mehdibha.png\" fallback=\"M\" className=\"size-7\" />\n      </Button>\n      <Menu>\n        <MenuItem>Account settings</MenuItem>\n        <MenuItem>Create team</MenuItem>\n        <MenuItem>Command menu</MenuItem>\n        <MenuItem>Log out</MenuItem>\n      </Menu>\n    </MenuRoot>\n  );\n}\n"}]
    },
    "demos/components/core/menu/placement": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/placement")),
      code : [{"title":"placement.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { MenuIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuRoot,\r\n  type MenuProps,\r\n} from \"@/lib/components/core/default/menu\";\r\nimport { Select, SelectItem } from \"@/lib/components/core/default/select\";\r\n\r\ntype Placement = MenuProps<Object>[\"placement\"];\r\n\r\nexport default function Demo() {\r\n  const [placement, setPlacement] = React.useState<Placement>(\"top\");\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <MenuRoot>\r\n        <Button shape=\"square\" size=\"sm\">\r\n          <MenuIcon />\r\n        </Button>\r\n        <Menu placement={placement}>\r\n          <MenuItem>Account settings</MenuItem>\r\n          <MenuItem>Create team</MenuItem>\r\n          <MenuItem>Log out</MenuItem>\r\n        </Menu>\r\n      </MenuRoot>\r\n      <Select\r\n        label=\"Placement\"\r\n        selectedKey={placement}\r\n        onSelectionChange={(key) => setPlacement(key as Placement)}\r\n      >\r\n        {[\r\n          \"bottom\",\r\n          \"bottom left\",\r\n          \"bottom right\",\r\n          \"bottom start\",\r\n          \"bottom end\",\r\n          \"top\",\r\n          \"top left\",\r\n          \"top right\",\r\n          \"top start\",\r\n          \"top end\",\r\n          \"left\",\r\n          \"left top\",\r\n          \"left\",\r\n          \"bottom\",\r\n          \"start\",\r\n          \"start top\",\r\n          \"start bottom\",\r\n          \"right\",\r\n          \"right top\",\r\n          \"right\",\r\n          \"bottom\",\r\n          \"end\",\r\n          \"end top\",\r\n          \"end bottom\",\r\n        ].map((pos, index) => (\r\n          <SelectItem key={index}>{pos}</SelectItem>\r\n        ))}\r\n      </Select>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/single-selection": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/single-selection")),
      code : [{"title":"single-selection.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport type { Selection } from \"react-aria-components\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  const [selected, setSelected] = React.useState<Selection>(new Set([\"center\"]));\r\n  return (\r\n    <MenuRoot>\r\n      <Button size=\"sm\">Align</Button>\r\n      <Menu\r\n        selectionMode=\"single\"\r\n        selectedKeys={selected}\r\n        onSelectionChange={setSelected}\r\n      >\r\n        <MenuItem id=\"start\">Start</MenuItem>\r\n        <MenuItem id=\"center\">Center</MenuItem>\r\n        <MenuItem id=\"end\">End</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/multiple-selection": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/multiple-selection")),
      code : [{"title":"multiple-selection.tsx","code":"import React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button size=\"sm\">Panels</Button>\r\n      <Menu\r\n        selectionMode=\"multiple\"\r\n        defaultSelectedKeys={[\"sidebar\", \"searchbar\", \"console\"]}\r\n      >\r\n        <MenuItem id=\"sidebar\">Sidebar</MenuItem>\r\n        <MenuItem id=\"searchbar\">Searchbar</MenuItem>\r\n        <MenuItem id=\"tools\">Tools</MenuItem>\r\n        <MenuItem id=\"console\">Console</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/section": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/section")),
      code : [{"title":"section.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuRoot,\r\n  MenuSection,\r\n} from \"@/lib/components/core/default/menu\";\r\nimport { Separator } from \"@/lib/components/core/default/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuSection title=\"Notifications\">\r\n          <MenuItem>Push notifications</MenuItem>\r\n          <MenuItem>Badges</MenuItem>\r\n        </MenuSection>\r\n        <Separator />\r\n        <MenuSection title=\"Panels\">\r\n          <MenuItem id=\"console\">Console</MenuItem>\r\n          <MenuItem>Search</MenuItem>\r\n        </MenuSection>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/separator": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/separator")),
      code : [{"title":"separator.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuRoot,\r\n} from \"@/lib/components/core/default/menu\";\r\nimport { Separator } from \"@/lib/components/core/default/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuItem>Push notifications</MenuItem>\r\n        <MenuItem>Badges</MenuItem>\r\n        <Separator />\r\n        <MenuItem id=\"console\">Console</MenuItem>\r\n        <Separator />\r\n        <MenuItem>Search</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/label-and-description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/label-and-description")),
      code : [{"title":"label-and-description.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuItem label=\"New file\" description=\"Create a new file\" />\r\n        <MenuItem label=\"Copy link\" description=\"Copy the file link\" />\r\n        <MenuItem label=\"Edit file\" description=\"Allows you to edit the file\" />\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { CopyIcon, PlusSquareIcon, SquarePenIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuItem\r\n          label=\"New file\"\r\n          description=\"Create a new file\"\r\n          prefix={<PlusSquareIcon />}\r\n        />\r\n        <MenuItem\r\n          label=\"Copy link\"\r\n          description=\"Copy the file link\"\r\n          prefix={<CopyIcon />}\r\n        />\r\n        <MenuItem\r\n          label=\"Edit file\"\r\n          description=\"Allows you to edit the file\"\r\n          prefix={<SquarePenIcon />}\r\n        />\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/shortcut": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/shortcut")),
      code : [{"title":"shortcut.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuItem shortcut=\"⌘N\">\r\n          New file\r\n        </MenuItem>\r\n        <MenuItem shortcut=\"⌘C\">\r\n          Copy link\r\n        </MenuItem>\r\n        <MenuItem shortcut=\"⌘⇧E\">\r\n          Edit file\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/item-variant": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/item-variant")),
      code : [{"title":"item-variant.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\n\nexport default function Demo() {\n  return (\n    <MenuRoot>\n      <Button variant=\"quiet\" shape=\"square\">\n        <Avatar src=\"https://github.com/mehdibha.png\" fallback=\"M\" className=\"size-7\" />\n      </Button>\n      <Menu>\n        <MenuItem>Account settings</MenuItem>\n        <MenuItem>Create team</MenuItem>\n        <MenuItem>Command menu</MenuItem>\n        <MenuItem variant=\"danger\">Delete</MenuItem>\n      </Menu>\n    </MenuRoot>\n  );\n}\n"}]
    },
    "demos/components/core/menu/link-items": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/link-items")),
      code : [{"title":"link-items.tsx","code":"import { DiscordIcon, GitHubIcon, TwitterIcon } from \"@/components/icons\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Social links</Button>\r\n      <Menu>\r\n        <MenuItem prefix={<GitHubIcon />} href=\"https://github.com/mehdibha/rcopy\" target=\"_blank\">\r\n          Github\r\n        </MenuItem>\r\n        <MenuItem prefix={<TwitterIcon />} href=\"https://twitter.com/mehdibha_\" target=\"_blank\">\r\n          X\r\n        </MenuItem>\r\n        <MenuItem prefix={<DiscordIcon />} href=\"https://discord.com/invite/DXpj5V2fU8\" target=\"_blank\">\r\n          Discord\r\n        </MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/disabled-items": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/disabled-items")),
      code : [{"title":"disabled-items.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuItem isDisabled>Account settings</MenuItem>\r\n        <MenuItem>Create team</MenuItem>\r\n        <MenuItem isDisabled>Command menu</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/long-press": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/long-press")),
      code : [{"title":"long-press.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot trigger=\"longPress\">\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuItem>Account settings</MenuItem>\r\n        <MenuItem>Create team</MenuItem>\r\n        <MenuItem>Command menu</MenuItem>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/submenus": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/submenus")),
      code : [{"title":"submenus.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  MenuRoot,\r\n  MenuSection,\r\n  MenuSub,\r\n} from \"@/lib/components/core/default/menu\";\r\nimport { Separator } from \"@/lib/components/core/default/separator\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <MenuRoot>\r\n      <Button>Settings</Button>\r\n      <Menu>\r\n        <MenuItem>Account settings</MenuItem>\r\n        <MenuSub>\r\n          <MenuItem>Invite users</MenuItem>\r\n          <Menu>\r\n            <MenuItem>SMS</MenuItem>\r\n            <MenuItem>Twitter</MenuItem>\r\n            <MenuSub>\r\n              <MenuItem>Email</MenuItem>\r\n              <Menu>\r\n                <MenuItem>Work</MenuItem>\r\n                <MenuItem>Personal</MenuItem>\r\n              </Menu>\r\n            </MenuSub>\r\n          </Menu>\r\n        </MenuSub>\r\n      </Menu>\r\n    </MenuRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/menu/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\r\n\r\nexport default function Demo() {\r\n  const [isOpen, setOpen] = React.useState(false);\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <MenuRoot isOpen={isOpen} onOpenChange={setOpen}>\r\n        <Button>Settings</Button>\r\n        <Menu>\r\n          <MenuItem>Account settings</MenuItem>\r\n          <MenuItem>Create team</MenuItem>\r\n          <MenuItem>Command menu</MenuItem>\r\n        </Menu>\r\n      </MenuRoot>\r\n      <p className=\"text-sm text-fg-muted\">state: {isOpen ? \"open\" : \"closed\"}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-area/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/default")),
      code : [{"title":"default.tsx","code":"import { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  return <ColorArea />;\r\n}\r\n"}]
    },
    "demos/components/core/color-area/channels": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/channels")),
      code : [{"title":"channels.tsx","code":"import { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  return <ColorArea xChannel=\"red\" yChannel=\"blue\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-area/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/disabled")),
      code : [{"title":"disabled.tsx","code":"import { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  return <ColorArea isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/color-area/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseColor } from \"react-aria-components\";\r\nimport { ColorArea } from \"@/lib/components/core/default/color-area\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseColor(\"hsl(0, 100%, 50%)\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorArea\r\n        value={value}\r\n        onChange={setValue}\r\n        xChannel=\"saturation\"\r\n        yChannel=\"lightness\"\r\n      />\r\n      <p className=\"text-xs text-fg-muted\">Selected color : {value.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-area/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-area/composition")),
      code : [{"title":"composition.tsx","code":"import { ColorAreaRoot } from \"@/lib/components/core/default/color-area\";\r\nimport { ColorThumb } from \"@/lib/components/core/default/color-thumb\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <ColorAreaRoot>\r\n      <ColorThumb />\r\n    </ColorAreaRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\n\nexport default function Demo() {\n  return <ColorField label=\"Color\" defaultValue=\"#7f007f\" />;\n}\n"}]
    },
    "demos/components/core/color-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <ColorField label=\"small (sm)\" size=\"sm\" />\r\n      <ColorField label=\"medium (md)\" size=\"md\" />\r\n      <ColorField label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { PaletteIcon } from \"lucide-react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorField prefix={<PaletteIcon />} />\r\n      <ColorField suffix={<PaletteIcon />} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/label")),
      code : [{"title":"label.tsx","code":"import { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <ColorField label=\"Background\" placeholder=\"Visible label\" />\r\n      <ColorField aria-label=\"Background\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\n\nexport default function Demo() {\n  return <ColorField label=\"Color\" description=\"Enter a background color.\" />;\n}\n"}]
    },
    "demos/components/core/color-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\n\nexport default function Demo() {\n  return (\n    <ColorField\n      label=\"Color\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you're having trouble, contact our customer\n      support team for help.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/color-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\n\nexport default function Demo() {\n  return (\n    <ColorField label=\"Color\" isInvalid errorMessage=\"Please fill out this field.\" />\n  );\n}\n"}]
    },
    "demos/components/core/color-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/loading")),
      code : [{"title":"loading.tsx","code":"import React from \"react\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorField isLoading loaderPosition=\"prefix\" />\r\n      <ColorField isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/disabled")),
      code : [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { parseColor } from \"react-aria-components\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  return <ColorField value={parseColor(\"rgb(222,70,58)\")} isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/color-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/read-only")),
      code : [{"title":"read-only.tsx","code":"import React from \"react\";\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\n\nexport default function Demo() {\n  return <ColorField label=\"Color\" isReadOnly value=\"#121212\" />;\n}\n"}]
    },
    "demos/components/core/color-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <ColorField label=\"Color\" isRequired />\n      <ColorField label=\"Color\" isRequired necessityIndicator=\"icon\" />\n      <ColorField label=\"Color\" isRequired necessityIndicator=\"label\" />\n      <ColorField label=\"Color\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/color-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { type Color, parseColor } from \"react-aria-components\";\r\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\r\n\r\nexport default function Demo() {\r\n  const [color, setColor] = React.useState<Color | null>(parseColor(\"#7f007f\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorField value={color} onChange={setColor} />\r\n      <p className=\"text-sm text-fg-muted\">\r\n        Current color value: {color?.toString(\"hex\")}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ColorField } from \"@/lib/components/core/default/color-field\";\n\nexport default function Demo() {\n  return <ColorField />;\n}\n"}]
    },
    "demos/components/core/color-picker/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/default")),
      code : [{"title":"default.tsx","code":"import { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  return <ColorPicker defaultValue=\"#5100FF\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/label")),
      code : [{"title":"label.tsx","code":"import { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  return <ColorPicker defaultValue=\"#5100FF\" label=\"Fill color\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState<string>(\"hsl(25, 100%, 50%)\");\r\n  return <ColorPicker value={value} onChange={(color) => setValue(color.toString())} />;\r\n}\r\n"}]
    },
    "demos/components/core/color-picker/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-picker/composition")),
      code : [{"title":"composition.tsx","code":"import { ColorPicker } from \"@/lib/components/core/default/color-picker\";\r\n\r\nexport default function Demo() {\r\n  return <ColorPicker defaultValue=\"#5100FF\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/default")),
      code : [{"title":"default.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider label='Hue' channel=\"hue\" defaultValue=\"hsl(200, 100%, 50%)\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/orientation")),
      code : [{"title":"orientation.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider orientation=\"vertical\" channel=\"hue\" defaultValue=\"hsl(0, 100%, 50%)\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/channel": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/channel")),
      code : [{"title":"channel.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider label=\"Opacity\" defaultValue=\"#f00\" channel=\"alpha\" />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/disabled")),
      code : [{"title":"disabled.tsx","code":"import { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSlider label=\"Opacity\" defaultValue=\"#f00\" channel=\"alpha\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseColor } from \"react-aria-components\";\r\nimport { ColorSlider } from \"@/lib/components/core/default/color-slider\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseColor(\"hsl(0, 100%, 50%)\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <ColorSlider value={value} onChange={setValue} channel=\"hue\" />\r\n      <p className=\"text-xs text-fg-muted\">Value: {value.toString(\"hex\")}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/color-slider/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-slider/composition")),
      code : [{"title":"composition.tsx","code":"export default function Demo() {\r\n  return null;\r\n}\r\n"}]
    },
    "demos/components/core/color-swatch/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/color-swatch/default")),
      code : [{"title":"default.tsx","code":"import { ColorSwatch } from \"@/lib/components/core/default/color-swatch\";\r\n\r\nexport default function Demo() {\r\n  return <ColorSwatch color=\"#f00\" />;\r\n}\r\n"}]
    },
    "demos/components/core/avatar/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/default")),
      code : [{"title":"default.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\n\nexport default function AvatarDemo() {\n  return <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" />;\n}\n"}]
    },
    "demos/components/core/avatar/shape": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/shape")),
      code : [{"title":"shape.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-6\">\r\n      <Avatar\r\n        src=\"https://github.com/mehdibha.png\"\r\n        alt=\"@mehdibha\"\r\n        fallback=\"M\"\r\n        shape=\"square\"\r\n      />\r\n      <Avatar\r\n        src=\"https://github.com/mehdibha.png\"\r\n        alt=\"@mehdibha\"\r\n        fallback=\"M\"\r\n        shape=\"circle\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" />;\r\n}\r\n"}]
    },
    "demos/components/core/avatar/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/composition")),
      code : [{"title":"composition.tsx","code":"import {\r\n  AvatarRoot,\r\n  AvatarImage,\r\n  AvatarFallback,\r\n} from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <AvatarRoot>\r\n      <AvatarImage src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" />\r\n      <AvatarFallback delayMs={3000}>M</AvatarFallback>\r\n    </AvatarRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/avatar-group": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/avatar-group")),
      code : [{"title":"avatar-group.tsx","code":"import { Avatar, AvatarGroup } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <AvatarGroup>\r\n      {[\r\n        { name: \"@mehdibha\", src: \"https://github.com/mehdibha.png\" },\r\n        { name: \"@shadcn\", src: \"https://github.com/shadcn.png\" },\r\n        { name: \"@leerob\", src: \"https://github.com/leerob.png\" },\r\n        { name: \"@t3dotgg\", src: \"https://github.com/t3dotgg.png\" },\r\n        {\r\n          name: \"@joshwcomeau\",\r\n          src: \"https://github.com/joshwcomeau.png\",\r\n        },\r\n      ].map((user) => (\r\n        <Avatar\r\n          key={user.name}\r\n          src={user.src}\r\n          alt={user.name}\r\n          fallback={user.name[1].toUpperCase()}\r\n        />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/avatar-group-max": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/avatar-group-max")),
      code : [{"title":"avatar-group-max.tsx","code":"import { Avatar, AvatarGroup } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarGroupMaxDemo() {\r\n  return (\r\n    <AvatarGroup max={4}>\r\n      {[\r\n        { name: \"@mehdibha\", src: \"https://github.com/mehdibha.png\" },\r\n        { name: \"@shadcn\", src: \"https://github.com/shadcn.png\" },\r\n        { name: \"@leerob\", src: \"https://github.com/leerob.png\" },\r\n        { name: \"@t3dotgg\", src: \"https://github.com/t3dotgg.png\" },\r\n        {\r\n          name: \"@joshwcomeau\",\r\n          src: \"https://github.com/joshwcomeau.png\",\r\n        },\r\n      ].map((user) => (\r\n        <Avatar\r\n          key={user.name}\r\n          src={user.src}\r\n          alt={user.name}\r\n          fallback={user.name[1].toUpperCase()}\r\n        />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/avatar-group-total-count": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/avatar-group-total-count")),
      code : [{"title":"avatar-group-total-count.tsx","code":"import { Avatar, AvatarGroup } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarGroupMaxDemo() {\r\n  return (\r\n    <AvatarGroup max={5} total={300}>\r\n      {[\r\n        { name: \"@mehdibha\", src: \"https://github.com/mehdibha.png\" },\r\n        { name: \"@shadcn\", src: \"https://github.com/shadcn.png\" },\r\n        { name: \"@leerob\", src: \"https://github.com/leerob.png\" },\r\n        { name: \"@t3dotgg\", src: \"https://github.com/t3dotgg.png\" },\r\n        {\r\n          name: \"@joshwcomeau\",\r\n          src: \"https://github.com/joshwcomeau.png\",\r\n        },\r\n      ].map((user) => (\r\n        <Avatar\r\n          key={user.name}\r\n          src={user.src}\r\n          alt={user.name}\r\n          fallback={user.name[1].toUpperCase()}\r\n        />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/badge/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/badge/default")),
      code : [{"title":"default.tsx","code":"import { Badge } from \"@/lib/components/core/default/badge\";\n\nexport default function BadgeDemo() {\n  return <Badge>Badge</Badge>;\n}\n"}]
    },
    "demos/components/core/card/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/card/basic")),
      code : [{"title":"basic.tsx","code":"import * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/lib/components/core/default/card\";\n// import { Input } from \"@/lib/components/core/default/input\";\nimport { Label } from \"@/lib/components/core/default/field\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/lib/components/core/default/select\";\n\nexport default function CardDemo() {\n  return null;\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Create project</CardTitle>\n        <CardDescription>Deploy your new project in one-click.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form>\n          <div className=\"grid w-full items-center gap-4\">\n            <div className=\"flex flex-col space-y-1.5\">\n              <Label htmlFor=\"name\">Name</Label>\n              <Input id=\"name\" placeholder=\"Name of your project\" />\n            </div>\n            <div className=\"flex flex-col space-y-1.5\">\n              <Label htmlFor=\"framework\">Framework</Label>\n              <Select>\n                <SelectTrigger id=\"framework\">\n                  <SelectValue placeholder=\"Select\" />\n                </SelectTrigger>\n                <SelectContent position=\"popper\">\n                  <SelectItem value=\"next\">Next.js</SelectItem>\n                  <SelectItem value=\"sveltekit\">SvelteKit</SelectItem>\n                  <SelectItem value=\"astro\">Astro</SelectItem>\n                  <SelectItem value=\"nuxt\">Nuxt.js</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"outline\">Cancel</Button>\n        <Button>Deploy</Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"}]
    },
    "demos/components/core/carousel/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/carousel/basic")),
      code : [{"title":"basic.tsx","code":"import * as React from \"react\";\nimport { Card, CardContent } from \"@/lib/components/core/default/card\";\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/lib/components/core/default/carousel\";\n\nexport default function CarouselDemo() {\n  return (\n    <Carousel className=\"w-full max-w-xs\">\n      <CarouselContent>\n        {Array.from({ length: 5 }).map((_, index) => (\n          <CarouselItem key={index}>\n            <div className=\"p-1\">\n              <Card>\n                <CardContent className=\"flex aspect-square items-center justify-center p-6\">\n                  <span className=\"text-4xl font-semibold\">{index + 1}</span>\n                </CardContent>\n              </Card>\n            </div>\n          </CarouselItem>\n        ))}\n      </CarouselContent>\n      <CarouselPrevious />\n      <CarouselNext />\n    </Carousel>\n  );\n}\n"}]
    },
    "demos/components/core/separator/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/separator/basic")),
      code : [{"title":"basic.tsx","code":"import { Separator } from \"@/lib/components/core/default/separator\";\n\nexport default function SeparatorDemo() {\n  return (\n    <div>\n      <div className=\"space-y-1\">\n        <h4 className=\"text-sm font-medium leading-none\">Radix Primitives</h4>\n        <p className=\"text-sm text-fg-muted\">An open-source UI component library.</p>\n      </div>\n      <Separator className=\"my-4\" />\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\n        <div>Blog</div>\n        <Separator orientation=\"vertical\" />\n        <div>Docs</div>\n        <Separator orientation=\"vertical\" />\n        <div>Source</div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/table/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/table/basic")),
      code : [{"title":"basic.tsx","code":"import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/lib/components/core/default/table\";\n\nconst invoices = [\n  {\n    invoice: \"INV001\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$250.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV002\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$150.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV003\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$350.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV004\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$450.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV005\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$550.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV006\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$200.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV007\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$300.00\",\n    paymentMethod: \"Credit Card\",\n  },\n];\n\nexport default function TableDemo() {\n  return (\n    <Table>\n      <TableCaption>A list of your recent invoices.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Method</TableHead>\n          <TableHead className=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map((invoice) => (\n          <TableRow key={invoice.invoice}>\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell>{invoice.paymentMethod}</TableCell>\n            <TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={3}>Total</TableCell>\n          <TableCell className=\"text-right\">$2,500.00</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n}\n"}]
    },
    "demos/components/core/calendar/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/basic")),
      code : [{"title":"basic.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  return <Calendar />;\n}\n"}]
    },
    "demos/components/core/calendar/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/label")),
      code : [{"title":"label.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  return <Calendar aria-label=\"Event date\" />;\n}\n"}]
    },
    "demos/components/core/calendar/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { today, isWeekend, getLocalTimeZone } from \"@internationalized/date\";\nimport { useLocale } from \"react-aria\";\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  const [date, setDate] = React.useState(today(getLocalTimeZone()));\n  const { locale } = useLocale();\n  const isInvalid = isWeekend(date, locale);\n  return (\n    <Calendar\n      value={date}\n      onChange={setDate}\n      isInvalid={isInvalid}\n      errorMessage={\"We are closed on weekends\"}\n    />\n  );\n}\n"}]
    },
    "demos/components/core/calendar/validation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/validation")),
      code : [{"title":"validation.tsx","code":"\"use client\"\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  return <Calendar aria-label=\"Appointment date\" minValue={today(getLocalTimeZone())} />;\n}\n"}]
    },
    "demos/components/core/calendar/unvailable-dates": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/unvailable-dates")),
      code : [{"title":"unvailable-dates.tsx","code":"\"use client\"\nimport {\n  type DateValue,\n  getLocalTimeZone,\n  isWeekend,\n  today,\n} from \"@internationalized/date\";\nimport { useLocale } from \"react-aria\";\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  const now = today(getLocalTimeZone());\n  const disabledRanges = [\n    [now, now.add({ days: 5 })],\n    [now.add({ days: 14 }), now.add({ days: 16 })],\n    [now.add({ days: 23 }), now.add({ days: 24 })],\n  ];\n\n  const { locale } = useLocale();\n  const isDateUnavailable = (date: DateValue) =>\n    isWeekend(date, locale) ||\n    disabledRanges.some(\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0\n    );\n\n  return (\n    <Calendar\n      aria-label=\"Appointment date\"\n      minValue={today(getLocalTimeZone())}\n      isDateUnavailable={isDateUnavailable}\n    />\n  );\n}\n"}]
    },
    "demos/components/core/calendar/visible-months": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/visible-months")),
      code : [{"title":"visible-months.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  return <Calendar visibleMonths={2} />;\n}\n"}]
    },
    "demos/components/core/calendar/page-behaviour": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/page-behaviour")),
      code : [{"title":"page-behaviour.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  return <Calendar visibleMonths={2} pageBehavior=\"single\" />;\n}\n"}]
    },
    "demos/components/core/calendar/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  return <Calendar aria-label=\"Appointment date\" isDisabled />;\n}\n"}]
    },
    "demos/components/core/calendar/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  return (\n    <Calendar\n      aria-label=\"Appointment date\"\n      isReadOnly\n      value={today(getLocalTimeZone())}\n    />\n  );\n}\n"}]
    },
    "demos/components/core/calendar/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { useDateFormatter } from \"react-aria\";\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function Demo() {\n  const [value, setValue] = React.useState(today(getLocalTimeZone()));\n  const formatter = useDateFormatter({ dateStyle: \"full\" });\n  return (\n    <div className=\"flex flex-col items-center gap-6\">\n      <Calendar aria-label=\"Date (controlled)\" value={value} onChange={setValue} />\n      <p className=\"text-fg-muted text-sm\">Selected date: {formatter.format(value.toDate(getLocalTimeZone()))}</p>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/date-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/default")),
      code : [{"title":"default.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField aria-label=\"Meeting date\" />\r\n}\r\n"}]
    },
    "demos/components/core/date-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/label")),
      code : [{"title":"label.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <DateField label=\"Visible label\" />\r\n      <DateField aria-label=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <DateField label=\"small (sm)\" size=\"sm\" />\r\n      <DateField label=\"medium (md)\" size=\"md\" />\r\n      <DateField label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { CalendarIcon } from \"lucide-react\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <DateField aria-label=\"Meeting date\" prefix={<CalendarIcon />} />\r\n      <DateField aria-label=\"Meeting date\" suffix={<CalendarIcon />} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateField } from \"@/lib/components/core/default/date-field\";\n\nexport default function Demo() {\n  return (\n    <DateField\n      label=\"Appointment\"\n      description=\"Please select a date.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { DateField } from \"@/lib/components/core/default/date-field\";\n\nexport default function Demo() {\n  return (\n    <DateField\n      label=\"Appointment\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you're having trouble, contact our customer\n      support team for help.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateField } from \"@/lib/components/core/default/date-field\";\n\nexport default function Demo() {\n  return (\n    <DateField\n      label=\"Meeting\"\n      isInvalid\n      errorMessage=\"Meetings can't be scheduled in the past.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-field/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DateField\r\n        label=\"Hour\"\r\n        granularity=\"hour\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DateField\r\n        label=\"Minute\"\r\n        granularity=\"minute\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DateField\r\n        label=\"Second\"\r\n        granularity=\"second\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField label=\"Meeting date\" placeholderValue={new CalendarDate(1980, 1, 1)} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseZonedDateTime } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateField\r\n      label=\"Appointment time\"\r\n      granularity=\"minute\"\r\n      defaultValue={parseZonedDateTime(\"2022-11-07T10:45[America/Los_Angeles]\")}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField aria-label=\"Appointment date\" granularity=\"minute\" hourCycle={24} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      <DateField aria-label=\"Meeting date\" isLoading loaderPosition=\"prefix\" />\r\n      <DateField aria-label=\"Meeting date\" isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  return <DateField label=\"Event date\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/date-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { CalendarDate } from \"@internationalized/date\";\nimport { DateField } from \"@/lib/components/core/default/date-field\";\n\nexport default function Demo() {\n  return <DateField label=\"Event date\" value={new CalendarDate(1980, 1, 1)} isReadOnly />;\n}\n"}]
    },
    "demos/components/core/date-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateField } from \"@/lib/components/core/default/date-field\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <DateField label=\"Event date\" isRequired />\n      <DateField label=\"Event date\" isRequired necessityIndicator=\"icon\" />\n      <DateField label=\"Event date\" isRequired necessityIndicator=\"label\" />\n      <DateField label=\"Event date\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/date-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseDate(\"2020-02-03\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DateField label=\"Controlled\" value={value} onChange={setValue} />\r\n      <p className=\"text-sm text-fg-muted\">selected date: {value.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateField } from \"@/lib/components/core/default/date-field\";\n\nexport default function Demo() {\n  return <DateField />;\n}\n"}]
    },
    "demos/components/core/date-picker/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/default")),
      code : [{"title":"default.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Meeting date\" />\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/label")),
      code : [{"title":"label.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <DatePicker label=\"Visible label\" />\r\n      <DatePicker aria-label=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/sizes")),
      code : [{"title":"sizes.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <DatePicker label=\"small (sm)\" size=\"sm\" />\r\n      <DatePicker label=\"medium (md)\" size=\"md\" />\r\n      <DatePicker label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/prefix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/prefix")),
      code : [{"title":"prefix.tsx","code":"import { UsersIcon } from \"lucide-react\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Meeting date\" prefix={<UsersIcon />} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\n\nexport default function Demo() {\n  return (\n    <DatePicker\n      label=\"Appointment\"\n      description=\"Please select a date.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-picker/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\n\nexport default function Demo() {\n  return (\n    <DatePicker\n      label=\"Appointment\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you're having trouble, contact our customer\n      support team for help.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-picker/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\n\nexport default function Demo() {\n  return (\n    <DatePicker\n      label=\"Meeting\"\n      isInvalid\n      errorMessage=\"Meetings can't be scheduled in the past.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-picker/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DatePicker\r\n        label=\"Hour\"\r\n        granularity=\"hour\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DatePicker\r\n        label=\"Minute\"\r\n        granularity=\"minute\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n      <DatePicker\r\n        label=\"Second\"\r\n        granularity=\"second\"\r\n        defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker label=\"Meeting date\" placeholderValue={new CalendarDate(1980, 1, 1)} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseZonedDateTime } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DatePicker\r\n      label=\"Appointment time\"\r\n      granularity=\"minute\"\r\n      defaultValue={parseZonedDateTime(\"2022-11-07T10:45[America/Los_Angeles]\")}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Appointment date\" granularity=\"minute\" hourCycle={24} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker aria-label=\"Meeting date\" isLoading />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/disabled")),
      code : [{"title":"disabled.tsx","code":"import { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DatePicker label=\"Event date\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { CalendarDate } from \"@internationalized/date\";\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\n\nexport default function Demo() {\n  return <DatePicker label=\"Event date\" value={new CalendarDate(1980, 1, 1)} isReadOnly />;\n}\n"}]
    },
    "demos/components/core/date-picker/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <DatePicker label=\"Event date\" isRequired />\n      <DatePicker label=\"Event date\" isRequired necessityIndicator=\"icon\" />\n      <DatePicker label=\"Event date\" isRequired necessityIndicator=\"label\" />\n      <DatePicker label=\"Event date\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/date-picker/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState(parseDate(\"2020-02-03\"));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DatePicker label=\"Controlled\" value={value} onChange={setValue} />\r\n      <p className=\"text-sm text-fg-muted\">selected date: {value.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\n\nexport default function Demo() {\n  return <DatePicker />;\n}\n"}]
    },
    "demos/components/core/date-range-picker/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/default")),
      code : [{"title":"default.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker aria-label=\"Meeting date\" />\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/label")),
      code : [{"title":"label.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <DateRangePicker label=\"Visible label\" />\r\n      <DateRangePicker aria-label=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/sizes")),
      code : [{"title":"sizes.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <DateRangePicker label=\"small (sm)\" size=\"sm\" />\r\n      <DateRangePicker label=\"medium (md)\" size=\"md\" />\r\n      <DateRangePicker label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/prefix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/prefix")),
      code : [{"title":"prefix.tsx","code":"import { PlaneIcon } from \"lucide-react\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker aria-label=\"Trip\" prefix={<PlaneIcon />} />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\n\nexport default function Demo() {\n  return (\n    <DateRangePicker\n      label=\"Trip\"\n      description=\"Please select a date range.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-range-picker/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\n\nexport default function Demo() {\n  return (\n    <DateRangePicker\n      label=\"Trip\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you're having trouble, contact our customer\n      support team for help.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-range-picker/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\n\nexport default function Demo() {\n  return (\n    <DateRangePicker\n      label=\"Trip dates\"\n      isInvalid\n      errorMessage=\"Trip dates can't be scheduled in the past.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-range-picker/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      defaultValue={{\r\n        start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\r\n        end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\r\n      }}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  const dates = {\r\n    start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\r\n    end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\r\n  };\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DateRangePicker label=\"Hour\" granularity=\"hour\" defaultValue={dates} />\r\n      <DateRangePicker label=\"Minute\" granularity=\"minute\" defaultValue={dates} />\r\n      <DateRangePicker label=\"Second\" granularity=\"second\" defaultValue={dates} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { CalendarDate } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      label=\"Meeting date\"\r\n      placeholderValue={new CalendarDate(1980, 1, 1)}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker\r\n      label=\"Appointment time\"\r\n      granularity=\"minute\"\r\n      defaultValue={{\r\n        start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\r\n        end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\r\n      }}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <DateRangePicker aria-label=\"Appointment date\" granularity=\"minute\" hourCycle={24} />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker aria-label=\"Meeting date\" isLoading />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/disabled")),
      code : [{"title":"disabled.tsx","code":"import { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  return <DateRangePicker label=\"Trip dates\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\n\nexport default function Demo() {\n  return (\n    <DateRangePicker\n      label=\"Event date\"\n      value={{\n        start: parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\"),\n        end: parseAbsoluteToLocal(\"2021-04-08T20:00:00Z\"),\n      }}\n      isReadOnly\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-range-picker/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <DateRangePicker label=\"Event date\" isRequired />\n      <DateRangePicker label=\"Event date\" isRequired necessityIndicator=\"icon\" />\n      <DateRangePicker label=\"Event date\" isRequired necessityIndicator=\"label\" />\n      <DateRangePicker label=\"Event date\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/date-range-picker/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { parseDate } from \"@internationalized/date\";\r\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\r\n\r\nexport default function Demo() {\r\n  const [value, setValue] = React.useState({\r\n    start: parseDate(\"2020-02-03\"),\r\n    end: parseDate(\"2020-02-08\"),\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <DateRangePicker label=\"Controlled\" value={value} onChange={setValue} />\r\n      <p className=\"text-sm text-fg-muted\">selected date: {value.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/date-range-picker/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-range-picker/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { DateRangePicker } from \"@/lib/components/core/default/date-range-picker\";\n\nexport default function Demo() {\n  return <DateRangePicker />;\n}\n"}]
    },
    "demos/components/core/range-calendar/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport { parseDate } from \"@internationalized/date\";\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  return (\n    <RangeCalendar\n      defaultValue={{\n        start: parseDate(\"2024-06-10\"),\n        end: parseDate(\"2024-06-19\"),\n      }}\n    />\n  );\n}\n"}]
    },
    "demos/components/core/range-calendar/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/label")),
      code : [{"title":"label.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  return <RangeCalendar aria-label=\"Event date\" />;\n}\n"}]
    },
    "demos/components/core/range-calendar/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { today, getLocalTimeZone } from \"@internationalized/date\";\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  const [range, setRange] = React.useState({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({ weeks: 1, days: 3 }),\n  });\n  const isInvalid = range.end.compare(range.start) > 7;\n  return (\n    <RangeCalendar\n      aria-label=\"Trip dates\"\n      value={range}\n      onChange={setRange}\n      isInvalid={isInvalid}\n      errorMessage={isInvalid ? \"Maximum stay duration is 1 week\" : undefined}\n    />\n  );\n}\n"}]
    },
    "demos/components/core/range-calendar/validation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/validation")),
      code : [{"title":"validation.tsx","code":"\"use client\"\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  return <RangeCalendar aria-label=\"Appointment date\" minValue={today(getLocalTimeZone())} />;\n}\n"}]
    },
    "demos/components/core/range-calendar/unvailable-dates": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/unvailable-dates")),
      code : [{"title":"unvailable-dates.tsx","code":"\"use client\";\n\nimport { type DateValue, getLocalTimeZone, today } from \"@internationalized/date\";\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  const now = today(getLocalTimeZone());\n  const disabledRanges = [\n    [now, now.add({ days: 5 })],\n    [now.add({ days: 14 }), now.add({ days: 16 })],\n    [now.add({ days: 23 }), now.add({ days: 24 })],\n  ];\n\n  const isDateUnavailable = (date: DateValue) =>\n    disabledRanges.some(\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0\n    );\n\n  return (\n    <RangeCalendar\n      aria-label=\"Trip dates\"\n      minValue={today(getLocalTimeZone())}\n      isDateUnavailable={isDateUnavailable}\n    />\n  );\n}\n"}]
    },
    "demos/components/core/range-calendar/non-contiguous-ranges": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/non-contiguous-ranges")),
      code : [{"title":"non-contiguous-ranges.tsx","code":"\"use client\";\n\nimport { type DateValue, getLocalTimeZone, today } from \"@internationalized/date\";\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  const now = today(getLocalTimeZone());\n  const disabledRanges = [\n    [now, now.add({ days: 5 })],\n    [now.add({ days: 14 }), now.add({ days: 16 })],\n    [now.add({ days: 23 }), now.add({ days: 24 })],\n  ];\n\n  const isDateUnavailable = (date: DateValue) =>\n    disabledRanges.some(\n      (interval) => date.compare(interval[0]) >= 0 && date.compare(interval[1]) <= 0\n    );\n\n  return (\n    <RangeCalendar\n      aria-label=\"Trip dates\"\n      minValue={today(getLocalTimeZone())}\n      isDateUnavailable={isDateUnavailable}\n      allowsNonContiguousRanges\n    />\n  );\n}\n"}]
    },
    "demos/components/core/range-calendar/visible-months": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/visible-months")),
      code : [{"title":"visible-months.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  return <RangeCalendar visibleMonths={2} />;\n}\n"}]
    },
    "demos/components/core/range-calendar/page-behaviour": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/page-behaviour")),
      code : [{"title":"page-behaviour.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  return <RangeCalendar visibleMonths={2} pageBehavior=\"single\" />;\n}\n"}]
    },
    "demos/components/core/range-calendar/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/disabled")),
      code : [{"title":"disabled.tsx","code":"import { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  return <RangeCalendar aria-label=\"Appointment date\" isDisabled />;\n}\n"}]
    },
    "demos/components/core/range-calendar/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  return (\n    <RangeCalendar\n      aria-label=\"Appointment date\"\n      isReadOnly\n      value={{\n        start: today(getLocalTimeZone()),\n        end: today(getLocalTimeZone()).add({ weeks: 1 }),\n      }}\n    />\n  );\n}\n"}]
    },
    "demos/components/core/range-calendar/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/range-calendar/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { getLocalTimeZone, today } from \"@internationalized/date\";\nimport { type DateRange } from \"react-aria-components\";\nimport { RangeCalendar } from \"@/lib/components/core/default/range-calendar\";\n\nexport default function Demo() {\n  const [range, setRange] = React.useState<DateRange>({\n    start: today(getLocalTimeZone()),\n    end: today(getLocalTimeZone()).add({ weeks: 1 }),\n  });\n  return (\n    <div className=\"flex flex-col items-center gap-6\">\n      <RangeCalendar aria-label=\"Date (controlled)\" value={range} onChange={setRange} />\n      <p className=\"text-sm text-fg-muted\">\n        Start date: {range?.start.toString()}\n        <br />\n        End date: {range?.end.toString()}\n      </p>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/time-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/default")),
      code : [{"title":"default.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/label")),
      code : [{"title":"label.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TimeField label=\"Visible label\" />\r\n      <TimeField aria-label=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <TimeField label=\"small (sm)\" size=\"sm\" />\r\n      <TimeField label=\"medium (md)\" size=\"md\" />\r\n      <TimeField label=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { TimerIcon } from \"lucide-react\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <TimeField prefix={<TimerIcon />} />\r\n      <TimeField suffix={<TimerIcon />} />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\n\nexport default function Demo() {\n  return (\n    <TimeField\n      label=\"Appointment\"\n      description=\"Please select a time between 9 AM and 5 PM.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/time-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\n\nexport default function Demo() {\n  return (\n    <TimeField\n      label=\"Appointment\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you're having trouble accessing your account, contact our customer\n      support team for help.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/time-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\n\nexport default function Demo() {\n  return (\n    <TimeField\n      label=\"Meeting\"\n      isInvalid\n      errorMessage=\"Meetings start every 15 minutes.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/time-field/time-zones": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/time-zones")),
      code : [{"title":"time-zones.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField defaultValue={parseAbsoluteToLocal(\"2021-11-07T07:45:00Z\")} />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/granularity": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/granularity")),
      code : [{"title":"granularity.tsx","code":"\"use client\";\r\n\r\nimport { parseAbsoluteToLocal } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TimeField\r\n      granularity=\"second\"\r\n      defaultValue={parseAbsoluteToLocal(\"2021-04-07T18:45:22Z\")}\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/placeholder": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/placeholder")),
      code : [{"title":"placeholder.tsx","code":"\"use client\";\r\n\r\nimport { Time } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField placeholderValue={new Time(9)} />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/hide-time-zone": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/hide-time-zone")),
      code : [{"title":"hide-time-zone.tsx","code":"\"use client\";\r\n\r\nimport { parseZonedDateTime } from \"@internationalized/date\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TimeField\r\n      defaultValue={parseZonedDateTime(\"2022-11-07T10:45[America/Los_Angeles]\")}\r\n      hideTimeZone\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/hour-cycle": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/hour-cycle")),
      code : [{"title":"hour-cycle.tsx","code":"\"use client\";\r\n\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField aria-label=\"Appointment time\" hourCycle={24} />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-2\">\r\n      <TimeField isLoading loaderPosition=\"prefix\" />\r\n      <TimeField isLoading loaderPosition=\"suffix\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  return <TimeField label=\"Event time\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/time-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Time } from \"@internationalized/date\";\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\n\nexport default function Demo() {\n  return <TimeField label=\"Event time\" value={new Time(11)} isReadOnly />;\n}\n"}]
    },
    "demos/components/core/time-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <TimeField label=\"Event time\" isRequired />\n      <TimeField label=\"Event time\" isRequired necessityIndicator=\"icon\" />\n      <TimeField label=\"Event time\" isRequired necessityIndicator=\"label\" />\n      <TimeField label=\"Event time\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/time-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Time } from \"@internationalized/date\"\r\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\r\n\r\nexport default function Demo() {\r\n  const [time, setTime] = React.useState(new Time(11, 45));\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <TimeField value={time} onChange={setTime} />\r\n      <p className=\"text-sm text-fg-muted\">selected  time: {time.toString()}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/time-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/time-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TimeField } from \"@/lib/components/core/default/time-field\";\n\nexport default function Demo() {\n  return <TimeField />;\n}\n"}]
    },
    "demos/components/core/drop-zone/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drop-zone/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { UploadIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { DropZone } from \"@/lib/components/core/default/drop-zone\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\n\r\nexport default function DropZoneDemo() {\r\n  const [dropped, setDropped] = React.useState(false);\r\n  return (\r\n    <DropZone\r\n      label={dropped ? \"Successful drop!\" : \"Drop files here\"}\r\n      description=\"Drag and drop files here to upload\"\r\n      onDrop={() => setDropped(true)}\r\n    >\r\n      <span className=\"text-fg-muted\">Or</span>\r\n      <FileTrigger>\r\n        <Button prefix={<UploadIcon />}>Upload</Button>\r\n      </FileTrigger>\r\n    </DropZone>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/alert/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/default")),
      code : [{"title":"default.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\n\nexport default function AlertDemo() {\n  return <Alert>You can add components to your app using the cli.</Alert>;\n}\n"}]
    },
    "demos/components/core/alert/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/variants")),
      code : [{"title":"variants.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Alert } from \"@/lib/components/core/default/alert\";\r\nimport { Label } from \"@/lib/components/core/default/field\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\r\n\r\ntype Type = \"default\" | \"success\" | \"danger\" | \"warning\" | \"info\";\r\ntype Variant = \"default\" | \"muted\" | \"fill\";\r\n\r\nexport default function SonnerVariantsDemo() {\r\n  const [type, setType] = React.useState<Type>(\"default\");\r\n  const [variant, setVariant] = React.useState<Variant>(\"default\");\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-16\">\r\n      <Alert variant={variant} type={type}>\r\n        You can add components to your app using the cli.\r\n      </Alert>\r\n      <div className=\"flex gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label>Type</Label>\r\n          <RadioGroup value={type} onChange={(newVal) => setType(newVal as Type)}>\r\n            <Radio value=\"default\">Default</Radio>\r\n            <Radio value=\"success\">Success</Radio>\r\n            <Radio value=\"danger\">Danger</Radio>\r\n            <Radio value=\"warning\">Warning</Radio>\r\n            <Radio value=\"info\">Info</Radio>\r\n          </RadioGroup>\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label>Variant</Label>\r\n          <RadioGroup\r\n            value={variant}\r\n            onChange={(newVal) => setVariant(newVal as Variant)}\r\n          >\r\n            <Radio value=\"default\">Default</Radio>\r\n            <Radio value=\"muted\">Muted</Radio>\r\n            <Radio value=\"fill\">Fill</Radio>\r\n          </RadioGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/alert/action": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/action")),
      code : [{"title":"action.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function AlertDemo() {\n  return (\n    <Alert\n      action={\n        <Button type=\"primary\" size=\"sm\">\n          Upgrade\n        </Button>\n      }\n    >\n      This note details some information.\n    </Alert>\n  );\n}\n"}]
    },
    "demos/components/core/alert/custom-icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/custom-icon")),
      code : [{"title":"custom-icon.tsx","code":"import { GlobeIcon } from \"lucide-react\";\nimport { Alert } from \"@/lib/components/core/default/alert\";\n\nexport default function AlertDemo() {\n  return <Alert icon={<GlobeIcon />}>Hello world!</Alert>;\n}\n"}]
    },
    "demos/components/core/alert/title": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/title")),
      code : [{"title":"title.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\r\n\r\nexport default function AlertDemo() {\r\n  return <Alert title=\"Alert!\">You can add components to your app using the cli.</Alert>;\r\n}\r\n"}]
    },
    "demos/components/core/progress-bar/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar value={75} />;\n}\n"}]
    },
    "demos/components/core/progress-bar/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/sizes")),
      code : [{"title":"sizes.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function ProgressDemo() {\n  return (\n    <div className=\"w-full space-y-4\">\n      {sizes.map((size) => (\n        <div key={size}>\n          <p className=\"font-bold\">{size}</p>\n          <ProgressBar value={75} size={size} />\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/progress-bar/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/variants")),
      code : [{"title":"variants.tsx","code":"import * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nconst variants = [\"default\", \"success\", \"info\", \"danger\", \"warning\"] as const;\n\nexport default function ProgressDemo() {\n  return (\n    <div className=\"w-full space-y-4\">\n      {variants.map((variant) => (\n        <div key={variant}>\n          <p className=\"font-bold\">{variant}</p>\n          <ProgressBar value={75} variant={variant} />\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/progress-bar/duration": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/duration")),
      code : [{"title":"duration.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar duration=\"30s\" />;\n}\n"}]
    },
    "demos/components/core/progress-bar/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar />;\n}\n"}]
    },
    "demos/components/core/progress-bar/max": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/max")),
      code : [{"title":"max.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar value={50} min={40} max={60} />;\n}\n"}]
    },
    "demos/components/core/progress-bar/custom-color": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/custom-color")),
      code : [{"title":"custom-color.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar value={50} indicatorProps={{ className: \"bg-zinc-500\" }} />;\n}\n"}]
    },
    "demos/components/core/progress-bar/toolbar": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/toolbar")),
      code : [{"title":"toolbar.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { ALargeSmallIcon, RotateCwIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function ProgressDemo() {\r\n  return (\r\n    <TextField\r\n      defaultValue=\"https://rcopy.dev\"\r\n      className=\"relative h-12 pb-0.5 [&_input]:text-center\"\r\n      prefix={\r\n        <Button size=\"sm\" variant=\"ghost\" shape=\"square\">\r\n          <ALargeSmallIcon />\r\n        </Button>\r\n      }\r\n      suffix={\r\n        <Button size=\"sm\" variant=\"ghost\" shape=\"circle\">\r\n          <RotateCwIcon />\r\n        </Button>\r\n      }\r\n    >\r\n      <ProgressBar\r\n        value={50}\r\n        size=\"sm\"\r\n        variant=\"info\"\r\n        className=\"absolute bottom-0 left-0 right-0 rounded-none bg-transparent\"\r\n      />\r\n    </TextField>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/default")),
      code : [{"title":"default.tsx","code":"import { Skeleton } from \"@/lib/components/core/default/skeleton\";\n\nexport default function SkeletonDemo() {\n  return (\n    <div className=\"space-y-4\">\n      <Skeleton className=\"h-44 w-64\" />\n      <div className=\"flex items-center space-x-4\">\n        <Skeleton className=\"size-10 rounded-full\" />\n        <div className=\"space-y-2\">\n          <Skeleton className=\"h-4 w-44\" />\n          <Skeleton className=\"h-4 w-36\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/skeleton/default-with-set-width": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/default-with-set-width")),
      code : [{"title":"default-with-set-width.tsx","code":"import { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return <Skeleton className=\"w-44\" />;\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/wrapping-children": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/wrapping-children")),
      code : [{"title":"wrapping-children.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Skeleton>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n      <Skeleton show={false}>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/wrapping-children-with-fixed-size": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/wrapping-children-with-fixed-size")),
      code : [{"title":"wrapping-children-with-fixed-size.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <Skeleton className=\"h-20 w-20\">\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\nexport default function ToastDemo() {\n  return <Button onPress={() => toast(\"Event has been created\")}>Show toast</Button>;\n}\n"}]
    },
    "demos/components/core/toast/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/variants")),
      code : [{"title":"variants.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Label } from \"@/lib/components/core/default/field\";\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\ntype Type = \"default\" | \"success\" | \"error\" | \"warning\" | \"info\";\ntype Variant = \"default\" | \"muted\" | \"fill\";\n\nexport default function SonnerVariantsDemo() {\n  const [type, setType] = React.useState<Type>(\"default\");\n  const [variant, setVariant] = React.useState<Variant>(\"default\");\n  const action = {\n    default: toast,\n    success: toast.success,\n    warning: toast.warning,\n    error: toast.error,\n    info: toast.info,\n  };\n\n  return (\n    <div className=\"flex items-center gap-16\">\n      <Button\n        onPress={() =>\n          action[type](\"Event has been created\", {\n            variant,\n          })\n        }\n      >\n        Show toast\n      </Button>\n      <div className=\"flex gap-4\">\n        <div className=\"space-y-2\">\n          <Label>Type</Label>\n          <RadioGroup value={type} onChange={(newVal) => setType(newVal as Type)}>\n            <Radio value=\"default\">Default</Radio>\n            <Radio value=\"success\">Success</Radio>\n            <Radio value=\"error\">Error</Radio>\n            <Radio value=\"warning\">Warning</Radio>\n            <Radio value=\"info\">Info</Radio>\n          </RadioGroup>\n        </div>\n        <div className=\"space-y-2\">\n          <Label>Variant</Label>\n          <RadioGroup\n            value={variant}\n            onChange={(newVal) => setVariant(newVal as Variant)}\n          >\n            <Radio value=\"default\">Default</Radio>\n            <Radio value=\"muted\">Muted</Radio>\n            <Radio value=\"fill\">Fill</Radio>\n          </RadioGroup>\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toast/custom-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/custom-content")),
      code : [{"title":"custom-content.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\nexport default function ToastDemo() {\n  return (\n    <Button\n      onPress={() =>\n        toast(\n          <>\n            The <span className=\"font-bold\">Evil Rabbit</span> jumped over the fence.\n          </>\n        )\n      }\n    >\n      Show toast\n    </Button>\n  );\n}\n"}]
    },
    "demos/components/core/toast/multi-line": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/multi-line")),
      code : [{"title":"multi-line.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\r\n          \"The Evil Rabbit jumped over the fence. The Evil Rabbit jumped over the fence. The Evil Rabbit jumped over the fence. The Evil Rabbit jumped over the fence.\"\r\n        )\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/preserve": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/preserve")),
      code : [{"title":"preserve.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\nexport default function ToastDemo() {\n  return (\n    <Button onPress={() => toast(\"Event has been created\", { duration: Infinity })}>\n      Show toast\n    </Button>\n  );\n}\n"}]
    },
    "demos/components/core/toast/action": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/action")),
      code : [{"title":"action.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\"Event has been created\", {\r\n          description: \"Sunday, December 03, 2023 at 9:00 AM\",\r\n          action: {\r\n            label: \"Undo\",\r\n            onClick: () => console.log(\"Undo\"),\r\n          },\r\n        })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\"Event has been created\", {\r\n          description: \"Sunday, December 03, 2023 at 9:00 AM\",\r\n        })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/undo": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/undo")),
      code : [{"title":"undo.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\"Event has been created\", { onUndo: () => console.log(\"undo\") })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/dismissible": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/dismissible")),
      code : [{"title":"dismissible.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\"Event has been created\", {\r\n          dismissible: false,\r\n        })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/custom-icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/custom-icon")),
      code : [{"title":"custom-icon.tsx","code":"\"use client\";\r\n\r\nimport { HelpCircleIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button onPress={() => toast(\"Why this is happening?\", { icon: <HelpCircleIcon /> })}>\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-card/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxCard\n      title=\"Upload documents\"\n      description=\"upload documents from your computer.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-card/title": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/title")),
      code : [{"title":"title.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxCard defaultSelected title=\"Upload documents\" />\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-card/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxCard\n      defaultSelected\n      title=\"Upload documents\"\n      description=\"upload documents from your computer.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-card/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDisabledDemo() {\n  return (\n    <CheckboxCard isIndeterminate defaultSelected>\n      Select all\n    </CheckboxCard>\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-card/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/disabled")),
      code : [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\r\n\r\nexport default function CheckboxDemo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <CheckboxCard\r\n        isDisabled\r\n        title=\"Upload documents\"\r\n        description=\"upload documents from your computer.\"\r\n      />\r\n      <CheckboxCard\r\n        defaultSelected\r\n        isDisabled\r\n        title=\"Upload documents\"\r\n        description=\"upload documents from your computer.\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-card/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxCard\n      isReadOnly\n      title=\"Upload documents\"\n      description=\"upload documents from your computer.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-card/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\r\n\r\nexport default function CheckboxDemo() {\r\n  const [checked, setChecked] = React.useState(true);\r\n  return (\r\n    <div>\r\n      <CheckboxCard\r\n        isSelected={checked}\r\n        onChange={(isSelected) => setChecked(isSelected)}\r\n        title=\"Upload documents\"\r\n        description=\"upload documents from your computer.\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-card/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxCard\n      defaultSelected\n      title=\"Upload documents\"\n      description=\"upload documents from your computer.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-group/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/default")),
      code : [{"title":"default.tsx","code":"import { Checkbox, CheckboxGroup } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/label")),
      code : [{"title":"label.tsx","code":"import { CheckboxGroup, Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n        <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup aria-label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n        <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n      </CheckboxGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/description")),
      code : [{"title":"description.tsx","code":"import { CheckboxGroup, Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup\r\n      label=\"React frameworks\"\r\n      defaultValue={[\"nextjs\"]}\r\n      description=\"You can pick any frameworks.\"\r\n    >\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import { CheckboxGroup, Checkbox } from \"@/lib/components/core/default/checkbox\";\r\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup\r\n      label=\"React frameworks\"\r\n      defaultValue={[\"nextjs\"]}\r\n      contextualHelp={\r\n        <ContextualHelp\r\n          title=\"Need help?\"\r\n          description=\"If you need help, please contact support.\"\r\n        />\r\n      }\r\n    >\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/error-message")),
      code : [{"title":"error-message.tsx","code":"import { CheckboxGroup, Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup\r\n      label=\"React frameworks\"\r\n      isInvalid\r\n      errorMessage=\"Please select a framework.\"\r\n    >\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\r\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox/checkbox-group\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" isDisabled defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/read-only")),
      code : [{"title":"read-only.tsx","code":"import { CheckboxGroup, Checkbox } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" isReadOnly defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\r\nimport { Checkbox, CheckboxGroup } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"grid grid-cols-2 gap-4\">\r\n      <CheckboxGroup label=\"React frameworks\" isRequired>\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup label=\"React frameworks\" isRequired necessityIndicator=\"icon\">\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup label=\"React frameworks\" isRequired necessityIndicator=\"label\">\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n      <CheckboxGroup label=\"React frameworks\" necessityIndicator=\"label\">\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n      </CheckboxGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/cards": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/cards")),
      code : [{"title":"cards.tsx","code":"import { CheckboxCard, CheckboxGroup } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n      <CheckboxCard value=\"nextjs\" title=\"Next.js\" />\r\n      <CheckboxCard value=\"remix\" title=\"Remix\" />\r\n      <CheckboxCard value=\"gatsby\" title=\"Gatsby\" />\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Checkbox, CheckboxGroup } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  const [frameworks, setFrameworks] = React.useState([\"nextjs\", \"remix\", \"gatsby\"]);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <CheckboxGroup\r\n        label=\"React frameworks\"\r\n        value={frameworks}\r\n        onChange={(value) => setFrameworks(value)}\r\n      >\r\n        <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n        <Checkbox value=\"remix\">Remix</Checkbox>\r\n        <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n      </CheckboxGroup>\r\n      <p className=\"text-xs text-fg-muted\">\r\n        {frameworks.length === 0\r\n          ? \"You haven't selected any frameworks.\"\r\n          : `You selected ${frameworks.join(\", \")}.`}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-group/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/composition")),
      code : [{"title":"composition.tsx","code":"import { Checkbox, CheckboxGroup } from \"@/lib/components/core/default/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <CheckboxGroup label=\"React frameworks\" defaultValue={[\"nextjs\"]}>\r\n      <Checkbox value=\"nextjs\">Next.js</Checkbox>\r\n      <Checkbox value=\"remix\">Remix</Checkbox>\r\n      <Checkbox value=\"gatsby\">Gatsby</Checkbox>\r\n    </CheckboxGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\nimport { Link } from \"@/lib/components/core/default/link\";\n\nexport default function Demo() {\n  return (\n    <Checkbox defaultSelected>\n      I accept the <Link variant=\"primary\" href=\"#\">terms and conditions</Link>\n    </Checkbox>\n  );\n}\n"}]
    },
    "demos/components/core/checkbox/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\n\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\n\nexport default function Demo() {\n  return (\n    <Checkbox isIndeterminate>\n      Select all\n    </Checkbox>\n  );\n}\n"}]
    },
    "demos/components/core/checkbox/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/disabled")),
      code : [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <Checkbox isDisabled>\r\n      I accept the terms and conditions\r\n    </Checkbox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/read-only")),
      code : [{"title":"read-only.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\n\nexport default function Demo() {\n  return (\n    <Checkbox defaultSelected isReadOnly>\n      I accept the terms and conditions\n    </Checkbox>\n  );\n}\n"}]
    },
    "demos/components/core/checkbox/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\r\n\r\nexport default function Demo() {\r\n  const [checked, setChecked] = React.useState(false);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Checkbox isSelected={checked} onChange={setChecked}>\r\n        I accept the terms and conditions\r\n      </Checkbox>\r\n      <p className=\"text-xs text-fg-muted\">\r\n        <span className=\"font-bold\">Checked:</span> {checked ? \"true\" : \"false\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/composition")),
      code : [{"title":"composition.tsx","code":"import { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\n\nexport default function Demo() {\n  return <Checkbox defaultSelected>I accept the terms and conditions</Checkbox>;\n}\n"}]
    },
    "demos/components/core/number-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return <NumberField label=\"Width\" defaultValue={1024}  />;\n}\n"}]
    },
    "demos/components/core/number-field/format-options": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/format-options")),
      code : [{"title":"format-options.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <NumberField\n        label=\"Decimal\"\n        defaultValue={0}\n        formatOptions={{\n          signDisplay: \"exceptZero\",\n          minimumFractionDigits: 1,\n          maximumFractionDigits: 2,\n        }}\n      />\n      <NumberField\n        label=\"Percentage\"\n        defaultValue={0.05}\n        formatOptions={{\n          style: \"percent\",\n        }}\n      />\n      <NumberField\n        label=\"Currency\"\n        defaultValue={45}\n        formatOptions={{\n          style: \"currency\",\n          currency: \"EUR\",\n          currencyDisplay: \"code\",\n          currencySign: \"accounting\",\n        }}\n      />\n      <NumberField\n        label=\"Unit\"\n        defaultValue={4}\n        formatOptions={{\n          style: \"unit\",\n          unit: \"inch\",\n          unitDisplay: \"long\",\n        }}\n      />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/number-field/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/variants")),
      code : [{"title":"variants.tsx","code":"import { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <NumberField variant=\"success\" label=\"Success\" />\r\n      <NumberField variant=\"warning\" label=\"Warning\" />\r\n      <NumberField variant=\"danger\" label=\"Danger\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <NumberField placeholder=\"small (sm)\" size=\"sm\" />\r\n      <NumberField placeholder=\"medium (md)\" size=\"md\" />\r\n      <NumberField placeholder=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/label")),
      code : [{"title":"label.tsx","code":"import { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <NumberField label=\"Width\" placeholder=\"Visible label\" />\r\n      <NumberField aria-label=\"Width\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return <NumberField label=\"Width\" description=\"Enter the desired width\" />;\n}\n"}]
    },
    "demos/components/core/number-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return (\n    <NumberField\n      label=\"Width\"\n      defaultValue={1024}\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you need help, please contact support.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/number-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return (\n    <NumberField\n      label=\"Search\"\n      isInvalid\n      errorMessage=\"Please fill out this field.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/number-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  return <NumberField defaultValue={20} isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/number-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return <NumberField label=\"Email\" isReadOnly value={69} />;\n}\n"}]
    },
    "demos/components/core/number-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <NumberField label=\"Width\" isRequired />\n      <NumberField label=\"Width\" isRequired necessityIndicator=\"icon\" />\n      <NumberField label=\"Width\" isRequired necessityIndicator=\"label\" />\n      <NumberField label=\"Width\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/number-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(69);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <NumberField\r\n        value={inputValue}\r\n        onChange={(value) => {\r\n          setInputValue(value);\r\n        }}\r\n      />\r\n      <p className=\"text-sm text-fg-muted\">mirrored number: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/number-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/number-field/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\n\nexport default function Demo() {\n  return <NumberField label=\"Width\" defaultValue={1024} />;\n}\n"}]
    },
    "demos/components/core/radio-card/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-card/default")),
      code : [{"title":"default.tsx","code":"import { RadioGroup, RadioCard } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"pro-trial\">\n      <RadioCard value=\"pro-trial\" title=\"Pro trial\" />\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-card/title": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-card/title")),
      code : [{"title":"title.tsx","code":"import { RadioGroup, RadioCard } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup>\n      <RadioCard value=\"pro-trial\" title=\"Pro trial\" />\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-card/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-card/description")),
      code : [{"title":"description.tsx","code":"import { RadioGroup, RadioCard } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup>\n      <RadioCard value=\"pro-trial\" title=\"Pro trial\" description=\"Free for two weeks\" />\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-card/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-card/disabled")),
      code : [{"title":"disabled.tsx","code":"import { RadioGroup, RadioCard } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"pro-trial\">\n      <RadioCard\n        isDisabled\n        value=\"pro-trial\"\n        title=\"Pro trial\"\n        description=\"Free for two weeks\"\n      />\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/default")),
      code : [{"title":"default.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"sm\" label=\"Size\">\n      <Radio value=\"sm\">Small</Radio>\n      <Radio value=\"md\">Medium</Radio>\n      <Radio value=\"lg\">Large</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/orientation")),
      code : [{"title":"orientation.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" orientation=\"horizontal\">\n      <Radio value=\"sm\">Small</Radio>\n      <Radio value=\"md\">Medium</Radio>\n      <Radio value=\"lg\">Large</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/label")),
      code : [{"title":"label.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-10\">\r\n      <RadioGroup defaultValue=\"sm\" label=\"Size\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <RadioGroup defaultValue=\"sm\" aria-label=\"Size\">\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/description")),
      code : [{"title":"description.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" description=\"Select a product size.\">\n      <Radio value=\"sm\">Small</Radio>\n      <Radio value=\"md\">Medium</Radio>\n      <Radio value=\"lg\">Large</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup\n      defaultValue=\"sm\"\n      label=\"Size\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you need help, please contact support.\"\n        />\n      }\n    >\n      <Radio value=\"sm\">Small</Radio>\n      <Radio value=\"md\">Medium</Radio>\n      <Radio value=\"lg\">Large</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/error-message")),
      code : [{"title":"error-message.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup\n      defaultValue={null}\n      label=\"Size\"\n      isInvalid\n      errorMessage=\"Please select a product size.\"\n    >\n      <Radio value=\"sm\">Small</Radio>\n      <Radio value=\"md\">Medium</Radio>\n      <Radio value=\"lg\">Large</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/disabled")),
      code : [{"title":"disabled.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" isDisabled>\r\n      <Radio value=\"sm\">Small</Radio>\r\n      <Radio value=\"md\">Medium</Radio>\r\n      <Radio value=\"lg\">Large</Radio>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/read-only")),
      code : [{"title":"read-only.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" isReadOnly>\n      <Radio value=\"sm\">Small</Radio>\n      <Radio value=\"md\">Medium</Radio>\n      <Radio value=\"lg\">Large</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/required")),
      code : [{"title":"required.tsx","code":"import React from \"react\";\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" isRequired>\n        <Radio value=\"sm\">Small</Radio>\n        <Radio value=\"lg\">Large</Radio>\n      </RadioGroup>\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" isRequired necessityIndicator=\"icon\">\n        <Radio value=\"sm\">Small</Radio>\n        <Radio value=\"lg\">Large</Radio>\n      </RadioGroup>\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" isRequired necessityIndicator=\"label\">\n        <Radio value=\"sm\">Small</Radio>\n        <Radio value=\"lg\">Large</Radio>\n      </RadioGroup>\n      <RadioGroup defaultValue=\"sm\" label=\"Size\" necessityIndicator=\"label\">\n        <Radio value=\"sm\">Small</Radio>\n        <Radio value=\"lg\">Large</Radio>\n      </RadioGroup>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/cards": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/cards")),
      code : [{"title":"cards.tsx","code":"import { RadioGroup, RadioCard } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"sm\" label=\"Size\" orientation=\"horizontal\">\n      <RadioCard value=\"sm\" title=\"Small\" description=\"Dimension: 128 x 128\" />\n      <RadioCard value=\"md\" title=\"Medium\" description=\"Dimension: 256 x 256\" />\n      <RadioCard value=\"lg\" title=\"Large\" description=\"Dimension: 512 x 512\" />\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\r\n\r\nexport default function Demo() {\r\n  const [size, setSize] = React.useState(\"sm\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <RadioGroup\r\n        defaultValue=\"sm\"\r\n        label=\"Size\"\r\n        value={size}\r\n        onChange={(value) => setSize(value)}\r\n      >\r\n        <Radio value=\"sm\">Small</Radio>\r\n        <Radio value=\"md\">Medium</Radio>\r\n        <Radio value=\"lg\">Large</Radio>\r\n      </RadioGroup>\r\n      <p className=\"text-xs text-fg-muted\">\r\n        {`You selected: ${size}`}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/radio-group/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/composition")),
      code : [{"title":"composition.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup defaultValue=\"sm\" label=\"Size\">\n      <Radio value=\"sm\">Small</Radio>\n      <Radio value=\"md\">Medium</Radio>\n      <Radio value=\"lg\">Large</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio/default")),
      code : [{"title":"default.tsx","code":"import { Radio, RadioGroup } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup>\n      <Radio value=\"option-1\">Option</Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Radio, RadioGroup } from \"@/lib/components/core/default/radio\";\n\nexport default function Demo() {\n  return (\n    <RadioGroup>\n      <Radio value=\"option-1\" isDisabled>\n        Option\n      </Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/search-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\n\nexport default function Demo() {\n  return <SearchField aria-label=\"Search\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/search-field/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/variants")),
      code : [{"title":"variants.tsx","code":"import { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <SearchField variant=\"success\" label=\"Success\" />\r\n      <SearchField variant=\"warning\" label=\"Warning\" />\r\n      <SearchField variant=\"danger\" label=\"Danger\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <SearchField placeholder=\"small (sm)\" size=\"sm\" />\r\n      <SearchField placeholder=\"medium (md)\" size=\"md\" />\r\n      <SearchField placeholder=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { XCircleIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <SearchField\r\n      defaultValue=\"Hello world!\"\r\n      prefix=\"🔍\"\r\n      suffix={\r\n        <Tooltip content=\"Clear input\" className=\"text-xs\">\r\n          <Button variant=\"quiet\" shape=\"square\" size=\"sm\" className=\"size-6\">\r\n            <XCircleIcon />\r\n          </Button>\r\n        </Tooltip>\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/label")),
      code : [{"title":"label.tsx","code":"import { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <SearchField label=\"Search\" placeholder=\"Visible label\" />\r\n      <SearchField aria-label=\"Search\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\n\nexport default function Demo() {\n  return <SearchField label=\"Search\" description=\"Enter your search query\" />;\n}\n"}]
    },
    "demos/components/core/search-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\n\nexport default function Demo() {\n  return (\n    <SearchField\n      label=\"Search\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you need help, please contact support.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/search-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\n\nexport default function Demo() {\n  return (\n    <SearchField\n      label=\"Search\"\n      isInvalid\n      errorMessage=\"Please fill out this field.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/search-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\nimport { useDebounce } from \"@/lib/hooks/use-debounce\";\r\n\r\nexport default function Demo() {\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const debouncedInputValue = useDebounce(inputValue, 500);\r\n\r\n  React.useEffect(() => {\r\n    if (debouncedInputValue) {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1500);\r\n    }\r\n  }, [debouncedInputValue]);\r\n\r\n  return (\r\n    <div className=\"w-full space-y-4\">\r\n      <div className=\"grid grid-cols-2 gap-2\">\r\n        <SearchField isLoading loaderPosition=\"prefix\" />\r\n        <SearchField isLoading loaderPosition=\"suffix\" />\r\n      </div>\r\n      <SearchField\r\n        label=\"Search\"\r\n        placeholder=\"Type your search query\"\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n        type={!isLoading && debouncedInputValue ? \"success\" : undefined}\r\n        isLoading={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  return <SearchField defaultValue=\"Is CopyUI the next-gen ui lib?\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/search-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\n\nexport default function Demo() {\n  return <SearchField label=\"Email\" isReadOnly value=\"hello@copyui.dev\" />;\n}\n"}]
    },
    "demos/components/core/search-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <SearchField label=\"Search\" isRequired />\n      <SearchField label=\"Search\" isRequired necessityIndicator=\"icon\" />\n      <SearchField label=\"Search\" isRequired necessityIndicator=\"label\" />\n      <SearchField label=\"Search\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/search-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Is CopyUI the next-gen ui lib?\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <SearchField\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n      />\r\n      <p className=\"text-sm text-fg-muted\">mirrored search text: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/search-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/search-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { SearchField } from \"@/lib/components/core/default/search-field\";\n\nexport default function Demo() {\n  return <SearchField label=\"Search\" />;\n}\n"}]
    },
    "demos/components/core/slider/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/basic")),
      code : [{"title":"basic.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={50} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={50} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/orientation")),
      code : [{"title":"orientation.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={50} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/range": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/range")),
      code : [{"title":"range.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={[20, 50]} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={50} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/value-label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/value-label")),
      code : [{"title":"value-label.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={50} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={50} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/composition")),
      code : [{"title":"composition.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={50} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/switch/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/default")),
      code : [{"title":"default.tsx","code":"import React from \"react\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function Demo() {\n  return <Switch>Focus mode</Switch>;\n}\n"}]
    },
    "demos/components/core/switch/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      <Switch size=\"sm\" defaultSelected />\n      <Switch size=\"md\" defaultSelected />\n      <Switch size=\"lg\" defaultSelected />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/switch/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/label")),
      code : [{"title":"label.tsx","code":"import React from \"react\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function Demo() {\n  return (\n    <div className=\"flex items-center gap-10\">\n      <Switch>Focus mode</Switch>\n      <Switch aria-label=\"Focus mode\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/switch/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  return (\n    <div className=\"flex items-center gap-10\">\n      <Switch isDisabled defaultSelected>\n        Focus Mode\n      </Switch>\n      <Switch isDisabled>Focus Mode</Switch>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/switch/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  const [isSelected, setSelected] = React.useState(true);\n  return (\n    <div className=\"flex flex-col items-center gap-4\">\n      <Switch isSelected={isSelected} onChange={setSelected}>\n        Airplane Mode\n      </Switch>\n      <p className=\"text-xs text-fg-muted\">\n        {isSelected ? (\n          <>\n            You are on <span className=\"font-bold\">focus mode</span>.\n          </>\n        ) : (\n          \"You are not on focus mode.\"\n        )}\n      </p>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/text-area/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\n\nexport default function Demo() {\n  return <TextArea label=\"Description\" placeholder=\"Type your message here\" />;\n}\n"}]
    },
    "demos/components/core/text-area/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/variants")),
      code : [{"title":"variants.tsx","code":"import { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextArea variant=\"success\" label=\"Success\" />\r\n      <TextArea variant=\"warning\" label=\"Warning\" />\r\n      <TextArea variant=\"danger\" label=\"Danger\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { BoldIcon, ItalicIcon, XCircleIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <TextArea\r\n      label=\"Your comment\"\r\n      placeholder=\"type something here\"\r\n      prefix={\r\n        <div className=\"flex items-center gap-1\">\r\n          <Button variant=\"quiet\" shape=\"square\" size=\"sm\" className=\"size-7\">\r\n            👍\r\n          </Button>\r\n          <Button variant=\"quiet\" shape=\"square\" size=\"sm\" className=\"size-7\">\r\n            ❤️\r\n          </Button>\r\n        </div>\r\n      }\r\n      suffix={\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-0.5\">\r\n            <ToggleButton size=\"sm\">\r\n              <BoldIcon />\r\n            </ToggleButton>\r\n            <ToggleButton size=\"sm\">\r\n              <ItalicIcon />\r\n            </ToggleButton>\r\n          </div>\r\n          <Button variant=\"primary\" size=\"sm\">\r\n            Comment\r\n          </Button>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/label")),
      code : [{"title":"label.tsx","code":"import { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextArea label=\"Description\" placeholder=\"Visible label\" />\r\n      <TextArea aria-label=\"Description\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\n\nexport default function Demo() {\n  return <TextArea label=\"Description\" description=\"Type your description\" />;\n}\n"}]
    },
    "demos/components/core/text-area/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"import React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\n\nexport default function Demo() {\n  return (\n    <TextArea\n      label=\"Bio\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you're having trouble writing your bio, get assisted by our AI.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-area/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\n\nexport default function Demo() {\n  return (\n    <TextArea\n      defaultValue=\"support@copyui.dev\"\n      label=\"Comment\"\n      isInvalid\n      errorMessage=\"You have exceeded the comment limit for one hour.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-area/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\nimport { useDebounce } from \"@/lib/hooks/use-debounce\";\r\n\r\nexport default function Demo() {\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const debouncedInputValue = useDebounce(inputValue, 500);\r\n\r\n  React.useEffect(() => {\r\n    if (debouncedInputValue) {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1500);\r\n    }\r\n  }, [debouncedInputValue]);\r\n\r\n  return (\r\n    <div className=\"w-full space-y-4\">\r\n      <div className=\"grid grid-cols-2 gap-2\">\r\n        <TextArea isLoading loaderPosition=\"prefix\" />\r\n        <TextArea isLoading loaderPosition=\"suffix\" />\r\n      </div>\r\n      <TextArea\r\n        label=\"Description\"\r\n        placeholder=\"Type your description\"\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n        type={!isLoading && debouncedInputValue ? \"success\" : undefined}\r\n        isLoading={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/disabled")),
      code : [{"title":"disabled.tsx","code":"import { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  return <TextArea value=\"This is a comment\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/text-area/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\n\nexport default function Demo() {\n  return <TextArea label=\"Email\" isReadOnly value=\"This is a readonly comment\" />;\n}\n"}]
    },
    "demos/components/core/text-area/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\n\nexport default function Demo() {\n  return (\n    <TextArea\n      isRequired\n      necessityIndicator=\"icon\"\n      label=\"Description\"\n      placeholder=\"Type your message here\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-area/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Hello world!\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <TextArea\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n      />\r\n      <p className=\"text-sm text-fg-muted\">mirrored text: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-area/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/composition")),
      code : [{"title":"composition.tsx","code":"import React from \"react\";\nimport { TextArea } from \"@/lib/components/core/default/text-area\";\n\nexport default function Demo() {\n  return <TextArea label=\"Comment\" />;\n}\n"}]
    },
    "demos/components/core/text-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function Demo() {\n  return <TextField label=\"Email\" placeholder=\"hello@mehdibha.com\" />;\n}\n"}]
    },
    "demos/components/core/text-field/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/variants")),
      code : [{"title":"variants.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextField variant=\"success\" label=\"Success\" />\r\n      <TextField variant=\"warning\" label=\"Warning\" />\r\n      <TextField variant=\"danger\" label=\"Danger\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"flex items-center gap-4\">\r\n      <TextField placeholder=\"small (sm)\" size=\"sm\" />\r\n      <TextField placeholder=\"medium (md)\" size=\"md\" />\r\n      <TextField placeholder=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { XCircleIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"w-full space-y-2\">\r\n      <TextField prefix={<span>http://</span>} />\r\n      <TextField suffix={<span>@rcopy.dev</span>} />\r\n      <TextField\r\n        defaultValue=\"Hello world!\"\r\n        suffix={\r\n          <Tooltip content=\"Clear input\" placement=\"bottom\" className=\"text-xs\">\r\n            <Button variant=\"quiet\" shape=\"square\" size=\"sm\" className=\"size-6\">\r\n              <XCircleIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/label")),
      code : [{"title":"label.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextField label=\"Email\" placeholder=\"Visible label\" />\r\n      <TextField aria-label=\"Email\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function Demo() {\n  return <TextField label=\"Email\" description=\"Enter your email.\" />;\n}\n"}]
    },
    "demos/components/core/text-field/contextual-help": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/contextual-help")),
      code : [{"title":"contextual-help.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { ContextualHelp } from \"@/lib/components/core/default/contextual-help\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function Demo() {\n  return (\n    <TextField\n      label=\"Password\"\n      contextualHelp={\n        <ContextualHelp\n          title=\"Need help?\"\n          description=\"If you're having trouble accessing your account, contact our customer\n      support team for help.\"\n        />\n      }\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-field/error-message": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/error-message")),
      code : [{"title":"error-message.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function Demo() {\n  return (\n    <TextField\n      defaultValue=\"support@copyui.dev\"\n      label=\"Email\"\n      isInvalid\n      errorMessage=\"This email is already taken.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\nimport { useDebounce } from \"@/lib/hooks/use-debounce\";\r\n\r\nexport default function Demo() {\r\n  const [isLoading, setLoading] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const debouncedInputValue = useDebounce(inputValue, 500);\r\n\r\n  React.useEffect(() => {\r\n    if (debouncedInputValue) {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1500);\r\n    }\r\n  }, [debouncedInputValue]);\r\n\r\n  return (\r\n    <div className=\"w-full space-y-4\">\r\n      <div className=\"grid grid-cols-2 gap-2\">\r\n        <TextField isLoading loaderPosition=\"prefix\" />\r\n        <TextField isLoading loaderPosition=\"suffix\" />\r\n      </div>\r\n      <TextField\r\n        label=\"Username\"\r\n        placeholder=\"Type a username\"\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n        type={!isLoading && debouncedInputValue ? \"success\" : undefined}\r\n        isLoading={isLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  return <TextField value=\"hello@rcopy.dev\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/text-field/read-only": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/read-only")),
      code : [{"title":"read-only.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function Demo() {\n  return <TextField label=\"Email\" isReadOnly value=\"hello@copyui.dev\" />;\n}\n"}]
    },
    "demos/components/core/text-field/required": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/required")),
      code : [{"title":"required.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function Demo() {\n  return (\n    <div className=\"grid grid-cols-2 gap-4\">\n      <TextField label=\"Email\" isRequired />\n      <TextField label=\"Email\" isRequired necessityIndicator=\"icon\" />\n      <TextField label=\"Email\" isRequired necessityIndicator=\"label\" />\n      <TextField label=\"Email\" necessityIndicator=\"label\" />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/text-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function Demo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Hello world!\");\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <TextField\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n      />\r\n      <p className=\"text-sm text-fg-muted\">mirrored text: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function Demo() {\n  return (\n    <TextField\n      placeholder=\"example@email.com\"\n      label=\"Email\"\n      autoComplete=\"off\"\n      description=\"Enter your email.\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/aspect-ratio/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/aspect-ratio/basic")),
      code : [{"title":"basic.tsx","code":"import Image from \"next/image\";\nimport { AspectRatio } from \"@/lib/components/core/default/aspect-ratio\";\n\nexport default function AspectRatioDemo() {\n  return (\n    <AspectRatio ratio={16 / 9}>\n      <Image\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n        alt=\"Photo by Drew Beamer\"\n        fill\n        className=\"rounded-md object-cover\"\n      />\n    </AspectRatio>\n  );\n}\n"}]
    },
    "demos/components/core/resizable/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/default")),
      code : [{"title":"default.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup direction=\"horizontal\" className=\"max-w-md rounded-lg border\">\r\n      <ResizablePanel defaultSize={30}>\r\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={70}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">Two</span>\r\n        </div>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/vertical": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/vertical")),
      code : [{"title":"vertical.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup direction=\"vertical\" className=\"min-h-96 max-w-md rounded-lg border\">\r\n      <ResizablePanel defaultSize={30}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={70}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">Two</span>\r\n        </div>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/nested": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/nested")),
      code : [{"title":"nested.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup direction=\"horizontal\" className=\"max-w-md rounded-lg border\">\r\n      <ResizablePanel defaultSize={50}>\r\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={50}>\r\n        <ResizableGroup direction=\"vertical\">\r\n          <ResizablePanel defaultSize={25}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Two</span>\r\n            </div>\r\n          </ResizablePanel>\r\n          <ResizableHandle />\r\n          <ResizablePanel defaultSize={75}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Three</span>\r\n            </div>\r\n          </ResizablePanel>\r\n        </ResizableGroup>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/persistant": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/persistant")),
      code : [{"title":"persistant.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup\r\n      autoSaveId=\"persistence\"\r\n      direction=\"horizontal\"\r\n      className=\"max-w-md rounded-lg border\"\r\n    >\r\n      <ResizablePanel defaultSize={50}>\r\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle withHandle />\r\n      <ResizablePanel defaultSize={50}>\r\n        <ResizableGroup direction=\"vertical\">\r\n          <ResizablePanel defaultSize={25}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Two</span>\r\n            </div>\r\n          </ResizablePanel>\r\n          <ResizableHandle withHandle />\r\n          <ResizablePanel defaultSize={75}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Three</span>\r\n            </div>\r\n          </ResizablePanel>\r\n        </ResizableGroup>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/collapsible": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/collapsible")),
      code : [{"title":"collapsible.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { type LucideIcon } from \"lucide-react\";\r\nimport {\r\n  BlocksIcon,\r\n  BugPlayIcon,\r\n  FilesIcon,\r\n  GitCompareArrowsIcon,\r\n  MessageSquareIcon,\r\n  SearchIcon,\r\n} from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\nimport { Separator } from \"@/lib/components/core/default/separator\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { cn } from \"@/lib/utils/classes\";\r\n\r\nexport default function ResizableDemo() {\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n  return (\r\n    <div className={cn(\"flex h-full w-full flex-col rounded-lg bg-bg-muted text-left\")}>\r\n      {/* header */}\r\n      <div className=\"flex items-center gap-2 px-4 py-2\">\r\n        <div className=\"h-3 w-3 rounded-full bg-red-500\"></div>\r\n        <div className=\"h-3 w-3 rounded-full bg-yellow-500\"></div>\r\n        <div className=\"h-3 w-3 rounded-full bg-green-500\"></div>\r\n      </div>\r\n      <Separator />\r\n      <ResizableGroup direction=\"horizontal\">\r\n        <ResizablePanel\r\n          collapsible\r\n          defaultSize={8}\r\n          collapsedSize={8}\r\n          maxSize={80}\r\n          minSize={25}\r\n          className=\"flex\"\r\n          onCollapse={() => setCollapsed(true)}\r\n          onExpand={() => setCollapsed(false)}\r\n        >\r\n          <Nav\r\n            collapsed={collapsed}\r\n            links={[\r\n              {\r\n                label: \"Explorer\",\r\n                icon: FilesIcon,\r\n              },\r\n              {\r\n                label: \"Search\",\r\n                icon: SearchIcon,\r\n              },\r\n              {\r\n                label: \"Source Control\",\r\n                icon: GitCompareArrowsIcon,\r\n              },\r\n              {\r\n                label: \"Run and Debug\",\r\n                icon: BugPlayIcon,\r\n              },\r\n              {\r\n                label: \"Extensions\",\r\n                icon: BlocksIcon,\r\n              },\r\n              {\r\n                label: \"Chat\",\r\n                icon: MessageSquareIcon,\r\n              },\r\n            ]}\r\n          />\r\n        </ResizablePanel>\r\n        <ResizableHandle withHandle />\r\n        <ResizablePanel defaultSize={88}></ResizablePanel>\r\n      </ResizableGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NavProps {\r\n  collapsed?: boolean;\r\n  links: {\r\n    label: string;\r\n    icon: LucideIcon;\r\n  }[];\r\n}\r\n\r\nconst Nav = ({ links, collapsed }: NavProps) => {\r\n  return (\r\n    <nav className={cn(\"flex w-full flex-col items-center space-y-1 px-2 py-4\")}>\r\n      {links.map((Link, index) => {\r\n        if (collapsed) {\r\n          return (\r\n            <Tooltip\r\n              key={index}\r\n              delayDuration={0}\r\n              side=\"right\"\r\n              className=\"flex items-center gap-4\"\r\n              aria-label={Link.label}\r\n              content={Link.label}\r\n            >\r\n              <Button variant=\"ghost\" shape=\"square\">\r\n                <Link.icon />\r\n              </Button>\r\n            </Tooltip>\r\n          );\r\n        }\r\n        return (\r\n          <Button\r\n            key={index}\r\n            variant=\"ghost\"\r\n            prefix={<Link.icon />}\r\n            className=\"w-full text-left\"\r\n          >\r\n            <span className=\"w-32\">{Link.label}</span>\r\n          </Button>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\n"}]
    },
    "demos/components/core/resizable/panel-api": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/panel-api")),
      code : [{"title":"panel-api.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  type ImperativePanelHandle,\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  const ref = React.useRef<ImperativePanelHandle>(null);\r\n\r\n  const collapsePanel = () => {\r\n    if (ref.current) {\r\n      ref.current.collapse();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-6\">\r\n      <Button onClick={collapsePanel}>Collapse</Button>\r\n      <ResizableGroup direction=\"horizontal\" className=\"max-w-md rounded-lg border\">\r\n        <ResizablePanel\r\n          ref={ref}\r\n          defaultSize={50}\r\n          minSize={20}\r\n          collapsible\r\n          collapsedSize={10}\r\n        >\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">One</span>\r\n          </div>\r\n        </ResizablePanel>\r\n        <ResizableHandle withHandle />\r\n        <ResizablePanel defaultSize={75}>\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Two</span>\r\n          </div>\r\n        </ResizablePanel>\r\n      </ResizableGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/panel-group-api": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/panel-group-api")),
      code : [{"title":"panel-group-api.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n  type ImperativeGroupHandle,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  const ref = React.useRef<ImperativeGroupHandle>(null);\r\n\r\n  const reset = () => {\r\n    if (ref.current) {\r\n      ref.current.setLayout([50, 50]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-6\">\r\n      <Button onClick={reset}>Reset</Button>\r\n      <ResizableGroup\r\n        ref={ref}\r\n        direction=\"horizontal\"\r\n        className=\"max-w-md rounded-lg border\"\r\n      >\r\n        <ResizablePanel defaultSize={50} minSize={20} collapsible collapsedSize={10}>\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">One</span>\r\n          </div>\r\n        </ResizablePanel>\r\n        <ResizableHandle withHandle />\r\n        <ResizablePanel defaultSize={75}>\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Two</span>\r\n          </div>\r\n        </ResizablePanel>\r\n      </ResizableGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/scroll-area/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/default")),
      code : [{"title":"default.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"rounded-md border p-6\">\n      <ScrollArea className=\"h-72 w-full max-w-sm\" type=\"always\">\n        <div className=\"space-y-4 p-4 pr-8\">\n          <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n          <p>\n            Three fundamental aspects of typography are legibility, readability, and\n            aesthetics. Although in a non-technical sense “legible” and “readable” are\n            often used synonymously, typographically they are separate but related\n            concepts.\n          </p>\n          <p>\n            Legibility describes how easily individual characters can be distinguished\n            from one another. It is described by Walter Tracy as “the quality of being\n            decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n            and an “8”, are difficult to distinguish at small sizes, this is a problem of\n            legibility.\n          </p>\n          <p>\n            Typographers are concerned with legibility insofar as it is their job to\n            select the correct font to use. Brush Script is an example of a font\n            containing many characters that might be difficult to distinguish. The\n            selection of cases influences the legibility of typography because using only\n            uppercase letters (all-caps) reduces legibility.\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/scroll-area/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/sizes")),
      code : [{"title":"sizes.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\nimport { cn } from \"@/lib/utils/classes\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      {sizes.map((size) => (\n        <div key={size}>\n          <p className=\"text-md font-bold tracking-tight\">{size}</p>\n          <ScrollArea\n            className={cn(\"h-5 w-[300px]\", {\n              \"h-3\": size === \"sm\",\n              \"h-4\": size === \"md\",\n              \"h-5\": size === \"lg\",\n            })}\n            size={size}\n            orientation=\"horizontal\"\n            type=\"always\"\n          >\n            <div className=\"w-[800px]\" />\n          </ScrollArea>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/scroll-area/horizontal": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/horizontal")),
      code : [{"title":"horizontal.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"rounded-md border p-6\">\n      <ScrollArea orientation=\"horizontal\" className=\"h-52 w-72\" type=\"always\">\n        <div className=\"flex w-[700px] gap-4 p-2\">\n          <p>\n            Three fundamental aspects of typography are legibility, readability, and\n            aesthetics. Although in a non-technical sense \"legible\" and \"readable\" are\n            often used synonymously, typographically they are separate but related\n            concepts.\n          </p>\n          <p>\n            Legibility describes how easily individual characters can be distinguished\n            from one another. It is described by Walter Tracy as “the quality of being\n            decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n            and an “8”, are difficult to distinguish at small sizes, this is a problem of\n            legibility.\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/scroll-area/both": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/both")),
      code : [{"title":"both.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"rounded-md border p-6\">\n      <ScrollArea orientation=\"both\" className=\"h-44 w-full max-w-sm\" type=\"always\">\n        <div className=\"flex w-[500px] items-start gap-4\">\n          <div className=\"space-y-4 p-4 pr-8\">\n            <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n            <p>\n              Three fundamental aspects of typography are legibility, readability, and\n              aesthetics. Although in a non-technical sense “legible” and “readable” are\n              often used synonymously, typographically they are separate but related\n              concepts.\n            </p>\n            <p>\n              Legibility describes how easily individual characters can be distinguished\n              from one another. It is described by Walter Tracy as “the quality of being\n              decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n              and an “8”, are difficult to distinguish at small sizes, this is a problem\n              of legibility.\n            </p>\n            <p>\n              Typographers are concerned with legibility insofar as it is their job to\n              select the correct font to use. Brush Script is an example of a font\n              containing many characters that might be difficult to distinguish. The\n              selection of cases influences the legibility of typography because using\n              only uppercase letters (all-caps) reduces legibility.\n            </p>\n          </div>\n          <div className=\"space-y-4 p-4 pr-8\">\n            <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n            <p>\n              Three fundamental aspects of typography are legibility, readability, and\n              aesthetics. Although in a non-technical sense “legible” and “readable” are\n              often used synonymously, typographically they are separate but related\n              concepts.\n            </p>\n            <p>\n              Legibility describes how easily individual characters can be distinguished\n              from one another. It is described by Walter Tracy as “the quality of being\n              decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n              and an “8”, are difficult to distinguish at small sizes, this is a problem\n              of legibility.\n            </p>\n            <p>\n              Typographers are concerned with legibility insofar as it is their job to\n              select the correct font to use. Brush Script is an example of a font\n              containing many characters that might be difficult to distinguish. The\n              selection of cases influences the legibility of typography because using\n              only uppercase letters (all-caps) reduces legibility.\n            </p>\n          </div>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tabs/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/basic")),
      code : [{"title":"basic.tsx","code":"import {\n  TabsRoot,\n  TabsList,\n  TabsPanel,\n  TabsItem,\n} from \"@/lib/components/core/default/tabs\";\n\nexport default function TabsDemo() {\n  return (\n    <TabsRoot>\n      <TabsList>\n        <TabsItem id=\"github\">GitHub</TabsItem>\n        <TabsItem id=\"gitlab\">GitLab</TabsItem>\n        <TabsItem id=\"bitbucket\">Bitbucket</TabsItem>\n      </TabsList>\n      <TabsPanel id=\"github\">Content of GitHub</TabsPanel>\n      <TabsPanel id=\"gitlab\">Content of GitLab</TabsPanel>\n      <TabsPanel id=\"bitbucket\">Content of Bitbucket</TabsPanel>\n    </TabsRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport {\n  AlertDialogRoot,\n  AlertDialog,\n  AlertDialogFooter,\n} from \"@/lib/components/core/default/alert-dialog\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function AlertDialogDemo() {\n  return (\n    <AlertDialogRoot>\n      <Button variant=\"danger\">Delete</Button>\n      <AlertDialog\n        title=\"Delete project\"\n        description=\"This project will be deleted, along with all of its settings.\"\n      >\n        {({ close }) => (\n          <AlertDialogFooter>\n            <Button variant=\"outline\" onPress={close}>\n              Cancel\n            </Button>\n            <Button variant=\"danger\" onPress={close}>\n              Cancel\n            </Button>\n          </AlertDialogFooter>\n        )}\n      </AlertDialog>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/single-button": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/single-button")),
      code : [{"title":"single-button.tsx","code":"// import {\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null;\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/async-form": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/async-form")),
      code : [{"title":"async-form.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\n// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null;\n  const [open, setOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 2500));\n    setIsLoading(false);\n    setOpen(false);\n  };\n\n  return (\n    <AlertDialogRoot open={open} onOpenChange={setOpen}>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its Deployments, Domains,\n            Environment Variables, Serverless Functions, and Settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction\n            onClick={handleSubmit}\n            loading={isLoading}\n            variant={{ initial: \"ghost\", sm: \"danger\" }}\n            className=\"max-sm:text-fg-danger\"\n          >\n            Continue\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/with-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/with-content")),
      code : [{"title":"with-content.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\n\n// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null;\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <Alert type=\"danger\" variant=\"muted\">\n          This action is not reversible. Please be certain.\n        </Alert>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction>Continue</AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/with-inset-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/with-inset-content")),
      code : [{"title":"with-inset-content.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\n// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n//   AlertDialogInset,\n// } from \"@/lib/components/core/default/alert-dialog\";\n// import { Input } from \"@/lib/components/core/default/input\";\n\nexport default function AlertDialogDemo() {\n  return null;\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogInset className=\"space-y-2 bg-bg-muted px-6 py-4\">\n          <p>\n            To verify, type <span className=\"font-bold\">delete my project</span> below:\n          </p>\n          <Input value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\n        </AlertDialogInset>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction disabled={inputValue !== \"delete my project\"}>\n            Continue\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/with-long-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/with-long-content")),
      code : [{"title":"with-long-content.tsx","code":"// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n//   AlertDialogInset,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null;\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogInset className=\"px-6\">\n          {Array.from({ length: 30 }, (_, i) => (\n            <p key={i}>Some content contained within the Alert Dialog.</p>\n          ))}\n        </AlertDialogInset>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction\n            variant={{ initial: \"ghost\", sm: \"danger\" }}\n            className=\"max-sm:text-fg-danger\"\n          >\n            Continue\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/dialog/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport {\n  DialogRoot,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n} from \"@/lib/components/core/default/dialog\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function DialogDemo() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    setIsLoading(false);\n  };\n  return (\n    <DialogRoot>\n      <Button variant=\"outline\">Edit Profile</Button>\n      <Dialog title=\"Edit profile\" description=\"Make changes to your profile.\">\n        {({ close }) => (\n          <>\n            <DialogBody>\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" />\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" />\n            </DialogBody>\n            <DialogFooter>\n              <Button\n                variant=\"outline\"\n                size={{ initial: \"lg\", sm: \"md\" }}\n                onPress={close}\n              >\n                Cancel\n              </Button>\n              <Button\n                isLoading={isLoading}\n                variant=\"primary\"\n                size={{ initial: \"lg\", sm: \"md\" }}\n                onPress={async () => {\n                  await handleSubmit();\n                  close();\n                }}\n              >\n                Save changes\n              </Button>\n            </DialogFooter>\n          </>\n        )}\n      </Dialog>\n    </DialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/drawer/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { DrawerRoot, Drawer } from \"@/lib/components/core/default/drawer\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function DrawerDemo() {\n  return (\n    <DrawerRoot>\n      <Button>Open drawer</Button>\n      <Drawer title=\"Salemou 3alaykom\">\n        <div className=\"mx-auto h-[200px] max-w-sm\"></div>\n      </Drawer>\n    </DrawerRoot>\n  );\n}\n"}]
    },
    "demos/components/core/drawer/with-framer": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/with-framer")),
      code : [{"title":"with-framer.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { useState } from \"react\";\n// import {\n//   motion,\n//   animate,\n//   AnimatePresence,\n//   useMotionTemplate,\n//   useMotionValue,\n//   useMotionValueEvent,\n//   useTransform,\n// } from \"framer-motion\";\nimport { motion } from \"framer-motion\";\nimport { animate } from \"framer-motion\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useMotionTemplate } from \"framer-motion\";\nimport { useMotionValue } from \"framer-motion\";\nimport { useMotionValueEvent } from \"framer-motion\";\nimport { useTransform } from \"framer-motion\";\nimport {\n  Dialog,\n  Heading,\n  Modal,\n  ModalOverlay,\n  DialogTrigger,\n} from \"react-aria-components\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\n// Wrap React Aria modal components so they support framer-motion values.\nconst MotionModal = motion(Modal);\nconst MotionModalOverlay = motion(ModalOverlay);\n\nconst inertiaTransition = {\n  type: \"inertia\" as const,\n  bounceStiffness: 300,\n  bounceDamping: 40,\n  timeConstant: 300,\n};\n\nconst staticTransition = {\n  duration: 0.5,\n  ease: [0.32, 0.72, 0, 1],\n};\n// const root = document.querySelector(\"[data-rcopy-root]\")!\n\nconst root: HTMLElement = document.querySelector(\"[drawer-wrapper]\")!;\nconst SHEET_MARGIN = 34;\nconst SHEET_RADIUS = 12;\n\n// change this the div element will be like this <div drawer-wrapper=\"\"></div>\n\nexport default function Sheet() {\n  const [isOpen, setOpen] = useState(false);\n  const h = window.innerHeight - SHEET_MARGIN;\n  const y = useMotionValue(h);\n  const bgOpacity = useTransform(y, [0, h], [0.4, 0]);\n  const bg = useMotionTemplate`rgba(0, 0, 0, ${bgOpacity})`;\n\n  // Scale the body down and adjust the border radius when the sheet is open.\n  const bodyScale = useTransform(\n    y,\n    [0, h],\n    [(window.innerWidth - SHEET_MARGIN) / window.innerWidth, 1]\n  );\n  const bodyTranslate = useTransform(y, [0, h], [SHEET_MARGIN - SHEET_RADIUS, 0]);\n  const bodyBorderRadius = useTransform(y, [0, h], [SHEET_RADIUS, 0]);\n\n  useMotionValueEvent(bodyScale, \"change\", (v) => (root.style.scale = `${v}`));\n  // useMotionValueEvent(\n  //   bodyTranslate,\n  //   \"change\",\n  //   (v) => (root.style.translate = `0 ${v}px`)\n  // );\n  // useMotionValueEvent(\n  //   bodyBorderRadius,\n  //   \"change\",\n  //   (v) => (root.style.borderRadius = `${v}px`)\n  // );\n\n  return (\n    <DialogTrigger>\n      <Button onPress={() => setOpen(true)}>Open sheet</Button>\n      <AnimatePresence>\n        {isOpen && (\n          <MotionModalOverlay\n            // Force the modal to be open when AnimatePresence renders it.\n            isOpen\n            onOpenChange={setOpen}\n            className=\"fixed inset-0 z-10\"\n            style={{ backgroundColor: bg as unknown as string }}\n          >\n            <MotionModal\n              className=\"absolute bottom-0 w-full rounded-t-xl bg-black shadow-lg will-change-transform\"\n              initial={{ y: h }}\n              animate={{ y: 0 }}\n              exit={{ y: h }}\n              transition={staticTransition}\n              style={{\n                y,\n                top: SHEET_MARGIN,\n                // Extra padding at the bottom to account for rubber band scrolling.\n                paddingBottom: window.screen.height,\n              }}\n              drag=\"y\"\n              dragConstraints={{ top: 0 }}\n              onDragEnd={(e, { offset, velocity }) => {\n                if (offset.y > window.innerHeight * 0.75 || velocity.y > 10) {\n                  setOpen(false);\n                } else {\n                  void animate(y, 0, { ...inertiaTransition, min: 0, max: 0 });\n                }\n              }}\n            >\n              {/* drag affordance */}\n              <div className=\"mx-auto mt-2 h-1.5 w-12 rounded-full bg-gray-400\" />\n              <Dialog className=\"px-4 pb-4 outline-none\">\n                <div className=\"flex justify-end\">\n                  <Button\n                    className=\"mb-8 rounded border-none bg-transparent text-lg font-semibold text-blue-600 outline-none focus-visible:ring pressed:text-blue-700\"\n                    onPress={() => setOpen(false)}\n                  >\n                    Done\n                  </Button>\n                </div>\n                <Heading slot=\"title\" className=\"mb-4 text-3xl font-semibold\">\n                  Modal sheet\n                </Heading>\n                <p className=\"mb-4 text-lg\">\n                  This is a dialog with a custom modal overlay built with React Aria\n                  Components and Framer Motion.\n                </p>\n                <p className=\"text-lg\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean sit amet\n                  nisl blandit, pellentesque eros eu, scelerisque eros. Sed cursus urna at\n                  nunc lacinia dapibus.\n                </p>\n              </Dialog>\n            </MotionModal>\n          </MotionModalOverlay>\n        )}\n      </AnimatePresence>\n    </DialogTrigger>\n  );\n}\n"}]
    },
    "demos/components/core/drawer/placement": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/placement")),
      code : [{"title":"placement.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Drawer, DrawerRoot } from \"@/lib/components/core/default/drawer\";\nimport { Radio, RadioGroup } from \"@/lib/components/core/default/radio\";\n\ntype Placement = \"top\" | \"right\" | \"bottom\" | \"left\";\n\nexport default function DrawerDemo() {\n  const [placement, setPlacement] = React.useState<Placement>(\"bottom\");\n  return (\n    <div className=\"flex items-center gap-4\">\n      <RadioGroup\n        label=\"Placement\"\n        value={placement}\n        onChange={(newVal) => setPlacement(newVal as Placement)}\n      >\n        <Radio value=\"top\">Top</Radio>\n        <Radio value=\"right\">Right</Radio>\n        <Radio value=\"bottom\">Bottom</Radio>\n        <Radio value=\"left\">Left</Radio>\n      </RadioGroup>\n      <DrawerRoot>\n        <Button>Open drawer</Button>\n        <Drawer title=\"Drawer title\" placement={placement}>\n          <div>content here</div>\n        </Drawer>\n      </DrawerRoot>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/drawer/custom-height": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/custom-height")),
      code : [{"title":"custom-height.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\n// import { Drawer } from \"@/lib/components/core/default/drawer\";\n\nexport default function DrawerDemo() {\n  const [open, setOpen] = React.useState(false);\n  return null;\n  // return (\n  //   <>\n  //     <Button onClick={() => setOpen(true)}>Open Drawer</Button>\n  //     <Drawer className=\"h-[400px]\" open={open} onOpenChange={(state) => setOpen(state)}>\n  //       <div className=\"flex flex-col items-center p-12 gap-4\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //       </div>\n  //     </Drawer>\n  //   </>\n  // );\n}\n"}]
    },
    "demos/components/core/drawer/nested-drawer": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/nested-drawer")),
      code : [{"title":"nested-drawer.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\n// import { Drawer } from \"@/lib/components/core/default/drawer\";\n\nexport default function DrawerDemo() {\n  return null;\n  // const [open, setOpen] = React.useState(false);\n  // const [openNested, setOpenNested] = React.useState(false);\n\n  // return (\n  //   <>\n  //     <Button onClick={() => setOpen(true)}>Open Drawer</Button>\n  //     <Drawer open={open} onOpenChange={(show) => setOpen(show)}>\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //         <Button onClick={() => setOpenNested(true)}>Open Second Drawer</Button>\n  //         <Drawer open={openNested} onOpenChange={(show) => setOpenNested(show)}>\n  //           <div className=\"flex flex-col items-center gap-4 p-12\">\n  //             <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //             <p>Drawer body</p>\n  //           </div>\n  //         </Drawer>\n  //       </div>\n  //     </Drawer>\n  //   </>\n  // );\n}\n"}]
    },
    "demos/components/core/drawer/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\n// import { Drawer } from \"@/lib/components/core/default/drawer\";\n\nexport default function DrawerDemo() {\n  return null;\n  // const [open, setOpen] = React.useState(false);\n  // const [openNested, setOpenNested] = React.useState(false);\n\n  // return (\n  //   <>\n  //     <Button onClick={() => setOpen(true)}>Open Drawer</Button>\n  //     <Drawer open={open} onOpenChange={(show) => setOpen(show)}>\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //         <Button onClick={() => setOpenNested(true)}>Open Second Drawer</Button>\n  //         <Drawer open={openNested} onOpenChange={(show) => setOpenNested(show)}>\n  //           <div className=\"flex flex-col items-center gap-4 p-12\">\n  //             <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //             <p>Drawer body</p>\n  //           </div>\n  //         </Drawer>\n  //       </div>\n  //     </Drawer>\n  //   </>\n  // );\n}\n"}]
    },
    "demos/components/core/popover/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/basic")),
      code : [{"title":"basic.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, Popover } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"quiet\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <Popover title=\"Salemou 3alaykom\">\n        <div>some content here</div>\n      </Popover>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/icon")),
      code : [{"title":"icon.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/position": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/position")),
      code : [{"title":"position.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/offset": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/offset")),
      code : [{"title":"offset.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/cross-offset": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/cross-offset")),
      code : [{"title":"cross-offset.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/container-padding": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/container-padding")),
      code : [{"title":"container-padding.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/mobile": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/mobile")),
      code : [{"title":"mobile.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, Popover } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <Popover title=\"Salemou 3alaykom\">\n        <div>some content here</div>\n      </Popover>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/default")),
      code : [{"title":"default.tsx","code":"import { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function Demo() {\n  return (\n    <Tooltip content=\"Add to library\">\n      <Button shape=\"square\">\n        <PlusIcon />\n      </Button>\n    </Tooltip>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/placement": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/placement")),
      code : [{"title":"placement.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Select, SelectItem } from \"@/lib/components/core/default/select\";\nimport { Tooltip, TooltipProps } from \"@/lib/components/core/default/tooltip\";\n\ntype Placement = TooltipProps[\"placement\"];\n\nexport default function Demo() {\n  const [placement, setPlacement] = React.useState<Placement>(\"top\");\n  return (\n    <div className=\"flex items-center gap-10\">\n      <Tooltip placement={placement} content=\"Add to library\">\n        <Button shape=\"square\">\n          <PlusIcon />\n        </Button>\n      </Tooltip>\n      <Select\n        label=\"Placement\"\n        selectedKey={placement}\n        onSelectionChange={(key) => setPlacement(key as Placement)}\n      >\n        {[\n          \"bottom\",\n          \"bottom left\",\n          \"bottom right\",\n          \"bottom start\",\n          \"bottom end\",\n          \"top\",\n          \"top left\",\n          \"top right\",\n          \"top start\",\n          \"top end\",\n          \"left\",\n          \"left top\",\n          \"left\",\n          \"bottom\",\n          \"start\",\n          \"start top\",\n          \"start bottom\",\n          \"right\",\n          \"right top\",\n          \"right\",\n          \"bottom\",\n          \"end\",\n          \"end top\",\n          \"end bottom\",\n        ].map((pos, index) => (\n          <SelectItem key={index}>{pos}</SelectItem>\n        ))}\n      </Select>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/flip": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/flip")),
      code : [{"title":"flip.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function Demo() {\n  const [shouldFlip, setShouldFlip] = React.useState(false);\n  return (\n    <div className=\"flex flex-col items-center gap-10\">\n      <Tooltip shouldFlip={shouldFlip} content=\"Add to library\">\n        <Button shape=\"square\">\n          <PlusIcon />\n        </Button>\n      </Tooltip>\n      <Switch\n        isSelected={shouldFlip}\n        onChange={(isSelected) => setShouldFlip(isSelected)}\n      >\n        Should flip\n      </Switch>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/offset": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/offset")),
      code : [{"title":"offset.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function Demo() {\n  const [offset, setOffset] = React.useState(10);\n  return (\n    <div className=\"flex flex-col items-center gap-10\">\n      <Tooltip offset={offset} content=\"Add to library\">\n        <Button shape=\"square\">\n          <PlusIcon />\n        </Button>\n      </Tooltip>\n      <NumberField\n        label=\"Offset\"\n        value={offset}\n        onChange={(value) => setOffset(value)}\n        className=\"max-w-[150px]\"\n      />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/container-padding": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/container-padding")),
      code : [{"title":"container-padding.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function Demo() {\n  const [containerPadding, setContainerPadding] = React.useState(12);\n  return (\n    <div className=\"flex flex-col items-center gap-10\">\n      <Tooltip containerPadding={containerPadding} content=\"Add to library\">\n        <Button shape=\"square\">\n          <PlusIcon />\n        </Button>\n      </Tooltip>\n      <NumberField\n        label=\"Container padding\"\n        value={containerPadding}\n        onChange={(value) => setContainerPadding(value)}\n        className=\"max-w-[150px]\"\n      />\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/delay": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/delay")),
      code : [{"title":"delay.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { NumberField } from \"@/lib/components/core/default/number-field\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function Demo() {\n  const [delay, setDelay] = React.useState(700);\n  const [closeDelay, setCloseDelay] = React.useState(0);\n  return (\n    <div className=\"flex flex-col items-center gap-10\">\n      <Tooltip delay={delay} closeDelay={closeDelay} content=\"Add to library\">\n        <Button shape=\"square\">\n          <PlusIcon />\n        </Button>\n      </Tooltip>\n      <div className=\"max-w-[150px] space-y-4\">\n        <NumberField label=\"Delay\" value={delay} onChange={(value) => setDelay(value)} />\n        <NumberField\n          label=\"Close Delay\"\n          value={closeDelay}\n          onChange={(value) => setCloseDelay(value)}\n        />\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/custom-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/custom-content")),
      code : [{"title":"custom-content.tsx","code":"import { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function Demo() {\n  return (\n    <Tooltip\n      content={\n        <p>\n          Add to <b className=\"font-bold\">library</b>\n        </p>\n      }\n    >\n      <Button shape=\"square\">\n        <PlusIcon />\n      </Button>\n    </Tooltip>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/composition")),
      code : [{"title":"composition.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { TooltipRoot, TooltipContent } from \"@/lib/components/core/default/tooltip\";\n\nexport default function Demo() {\n  return (\n    <TooltipRoot>\n      <Button>Hover</Button>\n      <TooltipContent>\n        <p>Add to library</p>\n      </TooltipContent>\n    </TooltipRoot>\n  );\n}\n"}]
    },
    "demos/components/core/combobox/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\n// import {\r\n//   OverlayTriggerStateContext,\r\n//   PopoverContext,\r\n//   useContextProps,\r\n//   type PopoverProps,\r\n// } from \"react-aria-components\";\r\n// import { useOverlayTriggerState } from \"react-stately\";\r\n// import {\r\n//   ComboboxRoot,\r\n//   ComboboxInput,\r\n//   ComboboxItem,\r\n//   ComboboxListBox,\r\n//   ComboboxPopover,\r\n// } from \"@/lib/components/core/default/combobox\";\r\n\r\nexport default function Demo() {\r\n  return <div>comb</div>;\r\n}\r\n"}]
    },
    "demos/components/core/select/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Select, SelectItem } from \"@/lib/components/core/default/select\";\n\nexport default function SelectDemo() {\n  return (\n    <div className=\"flex flex-col space-y-4\">\n      <Select>\n        <SelectItem>Aardvark</SelectItem>\n        <SelectItem>Cat</SelectItem>\n        <SelectItem>Dog</SelectItem>\n        <SelectItem>Kangaroo</SelectItem>\n        <SelectItem>Panda</SelectItem>\n        <SelectItem>Snake</SelectItem>\n      </Select>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-media-query": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-media-query")),
      code : [{"title":"use-media-query.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { LaptopIcon, MonitorIcon, PhoneIcon, TabletIcon } from \"lucide-react\";\nimport { ClientOnly } from \"@/lib/components/utils/client-only\";\nimport { useMediaQuery } from \"@/lib/hooks/use-media-query\";\nimport { cn } from \"@/lib/utils/classes\";\n\nfunction Demo() {\n  const isSmallDevice = useMediaQuery(\"only screen and (max-width : 768px)\");\n  const isMediumDevice = useMediaQuery(\n    \"only screen and (min-width : 769px) and (max-width : 992px)\"\n  );\n  const isLargeDevice = useMediaQuery(\n    \"only screen and (min-width : 993px) and (max-width : 1200px)\"\n  );\n  const isExtraLargeDevice = useMediaQuery(\"only screen and (min-width : 1201px)\");\n\n  return (\n    <ClientOnly>\n      <div className=\"text-center\">\n        <p>Resize your browser window to see changes.</p>\n        <div className=\"mt-8 grid grid-cols-4 gap-4\">\n          {[\n            {\n              name: \"Small\",\n              isMatched: isSmallDevice,\n              icon: <PhoneIcon size={20} />,\n            },\n            {\n              name: \"Medium\",\n              isMatched: isMediumDevice,\n              icon: <TabletIcon size={20} />,\n            },\n            {\n              name: \"Large\",\n              isMatched: isLargeDevice,\n              icon: <LaptopIcon size={20} />,\n            },\n            {\n              name: \"Extra Large\",\n              isMatched: isExtraLargeDevice,\n              icon: <MonitorIcon size={20} />,\n            },\n          ].map(({ name, icon, isMatched }) => (\n            <div\n              key={name}\n              className={cn(\n                \"flex flex-col items-center gap-2 rounded border-2 p-4\",\n                isMatched && \"border-green-800 text-green-200\"\n              )}\n            >\n              {icon}\n              <p>{name}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </ClientOnly>\n  );\n}\n\nexport default function ClientOnlyDemo() {\n  return (\n    <ClientOnly>\n      <Demo />\n    </ClientOnly>\n  );\n}\n"}]
    },
    "demos/hooks/use-intersection-observer": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-intersection-observer")),
      code : [{"title":"use-intersection-observer.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\nimport { useIntersectionObserver } from \"@/lib/hooks/use-intersection-observer\";\nimport { cn } from \"@/lib/utils/classes\";\n\nexport default function Demo() {\n  const [ref, entry] = useIntersectionObserver({\n    threshold: 0,\n    root: null,\n    rootMargin: \"0px\",\n  });\n\n  return (\n    <div className=\"w-full max-w-sm\">\n      <p>\n        Element{\" \"}\n        <span\n          className={cn(entry?.isIntersecting ? \"text-green-700\" : \"text-yellow-600\")}\n        >\n          {entry?.isIntersecting ? \"inside\" : \"outside\"}\n        </span>{\" \"}\n        the viewport\n      </p>\n      <ScrollArea type=\"always\" className=\"mt-4 h-32 border\">\n        <div className=\"flex h-96 flex-col items-center justify-between py-8\">\n          <p className=\"text-fg-muted\">Scroll me down!</p>\n          <p ref={ref} className=\"border-4 border-dashed p-4\">\n            Hello world!\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-window-size": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-window-size")),
      code : [{"title":"use-window-size.tsx","code":"\"use client\";\n\nimport { useWindowSize } from \"@/lib/hooks/use-window-size\";\n\nexport default function Demo() {\n  const size = useWindowSize();\n\n  return (\n    <div>\n      <p className=\"text-center text-xl font-bold\">Resize your window</p>\n      <div className=\"mt-4 grid grid-cols-2 gap-8\">\n        <div>\n          <p className=\"text-fg-muted\">width</p>\n          <p className=\"text-xl\">{size.width}px</p>\n        </div>\n        <div>\n          <p className=\"text-fg-muted\">height</p>\n          <p className=\"text-xl\">{size.height}px</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-battery": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-battery")),
      code : [{"title":"use-battery.tsx","code":"\"use client\";\n\nimport {\n  BatteryChargingIcon,\n  BatteryFullIcon,\n  BatteryLowIcon,\n  BatteryMediumIcon,\n  BatteryWarning,\n  Loader2Icon,\n} from \"lucide-react\";\nimport { useBattery } from \"@/lib/hooks/use-battery\";\n\nexport default function Demo() {\n  const { isLoading, isSupported, isCharging, level } = useBattery();\n\n  const size = 120;\n\n  return (\n    <div className=\"text-center\">\n      <h2 className=\"text-xl font-semibold\">Battery status</h2>\n      <div className=\"mt-4 flex items-center justify-center space-x-4\">\n        {isLoading ? (\n          <Loader2Icon className=\"animate-spin\" />\n        ) : !isSupported ? (\n          <p className=\"text-fg-muted\">\n            Battery status API is not supported in your browser.\n          </p>\n        ) : (\n          <>\n            <span className=\"text-5xl font-bold\">{Math.round(level * 100)}%</span>\n            {isCharging ? (\n              <BatteryChargingIcon size={size} />\n            ) : level === 1 ? (\n              <BatteryFullIcon size={size} />\n            ) : level > 0.5 ? (\n              <BatteryMediumIcon size={size} />\n            ) : level > 0.2 ? (\n              <BatteryLowIcon size={size} />\n            ) : (\n              <BatteryWarning size={size} />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-mouse": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-mouse")),
      code : [{"title":"use-mouse.tsx","code":"\"use client\";\n\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/lib/components/core/default/table\";\nimport { useMouse } from \"@/lib/hooks/use-mouse\";\nimport { cn } from \"@/lib/utils/classes\";\n\nexport default function Demo() {\n  const [mouse, ref] = useMouse<HTMLDivElement>();\n\n  const xIntersecting = mouse.elementX > 0 && mouse.elementX < 300;\n  const yIntersecting = mouse.elementY > 0 && mouse.elementY < 300;\n  const isIntersecting = xIntersecting && yIntersecting;\n\n  return (\n    <div>\n      <div className=\"mx-auto flex rounded-lg border bg-bg-muted py-4\">\n        {[\n          {\n            caption: \"Mouse Position\",\n            headers: [\"X\", \"Y\"],\n            rows: [[mouse.x, mouse.y]],\n          },\n          {\n            caption: \"Relative to ref\",\n            headers: [\"ElementX\", \"ElementY\"],\n            rows: [[mouse.elementX, mouse.elementY]],\n          },\n        ].map(({ caption, headers, rows }) => (\n          <Table key={caption} className=\"mx-auto\">\n            <TableCaption>{caption}</TableCaption>\n            <TableHeader>\n              <TableRow>\n                {headers.map((header, i) => (\n                  <TableHead key={i} className=\"w-[100px]\">\n                    {header}\n                  </TableHead>\n                ))}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {rows.map((row, i) => (\n                <TableRow key={i}>\n                  {row.map((cell, j) => (\n                    <TableCell key={j} className=\"max-w-[50px] truncate\">\n                      {cell}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        ))}\n      </div>\n      <div\n        ref={ref}\n        className={cn(\n          \"bg-background mx-auto mt-4 flex h-[200px] w-full max-w-sm items-center justify-center rounded-lg border p-4 transition-colors\",\n          isIntersecting && \"bg-green-900\"\n        )}\n      >\n        <span>Use a ref to add coords relative to the element</span>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-orientation")),
      code : [{"title":"use-orientation.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { useOrientation } from \"@/lib/hooks/use-orientation\";\n\nexport default function Demo() {\n  const orientation = useOrientation();\n\n  return (\n    <section>\n      <p className=\"text-xl font-bold\">Orientation</p>\n      <div className=\"mt-4 grid grid-cols-2 gap-4\">\n        <div>\n          <p className=\"text-fg-muted\">Angle</p>\n          <p className=\"text-xl\">{orientation.angle}</p>\n        </div>\n        <div>\n          <p className=\"text-fg-muted\">Type</p>\n          <p className=\"text-xl\">{orientation.type}</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n"}]
    },
    "demos/hooks/use-local-storage": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-local-storage")),
      code : [{"title":"use-local-storage.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Textarea } from \"@/lib/components/core/default/text-area\";\nimport { ClientOnly } from \"@/lib/components/utils/client-only\";\nimport { useLocalStorage } from \"@/lib/hooks/use-local-storage\";\n\nfunction Demo() {\n  const [writing, saveWriting] = useLocalStorage<string | null>(\"writing\", null);\n  const [input, setInput] = React.useState(writing ?? \"\");\n\n  return (\n    <div className=\"w-full max-w-sm\">\n      <Textarea\n        value={input}\n        onChange={(e) => {\n          setInput(e.target.value);\n        }}\n        placeholder=\"Start your writing here, save it and refresh the page to see it persist.\"\n      />\n      <div className=\"mt-4 flex items-center justify-end space-x-2\">\n        <Button\n          variant=\"neutral\"\n          size=\"sm\"\n          onClick={() => {\n            setInput(\"\");\n            saveWriting(null);\n          }}\n        >\n          Clear\n        </Button>\n        <Button\n          variant=\"primary\"\n          size=\"sm\"\n          onClick={() => {\n            saveWriting(input);\n            // TODO: toast notification\n          }}\n        >\n          Save\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default function ClientOnlyDemo() {\n  return (\n    <ClientOnly>\n      <Demo />\n    </ClientOnly>\n  );\n}\n"}]
    },
    "demos/hooks/use-counter": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-counter")),
      code : [{"title":"use-counter.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { useCounter } from \"@/lib/hooks/use-counter\";\n\nexport default function Demo() {\n  const [count, { increment, decrement, set, reset }] = useCounter(3, {\n    min: 0,\n    max: 10,\n  });\n  return (\n    <div>\n      <p className=\"text-center text-fg-muted\">startingValue: 3, min: 0, max: 10</p>\n      <div className=\"mt-4 flex items-center gap-2\">\n        <Button onClick={increment} disabled={count >= 10}>\n          Increment\n        </Button>\n        <Button onClick={decrement} disabled={count <= 0}>\n          Decrement\n        </Button>\n        <Button\n          onClick={() => {\n            set(5);\n          }}\n        >\n          Set to 5\n        </Button>\n        <Button onClick={reset}>Reset</Button>\n      </div>\n      <p className=\"mt-8 text-center text-4xl\">{count}</p>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-debounce": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-debounce")),
      code : [{"title":"use-debounce.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { SearchIcon } from \"lucide-react\";\n// import { Input } from \"@/lib/components/core/default/input\";\nimport { useDebounce } from \"@/lib/hooks/use-debounce\";\n\nexport default function Demo() {\n  const [searchInput, setSearchInput] = React.useState(\"\");\n  const debouncedValue = useDebounce(searchInput, 1000);\n\n  return (\n    <div className=\"w-full max-w-sm\">\n      <div className=\"relative\">\n        <SearchIcon\n          size={18}\n          className=\"pointer-events-none absolute left-2 top-1/2 -translate-y-1/2 transform text-fg-muted\"\n        />\n        {/* <Input\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          placeholder=\"Search\"\n          className=\"full-w pl-8\"\n        /> */}\n      </div>\n      <div className=\"mt-10 text-center\">\n        {debouncedValue ? (\n          <p>Results for &quot;{debouncedValue}&quot;</p>\n        ) : (\n          <p className=\"text-fg-muted\">Start searching</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-list": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-list")),
      code : [{"title":"use-list.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { EditIcon, Trash2Icon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n// import { Input } from \"@/lib/components/core/default/input\";\nimport { useList } from \"@/lib/hooks/use-list\";\n\nexport default function Demo() {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [list, { set, push, removeAt, insertAt, clear }] = useList<string | number>([\n    \"First\",\n    \"Second\",\n    \"Third\",\n  ]);\n  return null;\n  return (\n    <div>\n      <div className=\"flex gap-2\">\n        <Button disabled={list.length < 1} onClick={() => insertAt(1, \"woo\")}>\n          Insert After First\n        </Button>\n        <Button disabled={list.length < 2} onClick={() => removeAt(1)}>\n          Remove Second Item\n        </Button>\n        <Button onClick={() => set([1, 2, 3])}>Reset</Button>\n        <Button onClick={() => clear()}>Clear</Button>\n      </div>\n      <div className=\"mt-4 space-y-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Input\n            value={inputValue}\n            onChange={(e) => {\n              setInputValue(e.target.value);\n            }}\n          />\n          <Button onClick={() => push(inputValue)}>Add</Button>\n        </div>\n        {list.map((item, index) => (\n          <div\n            key={index}\n            className=\"bg-background group relative flex h-10 items-center rounded-md border px-2\"\n          >\n            <div className=\"mr-2\">{item}</div>\n            <div className=\"absolute right-3 top-[50%] flex translate-y-[-50%] items-center space-x-2 opacity-0 duration-100 group-hover:opacity-100\">\n              <Button variant=\"ghost\" size=\"sm\" shape=\"square\">\n                <EditIcon size={15} />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                shape=\"square\"\n                onClick={() => {\n                  removeAt(index);\n                }}\n              >\n                <Trash2Icon size={15} />\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-previous": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-previous")),
      code : [{"title":"use-previous.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { usePrevious } from \"@/lib/hooks/use-previous\";\n\nfunction getRandomColor() {\n  const colors = [\"green\", \"blue\", \"purple\", \"red\", \"pink\"];\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nexport default function Demo() {\n  const [color, setColor] = React.useState(getRandomColor());\n  const previousColor = usePrevious(color);\n\n  const handleClick = () => {\n    function getNewColor() {\n      const newColor = getRandomColor();\n      if (color === newColor) {\n        getNewColor();\n      } else {\n        setColor(newColor);\n      }\n    }\n    getNewColor();\n  };\n\n  return (\n    <div className=\"text-center\">\n      <Button size=\"sm\" onClick={handleClick}>\n        Next\n      </Button>\n      <div className=\"mt-8 grid grid-cols-2 gap-4\">\n        <div\n          className=\"flex h-16 w-52 items-center justify-center rounded-lg\"\n          style={{ background: previousColor ?? undefined }}\n        >\n          Previous: {previousColor ?? \"null\"}\n        </div>\n        <div\n          className=\"flex h-16 w-52 items-center justify-center rounded-lg\"\n          style={{ background: color }}\n        >\n          Previous: {color ?? \"null\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
  }
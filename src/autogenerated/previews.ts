
// This file is autogenerated by scripts/build-preview-imports.ts
// Do not edit this file directly.
import React from "react";

export const previews = {
  "demos/components/core/button/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/default")),
      code : [{"title":"default.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function ButtonDemo() {\n  return <Button>Button</Button>;\n}\n"}]
    },
    "demos/components/core/button/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function ButtonDemo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-4\">\n      <Button size=\"sm\">Button</Button>\n      <Button size=\"md\">Button</Button>\n      <Button size=\"lg\">Button</Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/variants")),
      code : [{"title":"variants.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nconst variants = [\"fill\", \"outline\", \"ghost\"] as const;\nconst types = [\"neutral\", \"primary\", \"success\", \"warning\", \"danger\"] as const;\n\nexport default function ButtonDemo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-2\">\n      {types.map((type) => (\n        <div key={type} className=\"flex flex-col space-y-2\">\n          {variants.map((variant) => (\n            <Button key={variant} variant={variant} type={type}>\n              {type}\n            </Button>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/shapes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/shapes")),
      code : [{"title":"shapes.tsx","code":"import { UploadIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function ButtonDemo() {\n  return (\n    <div className=\"flex items-center justify-center gap-4\">\n      <Button size=\"sm\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"md\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"lg\" shape=\"square\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"sm\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"md\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n      <Button size=\"lg\" shape=\"circle\" aria-label=\"upload\">\n        <UploadIcon />\n      </Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { UploadIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function ButtonDemo() {\n  return (\n    <div className=\"flex items-center justify-center gap-2\">\n      <Button prefix={<UploadIcon />} size=\"sm\">\n        Upload\n      </Button>\n      <Button prefix={<UploadIcon />}>Upload</Button>\n      <Button suffix={<UploadIcon />}>Upload</Button>\n      <Button prefix={<UploadIcon />} suffix={<UploadIcon />}>\n        Upload\n      </Button>\n      <Button prefix={<UploadIcon />} size=\"lg\">\n        Upload\n      </Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/loading")),
      code : [{"title":"loading.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function ButtonLoadingDemo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-2\">\n      <Button size=\"sm\" loading>\n        Button\n      </Button>\n      <Button size=\"md\" loading>\n        Button\n      </Button>\n      <Button size=\"lg\" loading>\n        Button\n      </Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\n\nexport default function ButtonDemo() {\n  return (\n    <div className=\"flex w-full items-center justify-center gap-2\">\n      <Button isDisabled>Button</Button>\n      <Button variant=\"outline\" isDisabled>\n        Button\n      </Button>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/button/link-button": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/button/link-button")),
      code : [{"title":"link-button.tsx","code":"import { LogInIcon } from \"lucide-react\";\r\nimport { LinkButton } from \"@/lib/components/core/default/button\";\r\n\r\nexport default function LinkButtonDemo() {\r\n  return (\r\n    <LinkButton href=\"/login\" prefix={<LogInIcon />}>\r\n      Login\r\n    </LinkButton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/file-trigger/button": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/file-trigger/button")),
      code : [{"title":"button.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { UploadIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { FileTrigger } from \"@/lib/components/core/default/file-trigger\";\r\n\r\nexport default function FileTriggerDemo() {\r\n  const [files, setFiles] = React.useState<string[] | null>(null);\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      {files && <p>You selected <span className=\"font-semibold\">{files.join(\", \")}</span></p>}\r\n      <FileTrigger\r\n        onSelect={(e) => {\r\n          if (e) {\r\n            const files = Array.from(e);\r\n            const filenames = files.map((file) => file.name);\r\n            setFiles(filenames);\r\n          }\r\n        }}\r\n        allowsMultiple\r\n\r\n      >\r\n        <Button prefix={<UploadIcon />}>Upload</Button>\r\n      </FileTrigger>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toggle/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle/default")),
      code : [{"title":"default.tsx","code":"import { Bold } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nexport default function ToggleDemo() {\n  return (\n    <ToggleButton aria-label=\"Toggle bold\" defaultSelected>\n      <Bold />\n    </ToggleButton>\n  );\n}\n"}]
    },
    "demos/components/core/toggle/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle/variants")),
      code : [{"title":"variants.tsx","code":"import { Bold } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nconst variants = [\"ghost\", \"outline\"] as const;\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      {variants.map((variant) => (\n        <ToggleButton key={variant} variant={variant} aria-label=\"Toggle bold\">\n          <Bold />\n        </ToggleButton>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle/types": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle/types")),
      code : [{"title":"types.tsx","code":"import { Bold } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nconst types = [\"neutral\", \"primary\", \"success\", \"warning\", \"danger\"] as const;\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      {types.map((type) => (\n        <ToggleButton key={type} type={type} aria-label=\"Toggle bold\">\n          <Bold />\n        </ToggleButton>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Bold } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      {sizes.map((size) => (\n        <ToggleButton key={size} size={size} aria-label=\"Toggle bold\">\n          <Bold />\n        </ToggleButton>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Bold } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nexport default function ToggleDemo() {\n  const [isSelected, setIsSelected] = React.useState(true);\n  return (\n    <ToggleButton\n      isSelected={isSelected}\n      onChange={(newVal) => setIsSelected(newVal)}\n      aria-label=\"Toggle bold\"\n    >\n      <Bold />\n    </ToggleButton>\n  );\n}\n"}]
    },
    "demos/components/core/toggle/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Bold } from \"lucide-react\";\nimport { ToggleButton } from \"@/lib/components/core/default/toggle-button\";\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      <ToggleButton isDisabled variant=\"ghost\" aria-label=\"Toggle bold\">\n        <Bold />\n      </ToggleButton>\n      <ToggleButton isDisabled variant=\"outline\" aria-label=\"Toggle bold\">\n        <Bold />\n      </ToggleButton>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/default")),
      code : [{"title":"default.tsx","code":"import { Bold, Italic, Underline } from \"lucide-react\";\nimport { ToggleGroupButton, ToggleGroup } from \"@/lib/components/core/default/toggle-group\";\n\nexport default function ToggleDemo() {\n  return (\n    <ToggleGroup defaultValue=\"bold\">\n      <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n        <Bold className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n        <Italic className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n        <Underline className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n    </ToggleGroup>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/variants")),
      code : [{"title":"variants.tsx","code":"import { Bold, Italic, Underline } from \"lucide-react\";\nimport {\n  ToggleGroupButton,\n  ToggleGroup,\n} from \"@/lib/components/core/default/toggle-group\";\n\nconst variants = [\"ghost\", \"outline\"] as const;\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"space-y-4\">\n      {variants.map((variant) => (\n        <div key={variant} className=\"space-y-1\">\n          <p className=\"font-bold\">{variant}</p>\n          <ToggleGroup variant={variant} defaultValue=\"bold\">\n            <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n              <Bold className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n            <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n              <Italic className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n            <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n              <Underline className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n          </ToggleGroup>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/types": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/types")),
      code : [{"title":"types.tsx","code":"import { Bold, Italic, Underline } from \"lucide-react\";\nimport { ToggleGroupButton, ToggleGroup } from \"@/lib/components/core/default/toggle-group\";\n\nconst types = [\"neutral\", \"primary\", \"success\", \"warning\", \"danger\"] as const;\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"grid grid-cols-3 gap-4\">\n      {types.map((type) => (\n        <div key={type} className=\"space-y-1\">\n          <p className=\"font-bold\">{type}</p>\n          <ToggleGroup variant=\"outline\" type={type} defaultValue=\"bold\">\n            <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n              <Bold className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n            <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n              <Italic className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n            <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n              <Underline className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n          </ToggleGroup>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Bold, Italic, Underline } from \"lucide-react\";\nimport { ToggleGroupButton, ToggleGroup } from \"@/lib/components/core/default/toggle-group\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"space-y-4\">\n      {sizes.map((size) => (\n        <div key={size} className=\"space-y-1\">\n          <p className=\"font-bold\">{size}</p>\n          <ToggleGroup size={size} variant=\"outline\" defaultValue=\"bold\">\n            <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n              <Bold className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n            <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n              <Italic className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n            <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n              <Underline className=\"h-4 w-4\" />\n            </ToggleGroupButton>\n          </ToggleGroup>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/orientation")),
      code : [{"title":"orientation.tsx","code":"import { Bold, Italic, Underline } from \"lucide-react\";\nimport {\n  ToggleGroupButton,\n  ToggleGroup,\n} from \"@/lib/components/core/default/toggle-group\";\n\nconst orientations = [\"horizontal\", \"vertical\"] as const;\n\nexport default function ToggleDemo() {\n  return (\n    <div className=\"flex items-center gap-8\">\n      {orientations.map((orientation) => (\n        <ToggleGroup\n          key={orientation}\n          orientation={orientation}\n          variant=\"outline\"\n          defaultValue=\"bold\"\n        >\n          <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n            <Bold className=\"h-4 w-4\" />\n          </ToggleGroupButton>\n          <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n            <Italic className=\"h-4 w-4\" />\n          </ToggleGroupButton>\n          <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n            <Underline className=\"h-4 w-4\" />\n          </ToggleGroupButton>\n        </ToggleGroup>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/multiple": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/multiple")),
      code : [{"title":"multiple.tsx","code":"import { Bold, Italic, Underline } from \"lucide-react\";\nimport {\n  ToggleGroupButton,\n  ToggleGroup,\n} from \"@/lib/components/core/default/toggle-group\";\n\nexport default function ToggleDemo() {\n  return (\n    <ToggleGroup multiple defaultValue={[\"bold\", \"italic\"]}>\n      <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n        <Bold className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n        <Italic className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n        <Underline className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n    </ToggleGroup>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Bold, Italic, Underline } from \"lucide-react\";\nimport { ToggleGroupButton, ToggleGroup } from \"@/lib/components/core/default/toggle-group\";\n\nexport default function ToggleDemo() {\n  const [value, setValue] = React.useState(\"bold\");\n  return (\n    <ToggleGroup value={value} onValueChange={(newVal) => setValue(newVal)}>\n      <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n        <Bold className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n        <Italic className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n        <Underline className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n    </ToggleGroup>\n  );\n}\n"}]
    },
    "demos/components/core/toggle-group/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toggle-group/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Bold, Italic, Underline } from \"lucide-react\";\nimport { ToggleGroupButton, ToggleGroup } from \"@/lib/components/core/default/toggle-group\";\n\nexport default function ToggleDemo() {\n  return (\n    <ToggleGroup isDisabled>\n      <ToggleGroupButton value=\"bold\" aria-label=\"Toggle bold\">\n        <Bold className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"italic\" aria-label=\"Toggle bold\">\n        <Italic className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n      <ToggleGroupButton value=\"underline\" aria-label=\"Toggle bold\">\n        <Underline className=\"h-4 w-4\" />\n      </ToggleGroupButton>\n    </ToggleGroup>\n  );\n}\n"}]
    },
    "demos/components/core/avatar/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/default")),
      code : [{"title":"default.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\n\nexport default function AvatarDemo() {\n  return <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" />;\n}\n"}]
    },
    "demos/components/core/avatar/shape": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/shape")),
      code : [{"title":"shape.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-6\">\r\n      <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" shape=\"square\" />\r\n      <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" shape=\"circle\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" />;\r\n}\r\n"}]
    },
    "demos/components/core/avatar/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/composition")),
      code : [{"title":"composition.tsx","code":"import {\r\n  AvatarRoot,\r\n  AvatarImage,\r\n  AvatarFallback,\r\n} from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <AvatarRoot>\r\n      <AvatarImage src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" />\r\n      <AvatarFallback delayMs={3000}>M</AvatarFallback>\r\n    </AvatarRoot>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/avatar-group": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/avatar-group")),
      code : [{"title":"avatar-group.tsx","code":"import { Avatar, AvatarGroup } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarDemo() {\r\n  return (\r\n    <AvatarGroup>\r\n      {[\r\n        { name: \"@mehdibha\", src: \"https://github.com/mehdibha.png\" },\r\n        { name: \"@shadcn\", src: \"https://github.com/shadcn.png\" },\r\n        { name: \"@leerob\", src: \"https://github.com/leerob.png\" },\r\n        { name: \"@t3dotgg\", src: \"https://github.com/t3dotgg.png\" },\r\n        {\r\n          name: \"@joshwcomeau\",\r\n          src: \"https://github.com/joshwcomeau.png\",\r\n        },\r\n      ].map((user) => (\r\n        <Avatar\r\n          key={user.name}\r\n          src={user.src}\r\n          alt={user.name}\r\n          fallback={user.name[1].toUpperCase()}\r\n        />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/avatar-group-max": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/avatar-group-max")),
      code : [{"title":"avatar-group-max.tsx","code":"import { Avatar, AvatarGroup } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarGroupMaxDemo() {\r\n  return (\r\n    <AvatarGroup max={4}>\r\n      {[\r\n        { name: \"@mehdibha\", src: \"https://github.com/mehdibha.png\" },\r\n        { name: \"@shadcn\", src: \"https://github.com/shadcn.png\" },\r\n        { name: \"@leerob\", src: \"https://github.com/leerob.png\" },\r\n        { name: \"@t3dotgg\", src: \"https://github.com/t3dotgg.png\" },\r\n        {\r\n          name: \"@joshwcomeau\",\r\n          src: \"https://github.com/joshwcomeau.png\",\r\n        },\r\n      ].map((user) => (\r\n        <Avatar\r\n          key={user.name}\r\n          src={user.src}\r\n          alt={user.name}\r\n          fallback={user.name[1].toUpperCase()}\r\n        />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/avatar/avatar-group-total-count": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/avatar/avatar-group-total-count")),
      code : [{"title":"avatar-group-total-count.tsx","code":"import { Avatar, AvatarGroup } from \"@/lib/components/core/default/avatar\";\r\n\r\nexport default function AvatarGroupMaxDemo() {\r\n  return (\r\n    <AvatarGroup max={5} total={300}>\r\n      {[\r\n        { name: \"@mehdibha\", src: \"https://github.com/mehdibha.png\" },\r\n        { name: \"@shadcn\", src: \"https://github.com/shadcn.png\" },\r\n        { name: \"@leerob\", src: \"https://github.com/leerob.png\" },\r\n        { name: \"@t3dotgg\", src: \"https://github.com/t3dotgg.png\" },\r\n        {\r\n          name: \"@joshwcomeau\",\r\n          src: \"https://github.com/joshwcomeau.png\",\r\n        },\r\n      ].map((user) => (\r\n        <Avatar\r\n          key={user.name}\r\n          src={user.src}\r\n          alt={user.name}\r\n          fallback={user.name[1].toUpperCase()}\r\n        />\r\n      ))}\r\n    </AvatarGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/badge/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/badge/default")),
      code : [{"title":"default.tsx","code":"import { Badge } from \"@/lib/components/core/default/badge\";\n\nexport default function BadgeDemo() {\n  return <Badge>Badge</Badge>;\n}\n"}]
    },
    "demos/components/core/card/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/card/basic")),
      code : [{"title":"basic.tsx","code":"import * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/lib/components/core/default/card\";\n// import { Input } from \"@/lib/components/core/default/input\";\nimport { Label } from \"@/lib/components/core/default/field\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/lib/components/core/default/select\";\n\nexport default function CardDemo() {\n  return null;\n  return (\n    <Card className=\"w-[350px]\">\n      <CardHeader>\n        <CardTitle>Create project</CardTitle>\n        <CardDescription>Deploy your new project in one-click.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form>\n          <div className=\"grid w-full items-center gap-4\">\n            <div className=\"flex flex-col space-y-1.5\">\n              <Label htmlFor=\"name\">Name</Label>\n              <Input id=\"name\" placeholder=\"Name of your project\" />\n            </div>\n            <div className=\"flex flex-col space-y-1.5\">\n              <Label htmlFor=\"framework\">Framework</Label>\n              <Select>\n                <SelectTrigger id=\"framework\">\n                  <SelectValue placeholder=\"Select\" />\n                </SelectTrigger>\n                <SelectContent position=\"popper\">\n                  <SelectItem value=\"next\">Next.js</SelectItem>\n                  <SelectItem value=\"sveltekit\">SvelteKit</SelectItem>\n                  <SelectItem value=\"astro\">Astro</SelectItem>\n                  <SelectItem value=\"nuxt\">Nuxt.js</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </form>\n      </CardContent>\n      <CardFooter className=\"flex justify-between\">\n        <Button variant=\"outline\">Cancel</Button>\n        <Button>Deploy</Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"}]
    },
    "demos/components/core/carousel/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/carousel/basic")),
      code : [{"title":"basic.tsx","code":"import * as React from \"react\";\nimport { Card, CardContent } from \"@/lib/components/core/default/card\";\nimport {\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselNext,\n  CarouselPrevious,\n} from \"@/lib/components/core/default/carousel\";\n\nexport default function CarouselDemo() {\n  return (\n    <Carousel className=\"w-full max-w-xs\">\n      <CarouselContent>\n        {Array.from({ length: 5 }).map((_, index) => (\n          <CarouselItem key={index}>\n            <div className=\"p-1\">\n              <Card>\n                <CardContent className=\"flex aspect-square items-center justify-center p-6\">\n                  <span className=\"text-4xl font-semibold\">{index + 1}</span>\n                </CardContent>\n              </Card>\n            </div>\n          </CarouselItem>\n        ))}\n      </CarouselContent>\n      <CarouselPrevious />\n      <CarouselNext />\n    </Carousel>\n  );\n}\n"}]
    },
    "demos/components/core/separator/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/separator/basic")),
      code : [{"title":"basic.tsx","code":"import { Separator } from \"@/lib/components/core/default/separator\";\n\nexport default function SeparatorDemo() {\n  return (\n    <div>\n      <div className=\"space-y-1\">\n        <h4 className=\"text-sm font-medium leading-none\">Radix Primitives</h4>\n        <p className=\"text-sm text-fg-muted\">An open-source UI component library.</p>\n      </div>\n      <Separator className=\"my-4\" />\n      <div className=\"flex h-5 items-center space-x-4 text-sm\">\n        <div>Blog</div>\n        <Separator orientation=\"vertical\" />\n        <div>Docs</div>\n        <Separator orientation=\"vertical\" />\n        <div>Source</div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/table/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/table/basic")),
      code : [{"title":"basic.tsx","code":"import {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableFooter,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/lib/components/core/default/table\";\n\nconst invoices = [\n  {\n    invoice: \"INV001\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$250.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV002\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$150.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV003\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$350.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV004\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$450.00\",\n    paymentMethod: \"Credit Card\",\n  },\n  {\n    invoice: \"INV005\",\n    paymentStatus: \"Paid\",\n    totalAmount: \"$550.00\",\n    paymentMethod: \"PayPal\",\n  },\n  {\n    invoice: \"INV006\",\n    paymentStatus: \"Pending\",\n    totalAmount: \"$200.00\",\n    paymentMethod: \"Bank Transfer\",\n  },\n  {\n    invoice: \"INV007\",\n    paymentStatus: \"Unpaid\",\n    totalAmount: \"$300.00\",\n    paymentMethod: \"Credit Card\",\n  },\n];\n\nexport default function TableDemo() {\n  return (\n    <Table>\n      <TableCaption>A list of your recent invoices.</TableCaption>\n      <TableHeader>\n        <TableRow>\n          <TableHead className=\"w-[100px]\">Invoice</TableHead>\n          <TableHead>Status</TableHead>\n          <TableHead>Method</TableHead>\n          <TableHead className=\"text-right\">Amount</TableHead>\n        </TableRow>\n      </TableHeader>\n      <TableBody>\n        {invoices.map((invoice) => (\n          <TableRow key={invoice.invoice}>\n            <TableCell className=\"font-medium\">{invoice.invoice}</TableCell>\n            <TableCell>{invoice.paymentStatus}</TableCell>\n            <TableCell>{invoice.paymentMethod}</TableCell>\n            <TableCell className=\"text-right\">{invoice.totalAmount}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TableCell colSpan={3}>Total</TableCell>\n          <TableCell className=\"text-right\">$2,500.00</TableCell>\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n}\n"}]
    },
    "demos/components/core/calendar/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function CalendarDemo() {\n  const [date, setDate] = React.useState<Date | undefined>(new Date());\n\n  return (\n    <Calendar\n      // mode=\"single\"\n      // selected={date}\n      // onSelect={setDate}\n      // className=\"rounded-md border\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/calendar/range": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/calendar/range")),
      code : [{"title":"range.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { RangeCalendar, Calendar } from \"@/lib/components/core/default/calendar\";\n\nexport default function CalendarDemo() {\n  const [date, setDate] = React.useState<Date | undefined>(new Date());\n\n  return (\n    <RangeCalendar\n    // mode=\"single\"\n    // selected={date}\n    // onSelect={setDate}\n    // className=\"rounded-md border\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/date-field/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-field/basic")),
      code : [{"title":"basic.tsx","code":"import { DateField } from \"@/lib/components/core/default/date-field\";\r\n\r\nexport default function DateFieldDemo() {\r\n  return <DateField label=\"Date of birth\" className=\"w-full\" description=\"If you're a legend\" />;\r\n}\r\n"}]
    },
    "demos/components/core/date-picker/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/date-picker/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { DatePicker } from \"@/lib/components/core/default/date-picker\";\n\nexport default function DatePickerDemo() {\n  const [date, setDate] = React.useState<Date>();\n\n  return <DatePicker />;\n\n  return null;\n  // return (\n  //   <Popover>\n  //     <PopoverTrigger asChild>\n  //       <Button\n  //         variant={\"outline\"}\n  //         className={cn(\n  //           \"w-[280px] justify-start text-left font-normal\",\n  //           !date && \"text-fg-muted\"\n  //         )}\n  //       >\n  //         <CalendarIcon className=\"mr-2 h-4 w-4\" />\n  //         {date ? format(date, \"PPP\") : <span>Pick a date</span>}\n  //       </Button>\n  //     </PopoverTrigger>\n  //     <PopoverContent className=\"w-auto p-0\">\n  //       <Calendar mode=\"single\" selected={date} onSelect={setDate} initialFocus />\n  //     </PopoverContent>\n  //   </Popover>\n  // );\n}\n"}]
    },
    "demos/components/core/alert/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/default")),
      code : [{"title":"default.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\n\nexport default function AlertDemo() {\n  return <Alert>You can add components to your app using the cli.</Alert>;\n}\n"}]
    },
    "demos/components/core/alert/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/variants")),
      code : [{"title":"variants.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Alert } from \"@/lib/components/core/default/alert\";\r\nimport { Label } from \"@/lib/components/core/default/field\";\r\nimport { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\r\n\r\ntype Type = \"default\" | \"success\" | \"danger\" | \"warning\" | \"info\";\r\ntype Variant = \"default\" | \"muted\" | \"fill\";\r\n\r\nexport default function SonnerVariantsDemo() {\r\n  const [type, setType] = React.useState<Type>(\"default\");\r\n  const [variant, setVariant] = React.useState<Variant>(\"default\");\r\n\r\n  return (\r\n    <div className=\"flex items-center gap-16\">\r\n      <Alert variant={variant} type={type}>\r\n        You can add components to your app using the cli.\r\n      </Alert>\r\n      <div className=\"flex gap-4\">\r\n        <div className=\"space-y-2\">\r\n          <Label>Type</Label>\r\n          <RadioGroup value={type} onChange={(newVal) => setType(newVal as Type)}>\r\n            <Radio value=\"default\">Default</Radio>\r\n            <Radio value=\"success\">Success</Radio>\r\n            <Radio value=\"danger\">Danger</Radio>\r\n            <Radio value=\"warning\">Warning</Radio>\r\n            <Radio value=\"info\">Info</Radio>\r\n          </RadioGroup>\r\n        </div>\r\n        <div className=\"space-y-2\">\r\n          <Label>Variant</Label>\r\n          <RadioGroup\r\n            value={variant}\r\n            onChange={(newVal) => setVariant(newVal as Variant)}\r\n          >\r\n            <Radio value=\"default\">Default</Radio>\r\n            <Radio value=\"muted\">Muted</Radio>\r\n            <Radio value=\"fill\">Fill</Radio>\r\n          </RadioGroup>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/alert/action": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/action")),
      code : [{"title":"action.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function AlertDemo() {\n  return (\n    <Alert\n      action={\n        <Button type=\"primary\" size=\"sm\">\n          Upgrade\n        </Button>\n      }\n    >\n      This note details some information.\n    </Alert>\n  );\n}\n"}]
    },
    "demos/components/core/alert/custom-icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/custom-icon")),
      code : [{"title":"custom-icon.tsx","code":"import { GlobeIcon } from \"lucide-react\";\nimport { Alert } from \"@/lib/components/core/default/alert\";\n\nexport default function AlertDemo() {\n  return <Alert icon={<GlobeIcon />}>Hello world!</Alert>;\n}\n"}]
    },
    "demos/components/core/alert/title": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert/title")),
      code : [{"title":"title.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\r\n\r\nexport default function AlertDemo() {\r\n  return (\r\n    <Alert title=\"Alert!\">You can add components to your app using the cli.</Alert>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/progress-bar/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar value={75} />;\n}\n"}]
    },
    "demos/components/core/progress-bar/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/sizes")),
      code : [{"title":"sizes.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function ProgressDemo() {\n  return (\n    <div className=\"w-full space-y-4\">\n      {sizes.map((size) => (\n        <div key={size}>\n          <p className=\"font-bold\">{size}</p>\n          <ProgressBar value={75} size={size} />\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/progress-bar/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/variants")),
      code : [{"title":"variants.tsx","code":"import * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nconst variants = [\"default\", \"success\", \"info\", \"danger\", \"warning\"] as const;\n\nexport default function ProgressDemo() {\n  return (\n    <div className=\"w-full space-y-4\">\n      {variants.map((variant) => (\n        <div key={variant}>\n          <p className=\"font-bold\">{variant}</p>\n          <ProgressBar value={75} variant={variant} />\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/progress-bar/duration": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/duration")),
      code : [{"title":"duration.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar duration=\"30s\"/>;\n}\n"}]
    },
    "demos/components/core/progress-bar/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar />;\n}\n"}]
    },
    "demos/components/core/progress-bar/max": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/max")),
      code : [{"title":"max.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar value={50} min={40} max={60} />;\n}\n"}]
    },
    "demos/components/core/progress-bar/custom-color": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/custom-color")),
      code : [{"title":"custom-color.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\n\nexport default function ProgressDemo() {\n  return <ProgressBar value={50} indicatorProps={{ className: \"bg-zinc-500\" }} />;\n}\n"}]
    },
    "demos/components/core/progress-bar/toolbar": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/progress-bar/toolbar")),
      code : [{"title":"toolbar.tsx","code":"\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { ALargeSmallIcon, RotateCwIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\nimport { ProgressBar } from \"@/lib/components/core/default/progress-bar\";\r\n\r\nexport default function ProgressDemo() {\r\n  return (\r\n    <TextField\r\n      defaultValue=\"https://rcopy.dev\"\r\n      className=\"relative h-12 pb-0.5 [&_input]:text-center\"\r\n      prefix={\r\n        <Button size=\"sm\" variant=\"ghost\" shape=\"square\">\r\n          <ALargeSmallIcon />\r\n        </Button>\r\n      }\r\n      suffix={\r\n        <Button size=\"sm\" variant=\"ghost\" shape=\"circle\">\r\n          <RotateCwIcon />\r\n        </Button>\r\n      }\r\n    >\r\n      <ProgressBar\r\n        value={50}\r\n        size=\"sm\"\r\n        variant=\"info\"\r\n        className=\"absolute bottom-0 left-0 right-0 rounded-none bg-transparent\"\r\n      />\r\n    </TextField>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/default")),
      code : [{"title":"default.tsx","code":"import { Skeleton } from \"@/lib/components/core/default/skeleton\";\n\nexport default function SkeletonDemo() {\n  return (\n    <div className=\"space-y-4\">\n      <Skeleton className=\"h-44 w-64\" />\n      <div className=\"flex items-center space-x-4\">\n        <Skeleton className=\"size-10 rounded-full\" />\n        <div className=\"space-y-2\">\n          <Skeleton className=\"h-4 w-44\" />\n          <Skeleton className=\"h-4 w-36\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/skeleton/default-with-set-width": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/default-with-set-width")),
      code : [{"title":"default-with-set-width.tsx","code":"import { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return <Skeleton className=\"w-44\" />;\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/wrapping-children": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/wrapping-children")),
      code : [{"title":"wrapping-children.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <div className=\"flex flex-col items-center gap-4\">\r\n      <Skeleton>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n      <Skeleton show={false}>\r\n        <Button>Button</Button>\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/skeleton/wrapping-children-with-fixed-size": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/skeleton/wrapping-children-with-fixed-size")),
      code : [{"title":"wrapping-children-with-fixed-size.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\r\nimport { Skeleton } from \"@/lib/components/core/default/skeleton\";\r\n\r\nexport default function SkeletonDemo() {\r\n  return (\r\n    <Skeleton className=\"h-20 w-20\">\r\n      <Button>Button</Button>\r\n    </Skeleton>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\nexport default function ToastDemo() {\n  return <Button onPress={() => toast(\"Event has been created\")}>Show toast</Button>;\n}\n"}]
    },
    "demos/components/core/toast/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/variants")),
      code : [{"title":"variants.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Label } from \"@/lib/components/core/default/field\";\nimport {\n  RadioGroup,\n  Radio,\n} from \"@/lib/components/core/default/radio\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\ntype Type = \"default\" | \"success\" | \"error\" | \"warning\" | \"info\";\ntype Variant = \"default\" | \"muted\" | \"fill\";\n\nexport default function SonnerVariantsDemo() {\n  const [type, setType] = React.useState<Type>(\"default\");\n  const [variant, setVariant] = React.useState<Variant>(\"default\");\n  const action = {\n    default: toast,\n    success: toast.success,\n    warning: toast.warning,\n    error: toast.error,\n    info: toast.info,\n  };\n\n  return (\n    <div className=\"flex items-center gap-16\">\n      <Button\n        onPress={() =>\n          action[type](\"Event has been created\", {\n            variant,\n          })\n        }\n      >\n        Show toast\n      </Button>\n      <div className=\"flex gap-4\">\n        <div className=\"space-y-2\">\n          <Label>Type</Label>\n          <RadioGroup value={type} onChange={(newVal) => setType(newVal as Type)}>\n            <Radio value=\"default\">Default</Radio>\n            <Radio value=\"success\">Success</Radio>\n            <Radio value=\"error\">Error</Radio>\n            <Radio value=\"warning\">Warning</Radio>\n            <Radio value=\"info\">Info</Radio>\n          </RadioGroup>\n        </div>\n        <div className=\"space-y-2\">\n          <Label>Variant</Label>\n          <RadioGroup\n            value={variant}\n            onChange={(newVal) => setVariant(newVal as Variant)}\n          >\n            <Radio value=\"default\">Default</Radio>\n            <Radio value=\"muted\">Muted</Radio>\n            <Radio value=\"fill\">Fill</Radio>\n          </RadioGroup>\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/toast/custom-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/custom-content")),
      code : [{"title":"custom-content.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\nexport default function ToastDemo() {\n  return (\n    <Button\n      onPress={() =>\n        toast(\n          <>\n            The <span className=\"font-bold\">Evil Rabbit</span> jumped over the fence.\n          </>\n        )\n      }\n    >\n      Show toast\n    </Button>\n  );\n}\n"}]
    },
    "demos/components/core/toast/multi-line": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/multi-line")),
      code : [{"title":"multi-line.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\r\n          \"The Evil Rabbit jumped over the fence. The Evil Rabbit jumped over the fence. The Evil Rabbit jumped over the fence. The Evil Rabbit jumped over the fence.\"\r\n        )\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/preserve": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/preserve")),
      code : [{"title":"preserve.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { toast } from \"@/lib/components/core/default/toast\";\n\nexport default function ToastDemo() {\n  return (\n    <Button onPress={() => toast(\"Event has been created\", { duration: Infinity })}>\n     Show toast\n    </Button>\n  );\n}\n"}]
    },
    "demos/components/core/toast/action": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/action")),
      code : [{"title":"action.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\"Event has been created\", {\r\n          description: \"Sunday, December 03, 2023 at 9:00 AM\",\r\n          action: {\r\n            label: \"Undo\",\r\n            onClick: () => console.log(\"Undo\"),\r\n          },\r\n        })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n    onPress={() =>\r\n        toast(\"Event has been created\", {\r\n          description: \"Sunday, December 03, 2023 at 9:00 AM\",\r\n        })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/undo": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/undo")),
      code : [{"title":"undo.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\"Event has been created\", { onUndo: () => console.log(\"undo\") })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/dismissible": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/dismissible")),
      code : [{"title":"dismissible.tsx","code":"\"use client\";\r\n\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button\r\n      onPress={() =>\r\n        toast(\"Event has been created\", {\r\n          dismissible: false,\r\n        })\r\n      }\r\n    >\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/toast/custom-icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/toast/custom-icon")),
      code : [{"title":"custom-icon.tsx","code":"\"use client\";\r\n\r\nimport { HelpCircleIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { toast } from \"@/lib/components/core/default/toast\";\r\n\r\nexport default function ToastDemo() {\r\n  return (\r\n    <Button onPress={() => toast(\"Why this is happening?\", { icon: <HelpCircleIcon /> })}>\r\n      Show toast\r\n    </Button>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-card/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxCard\n      defaultSelected\n      title=\"Upload documents\"\n      description=\"upload documents from your computer.\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-card/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/disabled")),
      code : [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\r\n\r\nexport default function CheckboxDemo() {\r\n  return (\r\n    <CheckboxCard\r\n      isDisabled\r\n      defaultSelected\r\n      title=\"Upload documents\"\r\n      description=\"upload documents from your computer.\"\r\n    />\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox-card/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-card/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\n\nimport { CheckboxCard } from \"@/lib/components/core/default/checkbox/checkbox-card\";\n\nexport default function CheckboxDisabledDemo() {\n  return (\n    <CheckboxCard isIndeterminate defaultSelected>\n      Select all\n    </CheckboxCard>\n  );\n}\n"}]
    },
    "demos/components/core/checkbox-group/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox-group/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\nimport { CheckboxGroup } from \"@/lib/components/core/default/checkbox/checkbox-group\";\n\nexport default function CheckboxDemo() {\n  return (\n    <CheckboxGroup label=\"Choices\" description=\"You can pick any of these choices.\">\n      <Checkbox value=\"opt-1\">First option</Checkbox>\n      <Checkbox value=\"opt-2\">Another option</Checkbox>\n      <Checkbox value=\"opt-2\">A secret third thing</Checkbox>\n      <Checkbox value=\"opt-3\">The last one</Checkbox>\n    </CheckboxGroup>\n  );\n}\n"}]
    },
    "demos/components/core/checkbox/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\nimport { Link } from \"@/lib/components/core/default/link\";\n\nexport default function CheckboxDemo() {\n  return (\n    <Checkbox defaultSelected>\n      I accept the <Link href=\"#\">terms and conditions</Link>\n    </Checkbox>\n  );\n}\n"}]
    },
    "demos/components/core/checkbox/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/disabled")),
      code : [{"title":"disabled.tsx","code":"\"use client\";\r\n\r\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\r\n\r\nexport default function CheckboxDisabledDemo() {\r\n  return (\r\n    <Checkbox isDisabled defaultSelected>\r\n      I accept the terms and conditions\r\n    </Checkbox>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/checkbox/indeterminate": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/checkbox/indeterminate")),
      code : [{"title":"indeterminate.tsx","code":"\"use client\";\n\nimport { Checkbox } from \"@/lib/components/core/default/checkbox/checkbox\";\n\nexport default function CheckboxDisabledDemo() {\n  return (\n    <Checkbox isIndeterminate defaultSelected>\n      Select all\n    </Checkbox>\n  );\n}\n"}]
    },
    "demos/components/core/radio-card/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-card/default")),
      code : [{"title":"default.tsx","code":"import { RadioGroup, RadioCard } from \"@/lib/components/core/default/radio\";\n\nexport default function RadioGroupDemo() {\n  return (\n    <RadioGroup defaultValue=\"comfortable\">\n      <RadioCard value=\"default\" title=\"Default\" description=\"Some default description\" />\n      <RadioCard\n        value=\"comfortable\"\n        title=\"Comfortable\"\n        description=\"Some comfortable description\"\n      />\n      <RadioCard value=\"compact\" title=\"Default\" description=\"Some compact description\" />\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/radio-group/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/radio-group/default")),
      code : [{"title":"default.tsx","code":"import { RadioGroup, Radio } from \"@/lib/components/core/default/radio\";\n\nexport default function RadioGroupDemo() {\n  return (\n    <RadioGroup defaultValue=\"comfortable\">\n      <Radio value=\"default\" id=\"r1\">\n        Default\n      </Radio>\n      <Radio value=\"comfortable\" id=\"r2\">\n        Comfortable\n      </Radio>\n      <Radio value=\"compact\" id=\"r2\">\n        Compact\n      </Radio>\n    </RadioGroup>\n  );\n}\n"}]
    },
    "demos/components/core/slider/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/basic")),
      code : [{"title":"basic.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return (\n    <Slider\n      defaultValue={50}\n      label=\"Items to buy\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/slider/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return (\n    <Slider\n      defaultValue={50}\n      label=\"Items to buy\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/slider/orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/orientation")),
      code : [{"title":"orientation.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return (\n    <Slider\n      defaultValue={50}\n      label=\"Items to buy\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/slider/range": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/range")),
      code : [{"title":"range.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return <Slider defaultValue={[20, 50]} label=\"Items to buy\" className=\"w-full\" />;\n}\n"}]
    },
    "demos/components/core/slider/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return (\n    <Slider\n      defaultValue={50}\n      label=\"Items to buy\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/slider/value-label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/value-label")),
      code : [{"title":"value-label.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return (\n    <Slider\n      defaultValue={50}\n      label=\"Items to buy\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/slider/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return (\n    <Slider\n      defaultValue={50}\n      label=\"Items to buy\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/slider/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/slider/composition")),
      code : [{"title":"composition.tsx","code":"import { Slider } from \"@/lib/components/core/default/slider\";\n\nexport default function SliderDemo() {\n  return (\n    <Slider\n      defaultValue={50}\n      label=\"Items to buy\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/switch/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/default")),
      code : [{"title":"default.tsx","code":"import React from \"react\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  return <Switch description=\"Turn off notifications, focus on work\">Focus mode</Switch>;\n}\n"}]
    },
    "demos/components/core/switch/with-label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/with-label")),
      code : [{"title":"with-label.tsx","code":"import { Label } from \"@/lib/components/core/default/field\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Switch>Airplane Mode</Switch>\n      <div className=\"flex items-center space-x-2\">\n        <Switch id=\"airplane-mode\" />\n        <Label htmlFor=\"airplane-mode\">Airplane Mode</Label>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/switch/with-label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/with-label")),
      code : [{"title":"with-label.tsx","code":"import { Label } from \"@/lib/components/core/default/field\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      <Switch>Airplane Mode</Switch>\n      <div className=\"flex items-center space-x-2\">\n        <Switch id=\"airplane-mode\" />\n        <Label htmlFor=\"airplane-mode\">Airplane Mode</Label>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/switch/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/disabled")),
      code : [{"title":"disabled.tsx","code":"import { Label } from \"@/lib/components/core/default/field\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  return <Switch disabled>Airplane Mode</Switch>;\n}\n"}]
    },
    "demos/components/core/switch/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/sizes")),
      code : [{"title":"sizes.tsx","code":"import { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  return (\n    <div className=\"flex items-center gap-4\">\n      <Switch size=\"sm\" defaultChecked/>\n      <Switch size=\"md\" defaultChecked/>\n      <Switch size=\"lg\" defaultChecked/>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/switch/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  const [checked, setChecked] = React.useState(false);\n  return (\n    <Switch checked={checked} onCheckedChange={setChecked}>\n      Airplane Mode\n    </Switch>\n  );\n}\n"}]
    },
    "demos/components/core/switch/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  const [checked, setChecked] = React.useState(false);\n  return (\n    <Switch checked={checked} onCheckedChange={setChecked}>\n      Airplane Mode\n    </Switch>\n  );\n}\n"}]
    },
    "demos/components/core/switch/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/switch/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Switch } from \"@/lib/components/core/default/switch\";\n\nexport default function SwitchDemo() {\n  const [checked, setChecked] = React.useState(false);\n  return (\n    <Switch checked={checked} onCheckedChange={setChecked}>\n      Airplane Mode\n    </Switch>\n  );\n}\n"}]
    },
    "demos/components/core/text-area/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-area/basic")),
      code : [{"title":"basic.tsx","code":"import { Textarea } from \"@/lib/components/core/default/textarea\";\n\nexport default function TextareaDemo() {\n  return <Textarea placeholder=\"Type your message here.\" />;\n}\n"}]
    },
    "demos/components/core/text-field/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/default")),
      code : [{"title":"default.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function InputDemo() {\n  return (\n    <TextField\n      placeholder=\"example@email.com\"\n      label=\"Email\"\n      htmlType=\"email\"\n      autoComplete=\"off\"\n      description=\"Enter your email.\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-field/label": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/label")),
      code : [{"title":"label.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function InputWithLabelDemo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextField label=\"Email\" placeholder=\"Visual label\" />\r\n      <TextField aria-label=\"Email\" placeholder=\"Hidden label\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/description": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/description")),
      code : [{"title":"description.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function InputDemo() {\n  return (\n    <TextField\n      placeholder=\"example@email.com\"\n      label=\"Email\"\n      htmlType=\"email\"\n      autoComplete=\"off\"\n      description=\"Enter your email.\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-field/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/sizes")),
      code : [{"title":"sizes.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function InputSizesDemo() {\r\n  return (\r\n    <div className=\"flex gap-4\">\r\n      <TextField placeholder=\"small (sm)\" size=\"sm\" />\r\n      <TextField placeholder=\"medium (md)\" size=\"md\" />\r\n      <TextField placeholder=\"large (lg)\" size=\"lg\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/disabled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/disabled")),
      code : [{"title":"disabled.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function InputDisabledDemo() {\r\n  return <TextField value=\"hello@rcopy.dev\" isDisabled />;\r\n}\r\n"}]
    },
    "demos/components/core/text-field/types": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/types")),
      code : [{"title":"types.tsx","code":"import { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function InputStatusDemo() {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextField type=\"success\" label=\"Success\" />\r\n      <TextField type=\"warning\" label=\"Warning\" />\r\n      <TextField type=\"danger\" label=\"Danger\" />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/prefix-and-suffix": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/prefix-and-suffix")),
      code : [{"title":"prefix-and-suffix.tsx","code":"import { DollarSignIcon, XCircleIcon } from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\n\r\nexport default function InputPrefixAndSuffixDemo() {\r\n  return (\r\n    <div className=\"w-full space-y-2\">\r\n      <TextField htmlType=\"number\" prefix={<DollarSignIcon />} />\r\n      <TextField prefix={<span>http://</span>} />\r\n      <TextField suffix={<span>@rcopy.dev</span>} />\r\n      <TextField\r\n        suffix={\r\n          <Tooltip content=\"Clear input\" placement=\"bottom\" className=\"text-xs\">\r\n            <Button variant=\"ghost\" shape=\"circle\" size=\"sm\" className=\"h-6 w-6\">\r\n              <XCircleIcon />\r\n            </Button>\r\n          </Tooltip>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/loading": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/loading")),
      code : [{"title":"loading.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Label } from \"@/lib/components/core/default/field\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\nimport { useDebounce } from \"@/lib/hooks/use-debounce\";\r\n\r\nexport default function InputLoadingDemo() {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  const debouncedInputValue = useDebounce(inputValue, 500);\r\n\r\n  React.useEffect(() => {\r\n    if (debouncedInputValue) {\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1500);\r\n    }\r\n  }, [debouncedInputValue]);\r\n\r\n  return (\r\n    <div className=\"w-full space-y-4\">\r\n      <div className=\"grid grid-cols-2 gap-2\">\r\n        <TextField loading loaderPosition=\"prefix\" />\r\n        <TextField loading loaderPosition=\"suffix\" />\r\n      </div>\r\n      <TextField\r\n        label=\"Username\"\r\n        placeholder=\"Type a username\"\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n        type={!loading && debouncedInputValue ? \"success\" : undefined}\r\n        loading={loading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/controlled": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/controlled")),
      code : [{"title":"controlled.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { TextField } from \"@/lib/components/core/default/text-field\";\r\n\r\nexport default function InputControlledDemo() {\r\n  const [inputValue, setInputValue] = React.useState(\"Hello world!\");\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <TextField\r\n        value={inputValue}\r\n        onChange={(text) => {\r\n          setInputValue(text);\r\n        }}\r\n      />\r\n      <p>mirrored text: {inputValue}</p>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/text-field/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function InputDemo() {\n  return (\n    <TextField\n      placeholder=\"example@email.com\"\n      label=\"Email\"\n      htmlType=\"email\"\n      autoComplete=\"off\"\n      description=\"Enter your email.\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/text-field/form": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/text-field/form")),
      code : [{"title":"form.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function InputDemo() {\n  return (\n    <TextField\n      placeholder=\"example@email.com\"\n      label=\"Email\"\n      htmlType=\"email\"\n      autoComplete=\"off\"\n      description=\"Enter your email.\"\n      className=\"w-full\"\n    />\n  );\n}\n"}]
    },
    "demos/components/core/aspect-ratio/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/aspect-ratio/basic")),
      code : [{"title":"basic.tsx","code":"import Image from \"next/image\";\nimport { AspectRatio } from \"@/lib/components/core/default/aspect-ratio\";\n\nexport default function AspectRatioDemo() {\n  return (\n    <AspectRatio ratio={16 / 9}>\n      <Image\n        src=\"https://images.unsplash.com/photo-1588345921523-c2dcdb7f1dcd?w=800&dpr=2&q=80\"\n        alt=\"Photo by Drew Beamer\"\n        fill\n        className=\"rounded-md object-cover\"\n      />\n    </AspectRatio>\n  );\n}\n"}]
    },
    "demos/components/core/resizable/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/default")),
      code : [{"title":"default.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup direction=\"horizontal\" className=\"max-w-md rounded-lg border\">\r\n      <ResizablePanel defaultSize={30}>\r\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={70}>\r\n        <div className=\"flex h-full items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">Two</span>\r\n        </div>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/vertical": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/vertical")),
      code : [{"title":"vertical.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup direction=\"vertical\" className=\"max-w-md rounded-lg border min-h-96\">\r\n      <ResizablePanel defaultSize={30}>\r\n        <div className=\"flex items-center justify-center h-full p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={70}>\r\n        <div className=\"flex items-center justify-center h-full p-6\">\r\n          <span className=\"font-semibold\">Two</span>\r\n        </div>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/nested": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/nested")),
      code : [{"title":"nested.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup direction=\"horizontal\" className=\"max-w-md rounded-lg border\">\r\n      <ResizablePanel defaultSize={50}>\r\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle />\r\n      <ResizablePanel defaultSize={50}>\r\n        <ResizableGroup direction=\"vertical\">\r\n          <ResizablePanel defaultSize={25}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Two</span>\r\n            </div>\r\n          </ResizablePanel>\r\n          <ResizableHandle />\r\n          <ResizablePanel defaultSize={75}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Three</span>\r\n            </div>\r\n          </ResizablePanel>\r\n        </ResizableGroup>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/persistant": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/persistant")),
      code : [{"title":"persistant.tsx","code":"import {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  return (\r\n    <ResizableGroup\r\n      autoSaveId=\"persistence\"\r\n      direction=\"horizontal\"\r\n      className=\"max-w-md rounded-lg border\"\r\n    >\r\n      <ResizablePanel defaultSize={50}>\r\n        <div className=\"flex h-[200px] items-center justify-center p-6\">\r\n          <span className=\"font-semibold\">One</span>\r\n        </div>\r\n      </ResizablePanel>\r\n      <ResizableHandle withHandle />\r\n      <ResizablePanel defaultSize={50}>\r\n        <ResizableGroup direction=\"vertical\">\r\n          <ResizablePanel defaultSize={25}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Two</span>\r\n            </div>\r\n          </ResizablePanel>\r\n          <ResizableHandle withHandle />\r\n          <ResizablePanel defaultSize={75}>\r\n            <div className=\"flex h-full items-center justify-center p-6\">\r\n              <span className=\"font-semibold\">Three</span>\r\n            </div>\r\n          </ResizablePanel>\r\n        </ResizableGroup>\r\n      </ResizablePanel>\r\n    </ResizableGroup>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/collapsible": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/collapsible")),
      code : [{"title":"collapsible.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { type LucideIcon } from \"lucide-react\";\r\nimport {\r\n  BlocksIcon,\r\n  BugPlayIcon,\r\n  FilesIcon,\r\n  GitCompareArrowsIcon,\r\n  MessageSquareIcon,\r\n  SearchIcon,\r\n} from \"lucide-react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\nimport { Separator } from \"@/lib/components/core/default/separator\";\r\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\r\nimport { cn } from \"@/lib/utils/classes\";\r\n\r\nexport default function ResizableDemo() {\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n  return (\r\n    <div className={cn(\"flex h-full w-full flex-col rounded-lg bg-bg-muted text-left\")}>\r\n      {/* header */}\r\n      <div className=\"flex items-center gap-2 px-4 py-2\">\r\n        <div className=\"h-3 w-3 rounded-full bg-red-500\"></div>\r\n        <div className=\"h-3 w-3 rounded-full bg-yellow-500\"></div>\r\n        <div className=\"h-3 w-3 rounded-full bg-green-500\"></div>\r\n      </div>\r\n      <Separator />\r\n      <ResizableGroup direction=\"horizontal\">\r\n        <ResizablePanel\r\n          collapsible\r\n          defaultSize={8}\r\n          collapsedSize={8}\r\n          maxSize={80}\r\n          minSize={25}\r\n          className=\"flex\"\r\n          onCollapse={() => setCollapsed(true)}\r\n          onExpand={() => setCollapsed(false)}\r\n        >\r\n          <Nav\r\n            collapsed={collapsed}\r\n            links={[\r\n              {\r\n                label: \"Explorer\",\r\n                icon: FilesIcon,\r\n              },\r\n              {\r\n                label: \"Search\",\r\n                icon: SearchIcon,\r\n              },\r\n              {\r\n                label: \"Source Control\",\r\n                icon: GitCompareArrowsIcon,\r\n              },\r\n              {\r\n                label: \"Run and Debug\",\r\n                icon: BugPlayIcon,\r\n              },\r\n              {\r\n                label: \"Extensions\",\r\n                icon: BlocksIcon,\r\n              },\r\n              {\r\n                label: \"Chat\",\r\n                icon: MessageSquareIcon,\r\n              },\r\n            ]}\r\n          />\r\n        </ResizablePanel>\r\n        <ResizableHandle withHandle />\r\n        <ResizablePanel defaultSize={88}></ResizablePanel>\r\n      </ResizableGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NavProps {\r\n  collapsed?: boolean;\r\n  links: {\r\n    label: string;\r\n    icon: LucideIcon;\r\n  }[];\r\n}\r\n\r\nconst Nav = ({ links, collapsed }: NavProps) => {\r\n  return (\r\n    <nav className={cn(\"flex w-full flex-col items-center space-y-1 px-2 py-4\")}>\r\n      {links.map((Link, index) => {\r\n        if (collapsed) {\r\n          return (\r\n            <Tooltip\r\n              key={index}\r\n              delayDuration={0}\r\n              side=\"right\"\r\n              className=\"flex items-center gap-4\"\r\n              aria-label={Link.label}\r\n              content={Link.label}\r\n            >\r\n              <Button variant=\"ghost\" shape=\"square\">\r\n                <Link.icon />\r\n              </Button>\r\n            </Tooltip>\r\n          );\r\n        }\r\n        return (\r\n          <Button\r\n            key={index}\r\n            variant=\"ghost\"\r\n            prefix={<Link.icon />}\r\n            className=\"w-full text-left\"\r\n          >\r\n            <span className=\"w-32\">{Link.label}</span>\r\n          </Button>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\n"}]
    },
    "demos/components/core/resizable/panel-api": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/panel-api")),
      code : [{"title":"panel-api.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  type ImperativePanelHandle,\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  const ref = React.useRef<ImperativePanelHandle>(null);\r\n\r\n  const collapsePanel = () => {\r\n    if (ref.current) {\r\n      ref.current.collapse();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full flex flex-col items-center gap-6\">\r\n      <Button onClick={collapsePanel}>Collapse</Button>\r\n      <ResizableGroup direction=\"horizontal\" className=\"max-w-md rounded-lg border\">\r\n        <ResizablePanel\r\n          ref={ref}\r\n          defaultSize={50}\r\n          minSize={20}\r\n          collapsible\r\n          collapsedSize={10}\r\n        >\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">One</span>\r\n          </div>\r\n        </ResizablePanel>\r\n        <ResizableHandle withHandle />\r\n        <ResizablePanel defaultSize={75}>\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Two</span>\r\n          </div>\r\n        </ResizablePanel>\r\n      </ResizableGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/resizable/panel-group-api": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/resizable/panel-group-api")),
      code : [{"title":"panel-group-api.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Button } from \"@/lib/components/core/default/button\";\r\nimport {\r\n  ResizableHandle,\r\n  ResizablePanel,\r\n  ResizableGroup,\r\n  type ImperativeGroupHandle,\r\n} from \"@/lib/components/core/default/resizable\";\r\n\r\nexport default function ResizableDemo() {\r\n  const ref = React.useRef<ImperativeGroupHandle>(null);\r\n\r\n  const reset = () => {\r\n    if (ref.current) {\r\n      ref.current.setLayout([50, 50]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col items-center gap-6\">\r\n      <Button onClick={reset}>Reset</Button>\r\n      <ResizableGroup\r\n        ref={ref}\r\n        direction=\"horizontal\"\r\n        className=\"max-w-md rounded-lg border\"\r\n      >\r\n        <ResizablePanel defaultSize={50} minSize={20} collapsible collapsedSize={10}>\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">One</span>\r\n          </div>\r\n        </ResizablePanel>\r\n        <ResizableHandle withHandle />\r\n        <ResizablePanel defaultSize={75}>\r\n          <div className=\"flex items-center justify-center p-6\">\r\n            <span className=\"font-semibold\">Two</span>\r\n          </div>\r\n        </ResizablePanel>\r\n      </ResizableGroup>\r\n    </div>\r\n  );\r\n}\r\n"}]
    },
    "demos/components/core/scroll-area/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/default")),
      code : [{"title":"default.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"p-6 border rounded-md\">\n      <ScrollArea className=\"h-72 w-full max-w-sm\" type=\"always\">\n        <div className=\"space-y-4 p-4 pr-8\">\n          <h4 className=\"font-bold text-md\">\n            Principles of the typographic craft\n          </h4>\n          <p>\n            Three fundamental aspects of typography are legibility, readability, and\n            aesthetics. Although in a non-technical sense “legible” and “readable” are\n            often used synonymously, typographically they are separate but related\n            concepts.\n          </p>\n          <p>\n            Legibility describes how easily individual characters can be distinguished\n            from one another. It is described by Walter Tracy as “the quality of being\n            decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n            and an “8”, are difficult to distinguish at small sizes, this is a problem of\n            legibility.\n          </p>\n          <p>\n            Typographers are concerned with legibility insofar as it is their job to\n            select the correct font to use. Brush Script is an example of a font\n            containing many characters that might be difficult to distinguish. The\n            selection of cases influences the legibility of typography because using only\n            uppercase letters (all-caps) reduces legibility.\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/scroll-area/sizes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/sizes")),
      code : [{"title":"sizes.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\nimport { cn } from \"@/lib/utils/classes\";\n\nconst sizes = [\"sm\", \"md\", \"lg\"] as const;\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      {sizes.map((size) => (\n        <div key={size}>\n          <p className=\"text-md font-bold tracking-tight\">{size}</p>\n          <ScrollArea\n            className={cn(\"h-5 w-[300px]\", {\n              \"h-3\": size === \"sm\",\n              \"h-4\": size === \"md\",\n              \"h-5\": size === \"lg\",\n            })}\n            size={size}\n            orientation=\"horizontal\"\n            type=\"always\"\n          >\n            <div className=\"w-[800px]\" />\n          </ScrollArea>\n        </div>\n      ))}\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/scroll-area/horizontal": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/horizontal")),
      code : [{"title":"horizontal.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"rounded-md border p-6\">\n      <ScrollArea orientation=\"horizontal\" className=\"h-52 w-72\" type=\"always\">\n        <div className=\"flex w-[700px] gap-4 p-2\">\n          <p>\n            Three fundamental aspects of typography are legibility, readability, and\n            aesthetics. Although in a non-technical sense \"legible\" and \"readable\" are\n            often used synonymously, typographically they are separate but related\n            concepts.\n          </p>\n          <p>\n            Legibility describes how easily individual characters can be distinguished\n            from one another. It is described by Walter Tracy as “the quality of being\n            decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n            and an “8”, are difficult to distinguish at small sizes, this is a problem of\n            legibility.\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/scroll-area/both": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/scroll-area/both")),
      code : [{"title":"both.tsx","code":"import * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\n\nexport default function ScrollAreaDemo() {\n  return (\n    <div className=\"rounded-md border p-6\">\n      <ScrollArea orientation=\"both\" className=\"h-44 w-full max-w-sm\" type=\"always\">\n        <div className=\"flex items-start gap-4 w-[500px]\">\n          <div className=\"space-y-4 p-4 pr-8\">\n            <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n            <p>\n              Three fundamental aspects of typography are legibility, readability, and\n              aesthetics. Although in a non-technical sense “legible” and “readable” are\n              often used synonymously, typographically they are separate but related\n              concepts.\n            </p>\n            <p>\n              Legibility describes how easily individual characters can be distinguished\n              from one another. It is described by Walter Tracy as “the quality of being\n              decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n              and an “8”, are difficult to distinguish at small sizes, this is a problem\n              of legibility.\n            </p>\n            <p>\n              Typographers are concerned with legibility insofar as it is their job to\n              select the correct font to use. Brush Script is an example of a font\n              containing many characters that might be difficult to distinguish. The\n              selection of cases influences the legibility of typography because using\n              only uppercase letters (all-caps) reduces legibility.\n            </p>\n          </div>\n          <div className=\"space-y-4 p-4 pr-8\">\n            <h4 className=\"text-md font-bold\">Principles of the typographic craft</h4>\n            <p>\n              Three fundamental aspects of typography are legibility, readability, and\n              aesthetics. Although in a non-technical sense “legible” and “readable” are\n              often used synonymously, typographically they are separate but related\n              concepts.\n            </p>\n            <p>\n              Legibility describes how easily individual characters can be distinguished\n              from one another. It is described by Walter Tracy as “the quality of being\n              decipherable and recognisable”. For instance, if a “b” and an “h”, or a “3”\n              and an “8”, are difficult to distinguish at small sizes, this is a problem\n              of legibility.\n            </p>\n            <p>\n              Typographers are concerned with legibility insofar as it is their job to\n              select the correct font to use. Brush Script is an example of a font\n              containing many characters that might be difficult to distinguish. The\n              selection of cases influences the legibility of typography because using\n              only uppercase letters (all-caps) reduces legibility.\n            </p>\n          </div>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/menu/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Menu, MenuItem, MenuRoot } from \"@/lib/components/core/default/menu\";\n\nexport default function Demo() {\n  return (\n    <MenuRoot>\n      <Button>Bjr</Button>\n      <Menu>\n        <MenuItem>Open</MenuItem>\n      </Menu>\n    </MenuRoot>\n  );\n}\n"}]
    },
    "demos/components/core/menu/disabled-items": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/disabled-items")),
      code : [{"title":"disabled-items.tsx","code":"export default function MenuDemo() {\r\n  return null;\r\n  // return (\r\n  //   <MenuRoot>\r\n  //     <MenuTrigger asChild>\r\n  //       <Button shape=\"square\" variant=\"ghost\" aria-label=\"menu\">\r\n  //         <MenuIcon />\r\n  //       </Button>\r\n  //     </MenuTrigger>\r\n  //     <MenuContent>\r\n  //       <MenuItem>Profile</MenuItem>\r\n  //       <MenuItem disabled>Billing</MenuItem>\r\n  //       <MenuItem disabled>Settings</MenuItem>\r\n  //       <MenuItem>Log out</MenuItem>\r\n  //     </MenuContent>\r\n  //   </MenuRoot>\r\n  // );\r\n}\r\n"}]
    },
    "demos/components/core/menu/link-items": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/link-items")),
      code : [{"title":"link-items.tsx","code":"\r\n\r\nexport default function MenuDemo() {\r\n  return null\r\n  // return (\r\n  //   <MenuRoot>\r\n  //     <MenuTrigger asChild>\r\n  //       <Button shape=\"square\" variant=\"ghost\" aria-label=\"menu\">\r\n  //         <MenuIcon />\r\n  //       </Button>\r\n  //     </MenuTrigger>\r\n  //     <MenuContent>\r\n  //       <MenuItem asChild>\r\n  //         <a href=\"https://github.com/mehdibha/rcopy\" target=\"_blank\">\r\n  //           GitHub\r\n  //         </a>\r\n  //       </MenuItem>\r\n  //       <MenuItem asChild>\r\n  //         <a href=\"https://twitter.com/mehdibha_\" target=\"_blank\">\r\n  //           X\r\n  //         </a>\r\n  //       </MenuItem>\r\n  //     </MenuContent>\r\n  //   </MenuRoot>\r\n  // );\r\n}\r\n"}]
    },
    "demos/components/core/menu/icon-and-shortcut": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/icon-and-shortcut")),
      code : [{"title":"icon-and-shortcut.tsx","code":"\r\nexport default function MenuDemo() {\r\n  return null\r\n  // return (\r\n  //   <MenuRoot>\r\n  //     <MenuTrigger asChild>\r\n  //       <Button shape=\"square\" variant=\"ghost\" aria-label=\"menu\">\r\n  //         <MenuIcon />\r\n  //       </Button>\r\n  //     </MenuTrigger>\r\n  //     <MenuContent>\r\n  //       <MenuItem shortcut=\"⌘ E\">Profile</MenuItem>\r\n  //       <MenuItem suffix={<ReceiptIcon />}>Billing</MenuItem>\r\n  //       <MenuItem>Settings</MenuItem>\r\n  //     </MenuContent>\r\n  //   </MenuRoot>\r\n  // );\r\n}\r\n"}]
    },
    "demos/components/core/menu/menu-position": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/menu-position")),
      code : [{"title":"menu-position.tsx","code":"\"use client\";\r\n\r\n// type Side = Exclude<React.ComponentProps<typeof MenuContent>[\"side\"], undefined>;\r\n// type Align = Exclude<React.ComponentProps<typeof MenuContent>[\"align\"], undefined>;\r\n\r\nexport default function MenuDemo() {\r\n  return null;\r\n  // const [side, setSide] = React.useState<Side>(\"bottom\");\r\n  // const [align, setAlign] = React.useState<Align>(\"end\");\r\n  // return (\r\n  //   <div className=\"flex items-center gap-16\">\r\n  //     <MenuRoot>\r\n  //       <MenuTrigger asChild>\r\n  //         <Button shape=\"square\" variant=\"ghost\" aria-label=\"menu\">\r\n  //           <MenuIcon />\r\n  //         </Button>\r\n  //       </MenuTrigger>\r\n  //       <MenuContent align={align} side={side}>\r\n  //         <MenuItem>Profile</MenuItem>\r\n  //         <MenuItem>Billing</MenuItem>\r\n  //         <MenuItem>Settings</MenuItem>\r\n  //       </MenuContent>\r\n  //     </MenuRoot>\r\n  //     <div className=\"flex gap-4\">\r\n  //       <div className=\"space-y-2\">\r\n  //         <Label>Side</Label>\r\n  //         <RadioGroup value={side} onChange={(newVal) => setSide(newVal as Side)}>\r\n  //           <Radio value=\"top\">Top</Radio>\r\n  //           <Radio value=\"bottom\">Bottom</Radio>\r\n  //           <Radio value=\"right\">Right</Radio>\r\n  //           <Radio value=\"left\">Left</Radio>\r\n  //         </RadioGroup>\r\n  //       </div>\r\n  //       <div className=\"space-y-2\">\r\n  //         <Label>Align</Label>\r\n  //         <RadioGroup value={align} onChange={(newVal) => setAlign(newVal as Align)}>\r\n  //           <Radio value=\"start\">Start</Radio>\r\n  //           <Radio value=\"center\">Center</Radio>\r\n  //           <Radio value=\"end\">End</Radio>\r\n  //         </RadioGroup>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n}\r\n"}]
    },
    "demos/components/core/menu/checkboxes": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/checkboxes")),
      code : [{"title":"checkboxes.tsx","code":"\"use client\";\r\n\r\n// import React from \"react\";\r\n// import { Button } from \"@/lib/components/core/default/button\";\r\n// import {\r\n//   MenuCheckboxItem,\r\n//   MenuContent,\r\n//   MenuLabel,\r\n//   MenuRoot,\r\n//   MenuSeparator,\r\n//   MenuTrigger,\r\n// } from \"@/lib/components/core/default/menu\";\r\n\r\n// type Checked = React.ComponentProps<typeof MenuCheckboxItem>[\"checked\"];\r\n\r\nexport default function MenuDemo() {\r\n  return null\r\n  // const [showStatusBar, setShowStatusBar] = React.useState<Checked>(true);\r\n  // const [showPanel, setShowPanel] = React.useState<Checked>(false);\r\n  // return (\r\n  //   <MenuRoot>\r\n  //     <MenuTrigger asChild>\r\n  //       <Button variant=\"outline\">Open</Button>\r\n  //     </MenuTrigger>\r\n  //     <MenuContent>\r\n  //       <MenuLabel>Appearance</MenuLabel>\r\n  //       <MenuSeparator />\r\n  //       <MenuCheckboxItem checked={showStatusBar} onCheckedChange={setShowStatusBar}>\r\n  //         Status Bar\r\n  //       </MenuCheckboxItem>\r\n  //       <MenuCheckboxItem checked={false} disabled>\r\n  //         Side Bar\r\n  //       </MenuCheckboxItem>\r\n  //       <MenuCheckboxItem checked={true} disabled>\r\n  //         Activity Bar\r\n  //       </MenuCheckboxItem>\r\n  //       <MenuCheckboxItem checked={showPanel} onCheckedChange={setShowPanel}>\r\n  //         Panel\r\n  //       </MenuCheckboxItem>\r\n  //     </MenuContent>\r\n  //   </MenuRoot>\r\n  // );\r\n}\r\n"}]
    },
    "demos/components/core/menu/radio-group": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/menu/radio-group")),
      code : [{"title":"radio-group.tsx","code":"\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\nexport default function MenuDemo() {\r\n  const [position, setPosition] = React.useState(\"bottom\");\r\n  return null;\r\n  // return (\r\n  //   <MenuRoot>\r\n  //     <MenuTrigger asChild>\r\n  //       <Button variant=\"outline\">Sort</Button>\r\n  //     </MenuTrigger>\r\n  //     <MenuContent align=\"end\">\r\n  //       <MenuLabel>Sort shows</MenuLabel>\r\n  //       <MenuSeparator />\r\n  //       <MenuRadioGroup value={position} onValueChange={setPosition}>\r\n  //         <MenuRadioItem value=\"top\">Title</MenuRadioItem>\r\n  //         <MenuRadioItem value=\"bottom\">Date added</MenuRadioItem>\r\n  //         <MenuRadioItem value=\"right\">Manual</MenuRadioItem>\r\n  //       </MenuRadioGroup>\r\n  //     </MenuContent>\r\n  //   </MenuRoot>\r\n  // );\r\n}\r\n"}]
    },
    "demos/components/core/tabs/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tabs/basic")),
      code : [{"title":"basic.tsx","code":"import {\n  TabsRoot,\n  TabsList,\n  TabsPanel,\n  TabsItem,\n} from \"@/lib/components/core/default/tabs\";\n\nexport default function TabsDemo() {\n  return (\n    <TabsRoot>\n      <TabsList>\n        <TabsItem id=\"github\">GitHub</TabsItem>\n        <TabsItem id=\"gitlab\">GitLab</TabsItem>\n        <TabsItem id=\"bitbucket\">Bitbucket</TabsItem>\n      </TabsList>\n      <TabsPanel id=\"github\">Content of GitHub</TabsPanel>\n      <TabsPanel id=\"gitlab\">Content of GitLab</TabsPanel>\n      <TabsPanel id=\"bitbucket\">Content of Bitbucket</TabsPanel>\n    </TabsRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport { AlertDialogRoot, AlertDialog, AlertDialogFooter } from \"@/lib/components/core/default/alert-dialog\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\nexport default function AlertDialogDemo() {\n  return (\n    <AlertDialogRoot>\n      <Button type=\"danger\">Delete</Button>\n      <AlertDialog\n        title=\"Delete project\"\n        description=\"This project will be deleted, along with all of its settings.\"\n      >\n        {({ close }) => (\n          <AlertDialogFooter>\n            <Button variant=\"outline\" onPress={close}>\n              Cancel\n            </Button>\n            <Button type=\"danger\" onPress={close}>\n              Cancel\n            </Button>\n          </AlertDialogFooter>\n        )}\n      </AlertDialog>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/single-button": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/single-button")),
      code : [{"title":"single-button.tsx","code":"// import {\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/async-form": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/async-form")),
      code : [{"title":"async-form.tsx","code":"\"use client\";\n\nimport React from \"react\";\n// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null\n  const [open, setOpen] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const handleSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 2500));\n    setIsLoading(false);\n    setOpen(false);\n  };\n\n  return (\n    <AlertDialogRoot open={open} onOpenChange={setOpen}>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its Deployments, Domains,\n            Environment Variables, Serverless Functions, and Settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction\n            onClick={handleSubmit}\n            loading={isLoading}\n            variant={{ initial: \"ghost\", sm: \"danger\" }}\n            className=\"max-sm:text-fg-danger\"\n          >\n            Continue\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/with-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/with-content")),
      code : [{"title":"with-content.tsx","code":"import { Alert } from \"@/lib/components/core/default/alert\";\n// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <Alert type=\"danger\" variant=\"muted\">\n          This action is not reversible. Please be certain.\n        </Alert>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction>Continue</AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/with-inset-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/with-inset-content")),
      code : [{"title":"with-inset-content.tsx","code":"\"use client\";\n\nimport React from \"react\";\n\n// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n//   AlertDialogInset,\n// } from \"@/lib/components/core/default/alert-dialog\";\n// import { Input } from \"@/lib/components/core/default/input\";\n\nexport default function AlertDialogDemo() {\n  return null;\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogInset className=\"space-y-2 bg-bg-muted px-6 py-4\">\n          <p>\n            To verify, type <span className=\"font-bold\">delete my project</span> below:\n          </p>\n          <Input value={inputValue} onChange={(e) => setInputValue(e.target.value)} />\n        </AlertDialogInset>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction disabled={inputValue !== \"delete my project\"}>\n            Continue\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/alert-dialog/with-long-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/alert-dialog/with-long-content")),
      code : [{"title":"with-long-content.tsx","code":"// import {\n//   AlertDialogAction,\n//   AlertDialogDescription,\n//   AlertDialogFooter,\n//   AlertDialogHeader,\n//   AlertDialogRoot,\n//   AlertDialogTrigger,\n//   AlertDialogCancel,\n//   AlertDialogTitle,\n//   AlertDialogContent,\n//   AlertDialogInset,\n// } from \"@/lib/components/core/default/alert-dialog\";\n\nexport default function AlertDialogDemo() {\n  return null\n  return (\n    <AlertDialogRoot>\n      <AlertDialogTrigger variant=\"danger\">Delete</AlertDialogTrigger>\n      <AlertDialogContent>\n        <AlertDialogHeader>\n          <AlertDialogTitle>Delete project</AlertDialogTitle>\n          <AlertDialogDescription>\n            This project will be deleted, along with all of its settings.\n          </AlertDialogDescription>\n        </AlertDialogHeader>\n        <AlertDialogInset className=\"px-6\">\n          {Array.from({ length: 30 }, (_, i) => (\n            <p key={i}>Some content contained within the Alert Dialog.</p>\n          ))}\n        </AlertDialogInset>\n        <AlertDialogFooter>\n          <AlertDialogCancel>Cancel</AlertDialogCancel>\n          <AlertDialogAction\n            variant={{ initial: \"ghost\", sm: \"danger\" }}\n            className=\"max-sm:text-fg-danger\"\n          >\n            Continue\n          </AlertDialogAction>\n        </AlertDialogFooter>\n      </AlertDialogContent>\n    </AlertDialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/dialog/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/dialog/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport {\n  DialogRoot,\n  Dialog,\n  DialogBody,\n  DialogFooter,\n} from \"@/lib/components/core/default/dialog\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function DialogDemo() {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    setIsLoading(false);\n  };\n  return (\n    <DialogRoot>\n      <Button variant=\"outline\">Edit Profile</Button>\n      <Dialog title=\"Edit profile\" description=\"Make changes to your profile.\">\n        {({ close }) => (\n          <>\n            <DialogBody>\n              <TextField autoFocus label=\"Name\" defaultValue=\"Mehdi\" />\n              <TextField label=\"Username\" defaultValue=\"@mehdibha_\" />\n            </DialogBody>\n            <DialogFooter>\n              <Button\n                variant=\"outline\"\n                size={{ initial: \"lg\", sm: \"md\" }}\n                onPress={close}\n              >\n                Cancel\n              </Button>\n              <Button\n                isLoading={isLoading}\n                type=\"primary\"\n                size={{ initial: \"lg\", sm: \"md\" }}\n                onPress={async () => {\n                  await handleSubmit();\n                  close();\n                }}\n              >\n                Save changes\n              </Button>\n            </DialogFooter>\n          </>\n        )}\n      </Dialog>\n    </DialogRoot>\n  );\n}\n"}]
    },
    "demos/components/core/drawer/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { DrawerRoot, Drawer } from \"@/lib/components/core/default/drawer\";\nimport { TextField } from \"@/lib/components/core/default/text-field\";\n\nexport default function DrawerDemo() {\n  return (\n    <DrawerRoot>\n      <Button>Open drawer</Button>\n      <Drawer title=\"Salemou 3alaykom\">\n        <div className=\"h-[500px] max-w-sm mx-auto \">\n          <TextField label=\"Email\" />\n        </div>\n      </Drawer>\n    </DrawerRoot>\n  );\n}\n"}]
    },
    "demos/components/core/drawer/with-framer": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/with-framer")),
      code : [{"title":"with-framer.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { useState } from \"react\";\n// import {\n//   motion,\n//   animate,\n//   AnimatePresence,\n//   useMotionTemplate,\n//   useMotionValue,\n//   useMotionValueEvent,\n//   useTransform,\n// } from \"framer-motion\";\nimport { motion } from \"framer-motion\";\nimport { animate } from \"framer-motion\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useMotionTemplate } from \"framer-motion\";\nimport { useMotionValue } from \"framer-motion\";\nimport { useMotionValueEvent } from \"framer-motion\";\nimport { useTransform } from \"framer-motion\";\nimport {\n  Dialog,\n  Heading,\n  Modal,\n  ModalOverlay,\n  DialogTrigger,\n} from \"react-aria-components\";\nimport { Button } from \"@/lib/components/core/default/button\";\n\n// Wrap React Aria modal components so they support framer-motion values.\nconst MotionModal = motion(Modal);\nconst MotionModalOverlay = motion(ModalOverlay);\n\nconst inertiaTransition = {\n  type: \"inertia\" as const,\n  bounceStiffness: 300,\n  bounceDamping: 40,\n  timeConstant: 300,\n};\n\nconst staticTransition = {\n  duration: 0.5,\n  ease: [0.32, 0.72, 0, 1],\n};\n// const root = document.querySelector(\"[data-rcopy-root]\")!\n\nconst root: HTMLElement = document.querySelector(\"[drawer-wrapper]\")!;\nconst SHEET_MARGIN = 34;\nconst SHEET_RADIUS = 12;\n\n// change this the div element will be like this <div drawer-wrapper=\"\"></div>\n\nexport default function Sheet() {\n  const [isOpen, setOpen] = useState(false);\n  const h = window.innerHeight - SHEET_MARGIN;\n  const y = useMotionValue(h);\n  const bgOpacity = useTransform(y, [0, h], [0.4, 0]);\n  const bg = useMotionTemplate`rgba(0, 0, 0, ${bgOpacity})`;\n\n  // Scale the body down and adjust the border radius when the sheet is open.\n  const bodyScale = useTransform(\n    y,\n    [0, h],\n    [(window.innerWidth - SHEET_MARGIN) / window.innerWidth, 1]\n  );\n  const bodyTranslate = useTransform(y, [0, h], [SHEET_MARGIN - SHEET_RADIUS, 0]);\n  const bodyBorderRadius = useTransform(y, [0, h], [SHEET_RADIUS, 0]);\n\n  useMotionValueEvent(bodyScale, \"change\", (v) => (root.style.scale = `${v}`));\n  useMotionValueEvent(\n    bodyTranslate,\n    \"change\",\n    (v) => (root.style.translate = `0 ${v}px`)\n  );\n  useMotionValueEvent(\n    bodyBorderRadius,\n    \"change\",\n    (v) => (root.style.borderRadius = `${v}px`)\n  );\n\n  return (\n    <DialogTrigger>\n      <Button onPress={() => setOpen(true)}>Open sheet</Button>\n      <AnimatePresence>\n        {isOpen && (\n          <MotionModalOverlay\n            // Force the modal to be open when AnimatePresence renders it.\n            isOpen\n            onOpenChange={setOpen}\n            className=\"fixed inset-0 z-10\"\n            style={{ backgroundColor: bg as unknown as string }}\n          >\n            <MotionModal\n              className=\"absolute bottom-0 w-full rounded-t-xl bg-black shadow-lg will-change-transform\"\n              initial={{ y: h }}\n              animate={{ y: 0 }}\n              exit={{ y: h }}\n              transition={staticTransition}\n              style={{\n                y,\n                top: SHEET_MARGIN,\n                // Extra padding at the bottom to account for rubber band scrolling.\n                paddingBottom: window.screen.height,\n              }}\n              drag=\"y\"\n              dragConstraints={{ top: 0 }}\n              onDragEnd={(e, { offset, velocity }) => {\n                if (offset.y > window.innerHeight * 0.75 || velocity.y > 10) {\n                  setOpen(false);\n                } else {\n                  void animate(y, 0, { ...inertiaTransition, min: 0, max: 0 });\n                }\n              }}\n            >\n              {/* drag affordance */}\n              <div className=\"mx-auto mt-2 h-1.5 w-12 rounded-full bg-gray-400\" />\n              <Dialog className=\"px-4 pb-4 outline-none\">\n                <div className=\"flex justify-end\">\n                  <Button\n                    className=\"mb-8 rounded border-none bg-transparent text-lg font-semibold text-blue-600 outline-none focus-visible:ring pressed:text-blue-700\"\n                    onPress={() => setOpen(false)}\n                  >\n                    Done\n                  </Button>\n                </div>\n                <Heading slot=\"title\" className=\"mb-4 text-3xl font-semibold\">\n                  Modal sheet\n                </Heading>\n                <p className=\"mb-4 text-lg\">\n                  This is a dialog with a custom modal overlay built with React Aria\n                  Components and Framer Motion.\n                </p>\n                <p className=\"text-lg\">\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean sit amet\n                  nisl blandit, pellentesque eros eu, scelerisque eros. Sed cursus urna at\n                  nunc lacinia dapibus.\n                </p>\n              </Dialog>\n            </MotionModal>\n          </MotionModalOverlay>\n        )}\n      </AnimatePresence>\n    </DialogTrigger>\n  );\n}\n"}]
    },
    "demos/components/core/drawer/directions": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/directions")),
      code : [{"title":"directions.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n// import { Drawer } from \"@/lib/components/core/default/drawer\";\n\nexport default function DrawerDemo() {\n  return null\n  // const [bottomOpen, setBottomOpen] = React.useState(false);\n  // const [topOpen, setTopOpen] = React.useState(false);\n  // const [leftOpen, setLeftOpen] = React.useState(false);\n  // const [rightOpen, setRightOpen] = React.useState(false);\n  // return (\n  //   <div className=\"grid grid-cols-2 gap-4\">\n  //     <Button onClick={() => setBottomOpen(true)}>Bottom</Button>\n  //     <Drawer\n  //       direction=\"bottom\"\n  //       open={bottomOpen}\n  //       onOpenChange={(state) => setBottomOpen(state)}\n  //     >\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //       </div>\n  //     </Drawer>\n  //     <Button onClick={() => setTopOpen(true)}>Top</Button>\n  //     <Drawer direction=\"top\" open={topOpen} onOpenChange={(state) => setTopOpen(state)}>\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //       </div>\n  //     </Drawer>\n  //     <Button onClick={() => setLeftOpen(true)}>Left</Button>\n  //     <Drawer\n  //       direction=\"left\"\n  //       showSwipeBar={false}\n  //       open={leftOpen}\n  //       onOpenChange={(state) => setLeftOpen(state)}\n  //     >\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //       </div>\n  //     </Drawer>\n  //     <Button onClick={() => setRightOpen(true)}>Right</Button>\n  //     <Drawer\n  //       direction=\"right\"\n  //       showSwipeBar={false}\n  //       open={rightOpen}\n  //       onOpenChange={(state) => setRightOpen(state)}\n  //     >\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //       </div>\n  //     </Drawer>\n  //   </div>\n  // );\n}\n"}]
    },
    "demos/components/core/drawer/custom-height": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/custom-height")),
      code : [{"title":"custom-height.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n// import { Drawer } from \"@/lib/components/core/default/drawer\";\n\nexport default function DrawerDemo() {\n  const [open, setOpen] = React.useState(false);\n  return null\n  // return (\n  //   <>\n  //     <Button onClick={() => setOpen(true)}>Open Drawer</Button>\n  //     <Drawer className=\"h-[400px]\" open={open} onOpenChange={(state) => setOpen(state)}>\n  //       <div className=\"flex flex-col items-center p-12 gap-4\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //       </div>\n  //     </Drawer>\n  //   </>\n  // );\n}\n"}]
    },
    "demos/components/core/drawer/nested-drawer": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/nested-drawer")),
      code : [{"title":"nested-drawer.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n// import { Drawer } from \"@/lib/components/core/default/drawer\";\n\nexport default function DrawerDemo() {\n  return null\n  // const [open, setOpen] = React.useState(false);\n  // const [openNested, setOpenNested] = React.useState(false);\n\n  // return (\n  //   <>\n  //     <Button onClick={() => setOpen(true)}>Open Drawer</Button>\n  //     <Drawer open={open} onOpenChange={(show) => setOpen(show)}>\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //         <Button onClick={() => setOpenNested(true)}>Open Second Drawer</Button>\n  //         <Drawer open={openNested} onOpenChange={(show) => setOpenNested(show)}>\n  //           <div className=\"flex flex-col items-center gap-4 p-12\">\n  //             <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //             <p>Drawer body</p>\n  //           </div>\n  //         </Drawer>\n  //       </div>\n  //     </Drawer>\n  //   </>\n  // );\n}\n"}]
    },
    "demos/components/core/drawer/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/drawer/composition")),
      code : [{"title":"composition.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n// import { Drawer } from \"@/lib/components/core/default/drawer\";\n\nexport default function DrawerDemo() {\n  return null\n  // const [open, setOpen] = React.useState(false);\n  // const [openNested, setOpenNested] = React.useState(false);\n\n  // return (\n  //   <>\n  //     <Button onClick={() => setOpen(true)}>Open Drawer</Button>\n  //     <Drawer open={open} onOpenChange={(show) => setOpen(show)}>\n  //       <div className=\"flex flex-col items-center gap-4 p-12\">\n  //         <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //         <p>Drawer body</p>\n  //         <Button onClick={() => setOpenNested(true)}>Open Second Drawer</Button>\n  //         <Drawer open={openNested} onOpenChange={(show) => setOpenNested(show)}>\n  //           <div className=\"flex flex-col items-center gap-4 p-12\">\n  //             <h2 className=\"text-xl font-bold\">A drawer title</h2>\n  //             <p>Drawer body</p>\n  //           </div>\n  //         </Drawer>\n  //       </div>\n  //     </Drawer>\n  //   </>\n  // );\n}\n"}]
    },
    "demos/components/core/hover-card/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/hover-card/default")),
      code : [{"title":"default.tsx","code":"import { Link } from \"@/lib/components/core/default/link\";\r\nimport { Avatar } from \"@/lib/components/core/default/avatar\";\r\nimport { HoverCard } from \"@/lib/components/core/default/hover-card\";\r\n\r\nexport default function HoverCardDemo() {\r\n  return (\r\n    <p>\r\n      Follow{\" \"}\r\n      <HoverCard content={<Content />} className=\"max-w-64\">\r\n        <Link\r\n          href=\"https://twitter.com/mehdibha_\"\r\n          target=\"_blank\"\r\n          className=\"text-fg-link\"\r\n        >\r\n          @mehdibha_\r\n        </Link>\r\n      </HoverCard>{\" \"}\r\n      on X for rcopy updates.\r\n    </p>\r\n  );\r\n}\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className=\"flex justify-between space-x-4\">\r\n      <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" />\r\n      <div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <h4 className=\"text-md font-semibold leading-normal\">Mehdi</h4>\r\n          <svg\r\n            stroke=\"currentColor\"\r\n            fill=\"currentColor\"\r\n            strokeWidth=\"0\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 22 22\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            color=\"rgba(29,155,240,1.00)\"\r\n          >\r\n            <path d=\"M20.396 11a3.487 3.487 0 0 0-2.008-3.062 3.474 3.474 0 0 0-.742-3.584 3.474 3.474 0 0 0-3.584-.742A3.468 3.468 0 0 0 11 1.604a3.463 3.463 0 0 0-3.053 2.008 3.472 3.472 0 0 0-1.902-.14c-.635.13-1.22.436-1.69.882a3.461 3.461 0 0 0-.734 3.584A3.49 3.49 0 0 0 1.604 11a3.496 3.496 0 0 0 2.017 3.062 3.471 3.471 0 0 0 .733 3.584 3.49 3.49 0 0 0 3.584.742A3.487 3.487 0 0 0 11 20.396a3.476 3.476 0 0 0 3.062-2.007 3.335 3.335 0 0 0 4.326-4.327A3.487 3.487 0 0 0 20.396 11zM9.662 14.85l-3.429-3.428 1.293-1.302 2.072 2.072 4.4-4.794 1.347 1.246z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h4 className=\"text-sm text-fg-muted\">@mehdibha_</h4>\r\n        <p className=\"mt-2 text-sm\">\r\n          I tell computers to do things. Building{\" \"}\r\n          <span className=\"text-fg-link\">\r\n            rcopy.dev\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"}]
    },
    "demos/components/core/hover-card/no-delay": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/hover-card/no-delay")),
      code : [{"title":"no-delay.tsx","code":"import { Avatar } from \"@/lib/components/core/default/avatar\";\r\nimport { HoverCard } from \"@/lib/components/core/default/hover-card\";\r\nimport { Link } from \"@/lib/components/core/default/link\";\r\n\r\nexport default function HoverCardDemo() {\r\n  return (\r\n    <HoverCard delay={0} closeDelay={0} content={<Content />}>\r\n      <Link href=\"https://twitter.com/mehdibha_\" target=\"_blank\" className=\"text-fg-link\">\r\n        @mehdibha_\r\n      </Link>\r\n    </HoverCard>\r\n  );\r\n}\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className=\"flex justify-between space-x-4\">\r\n      <Avatar src=\"https://github.com/mehdibha.png\" fallback=\"M\" />\r\n      <div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <h4 className=\"text-md font-semibold leading-normal\">Mehdi</h4>\r\n          <svg\r\n            stroke=\"currentColor\"\r\n            fill=\"currentColor\"\r\n            strokeWidth=\"0\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 22 22\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            color=\"rgba(29,155,240,1.00)\"\r\n          >\r\n            <path d=\"M20.396 11a3.487 3.487 0 0 0-2.008-3.062 3.474 3.474 0 0 0-.742-3.584 3.474 3.474 0 0 0-3.584-.742A3.468 3.468 0 0 0 11 1.604a3.463 3.463 0 0 0-3.053 2.008 3.472 3.472 0 0 0-1.902-.14c-.635.13-1.22.436-1.69.882a3.461 3.461 0 0 0-.734 3.584A3.49 3.49 0 0 0 1.604 11a3.496 3.496 0 0 0 2.017 3.062 3.471 3.471 0 0 0 .733 3.584 3.49 3.49 0 0 0 3.584.742A3.487 3.487 0 0 0 11 20.396a3.476 3.476 0 0 0 3.062-2.007 3.335 3.335 0 0 0 4.326-4.327A3.487 3.487 0 0 0 20.396 11zM9.662 14.85l-3.429-3.428 1.293-1.302 2.072 2.072 4.4-4.794 1.347 1.246z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h4 className=\"text-sm text-fg-muted\">@mehdibha_</h4>\r\n        <p className=\"mt-2 text-sm\">\r\n          I tell computers to do things. Building{\" \"}\r\n          <Link href=\"https://rcopy.dev\" className=\"text-fg-link\">\r\n            rcopy.dev\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"}]
    },
    "demos/components/core/hover-card/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/hover-card/composition")),
      code : [{"title":"composition.tsx","code":"import { Link } from \"@/lib/components/core/default/link\";\r\nimport { Avatar } from \"@/lib/components/core/default/avatar\";\r\nimport {\r\n  HoverCardContent,\r\n  HoverCardRoot,\r\n} from \"@/lib/components/core/default/hover-card\";\r\n\r\nexport default function HoverCardDemo() {\r\n  return (\r\n    <HoverCardRoot>\r\n      <Link href=\"https://twitter.com/mehdibha_\" target=\"_blank\" className=\"text-fg-link\">\r\n        @mehdibha_\r\n      </Link>\r\n      <HoverCardContent>\r\n        <Content />\r\n      </HoverCardContent>\r\n    </HoverCardRoot>\r\n  );\r\n}\r\n\r\nconst Content = () => {\r\n  return (\r\n    <div className=\"flex justify-between space-x-4\">\r\n      <Avatar src=\"https://github.com/mehdibha.png\" alt=\"@mehdibha\" fallback=\"M\" />\r\n      <div>\r\n        <div className=\"flex items-center gap-2\">\r\n          <h4 className=\"text-md font-semibold leading-normal\">Mehdi</h4>\r\n          <svg\r\n            stroke=\"currentColor\"\r\n            fill=\"currentColor\"\r\n            strokeWidth=\"0\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 22 22\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            color=\"rgba(29,155,240,1.00)\"\r\n          >\r\n            <path d=\"M20.396 11a3.487 3.487 0 0 0-2.008-3.062 3.474 3.474 0 0 0-.742-3.584 3.474 3.474 0 0 0-3.584-.742A3.468 3.468 0 0 0 11 1.604a3.463 3.463 0 0 0-3.053 2.008 3.472 3.472 0 0 0-1.902-.14c-.635.13-1.22.436-1.69.882a3.461 3.461 0 0 0-.734 3.584A3.49 3.49 0 0 0 1.604 11a3.496 3.496 0 0 0 2.017 3.062 3.471 3.471 0 0 0 .733 3.584 3.49 3.49 0 0 0 3.584.742A3.487 3.487 0 0 0 11 20.396a3.476 3.476 0 0 0 3.062-2.007 3.335 3.335 0 0 0 4.326-4.327A3.487 3.487 0 0 0 20.396 11zM9.662 14.85l-3.429-3.428 1.293-1.302 2.072 2.072 4.4-4.794 1.347 1.246z\"></path>\r\n          </svg>\r\n        </div>\r\n        <h4 className=\"text-sm text-fg-muted\">@mehdibha_</h4>\r\n        <p className=\"mt-2 text-sm\">\r\n          I tell computers to do things. Building{\" \"}\r\n          <Link href=\"https://rcopy.dev\" className=\"text-fg-link\">\r\n            rcopy.dev\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"}]
    },
    "demos/components/core/popover/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/basic")),
      code : [{"title":"basic.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, Popover } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <Popover title=\"Salemou 3alaykom\">\n        <div>some content here</div>\n      </Popover>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/icon": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/icon")),
      code : [{"title":"icon.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/position": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/position")),
      code : [{"title":"position.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/offset": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/offset")),
      code : [{"title":"offset.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/cross-offset": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/cross-offset")),
      code : [{"title":"cross-offset.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/container-padding": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/container-padding")),
      code : [{"title":"container-padding.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, PopoverContent } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <PopoverContent className=\"w-80\">\n        <p>title</p>\n      </PopoverContent>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/popover/mobile": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/popover/mobile")),
      code : [{"title":"mobile.tsx","code":"import { InfoIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { PopoverRoot, Popover } from \"@/lib/components/core/default/popover\";\n\nexport default function PopoverDemo() {\n  return (\n    <PopoverRoot>\n      <Button variant=\"ghost\" shape=\"square\">\n        <InfoIcon />\n      </Button>\n      <Popover title=\"Salemou 3alaykom\">\n        <div>some content here</div>\n      </Popover>\n    </PopoverRoot>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/default": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/default")),
      code : [{"title":"default.tsx","code":"import { PlusIcon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <Tooltip content=\"Add to library\">\n      <Button shape=\"square\">\n        <PlusIcon />\n      </Button>\n    </Tooltip>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/types": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/types")),
      code : [{"title":"types.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <div className=\"flex gap-4\">\n      <Tooltip content=\"Add to library\" type=\"success\">\n        <Button>Success</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"danger\">\n        <Button>Danger</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"warning\">\n        <Button>Warning</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"info\">\n        <Button>Info</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/variants": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/variants")),
      code : [{"title":"variants.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <div className=\"flex gap-4\">\n      <Tooltip content=\"Add to library\" type=\"success\">\n        <Button>Success</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"danger\">\n        <Button>Danger</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"warning\">\n        <Button>Warning</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"info\">\n        <Button>Info</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/placement": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/placement")),
      code : [{"title":"placement.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <div className=\"flex gap-4\">\n      <Tooltip content=\"Add to library\" type=\"success\">\n        <Button>Success</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"danger\">\n        <Button>Danger</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"warning\">\n        <Button>Warning</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"info\">\n        <Button>Info</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/flip": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/flip")),
      code : [{"title":"flip.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <div className=\"flex gap-4\">\n      <Tooltip content=\"Add to library\" type=\"success\">\n        <Button>Success</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"danger\">\n        <Button>Danger</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"warning\">\n        <Button>Warning</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"info\">\n        <Button>Info</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/offset": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/offset")),
      code : [{"title":"offset.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <div className=\"flex gap-4\">\n      <Tooltip content=\"Add to library\" type=\"success\">\n        <Button>Success</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"danger\">\n        <Button>Danger</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"warning\">\n        <Button>Warning</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"info\">\n        <Button>Info</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/container-padding": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/container-padding")),
      code : [{"title":"container-padding.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <div className=\"flex gap-4\">\n      <Tooltip content=\"Add to library\" type=\"success\">\n        <Button>Success</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"danger\">\n        <Button>Danger</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"warning\">\n        <Button>Warning</Button>\n      </Tooltip>\n      <Tooltip content=\"Add to library\" type=\"info\">\n        <Button>Info</Button>\n      </Tooltip>\n    </div>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/no-delay": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/no-delay")),
      code : [{"title":"no-delay.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <Tooltip content=\"Add to library\" delay={0} closeDelay={0}>\n      <Button>\n        Hover\n      </Button>\n    </Tooltip>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/custom-content": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/custom-content")),
      code : [{"title":"custom-content.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { Tooltip } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <Tooltip\n      content={\n        <>\n          The <b>Evil Rabbit</b> Jumped over the <i>Fence</i>.\n        </>\n      }\n    >\n      <Button>Hover</Button>\n    </Tooltip>\n  );\n}\n"}]
    },
    "demos/components/core/tooltip/composition": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/tooltip/composition")),
      code : [{"title":"composition.tsx","code":"import { Button } from \"@/lib/components/core/default/button\";\nimport { TooltipRoot, TooltipContent } from \"@/lib/components/core/default/tooltip\";\n\nexport default function TooltipDemo() {\n  return (\n    <TooltipRoot>\n      <Button>Hover</Button>\n      <TooltipContent>\n        <p>Add to library</p>\n      </TooltipContent>\n    </TooltipRoot>\n  );\n}\n"}]
    },
    "demos/components/core/combobox/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/combobox/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\r\n\r\nimport {\r\n  ComboboxRoot,\r\n  ComboboxCollection,\r\n  ComboboxInput,\r\n  ComboboxItem,\r\n  ComboboxLabel,\r\n  ComboboxListBox,\r\n  ComboboxPopover,\r\n  ComboboxSection,\r\n} from \"@/lib/components/core/default/combobox\";\r\nimport { Overlay } from \"@/lib/components/core/default/overlay\";\r\nimport React from \"react\";\r\nimport { OverlayTriggerStateContext, PopoverContext, PopoverProps, useContextProps } from \"react-aria-components\";\r\nimport { useOverlayTriggerState } from \"react-stately\";\r\n\r\nexport default function ComboboxDemo() {\r\n  return (\r\n    <ComboboxRoot menuTrigger=\"focus\">\r\n      <ComboboxInput className=\"w-[200px]\" placeholder=\"Select an animal...\" />\r\n      <ComboboxPopover>\r\n        <ComboboxListBox>\r\n          <ComboboxItem textValue=\"Aardvark\">Aardvark</ComboboxItem>\r\n          <ComboboxItem textValue=\"Cat\">Cat</ComboboxItem>\r\n          <ComboboxItem textValue=\"Dog\">Dog</ComboboxItem>\r\n          <ComboboxItem textValue=\"Kangaroo\">Kangaroo</ComboboxItem>\r\n          <ComboboxItem textValue=\"Panda\">Panda</ComboboxItem>\r\n          <ComboboxItem textValue=\"Snake\">Snake</ComboboxItem>\r\n        </ComboboxListBox>\r\n      </ComboboxPopover>\r\n    </ComboboxRoot>\r\n  );\r\n}\r\n\r\nconst CustomPopover = React.forwardRef(\r\n  (props: PopoverProps, ref: React.ForwardedRef<HTMLElement>) => {\r\n    // Merge the local props and ref with the ones provided via context.\r\n    [props, ref] = useContextProps(props, ref, PopoverContext);\r\n    const contextState = React.useContext(OverlayTriggerStateContext);\r\n    const localState = useOverlayTriggerState(props);\r\n    const state = props.isOpen != null || props.defaultOpen != null || !contextState ? localState : contextState;\r\n\r\n    if (state && !state.isOpen) {\r\n      return null;\r\n    }\r\n\r\n    \r\n    return <div ref={ref} {...props} />\r\n  \r\n    // return <div {...props} />;\r\n  }\r\n);\r\nCustomPopover.displayName = \"CustomPopover\";"}]
    },
    "demos/components/core/select/basic": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/components/core/select/basic")),
      code : [{"title":"basic.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport {\n  Label,\n  Button,\n  ListBox,\n  ListBoxItem,\n  Select,\n  SelectValue,\n  Popover,\n} from \"react-aria-components\";\n\nexport default function SelectDemo() {\n  return (\n    <div className=\"flex flex-col space-y-4\">\n      <Select>\n        <Label>Favorite Animal</Label>\n        <Button>\n          <SelectValue />\n          <span aria-hidden=\"true\">▼</span>\n        </Button>\n        <Popover>\n          <ListBox>\n            <ListBoxItem>Aardvark</ListBoxItem>\n            <ListBoxItem>Cat</ListBoxItem>\n            <ListBoxItem>Dog</ListBoxItem>\n            <ListBoxItem>Kangaroo</ListBoxItem>\n            <ListBoxItem>Panda</ListBoxItem>\n            <ListBoxItem>Snake</ListBoxItem>\n          </ListBox>\n        </Popover>\n      </Select>\n    </div>\n  );\n}"}]
    },
    "demos/hooks/use-media-query": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-media-query")),
      code : [{"title":"use-media-query.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { LaptopIcon, MonitorIcon, PhoneIcon, TabletIcon } from \"lucide-react\";\nimport { ClientOnly } from \"@/lib/components/utils/client-only\";\nimport { useMediaQuery } from \"@/lib/hooks/use-media-query\";\nimport { cn } from \"@/lib/utils/classes\";\n\nfunction Demo() {\n  const isSmallDevice = useMediaQuery(\"only screen and (max-width : 768px)\");\n  const isMediumDevice = useMediaQuery(\n    \"only screen and (min-width : 769px) and (max-width : 992px)\"\n  );\n  const isLargeDevice = useMediaQuery(\n    \"only screen and (min-width : 993px) and (max-width : 1200px)\"\n  );\n  const isExtraLargeDevice = useMediaQuery(\"only screen and (min-width : 1201px)\");\n\n  return (\n    <ClientOnly>\n      <div className=\"text-center\">\n        <p>Resize your browser window to see changes.</p>\n        <div className=\"mt-8 grid grid-cols-4 gap-4\">\n          {[\n            {\n              name: \"Small\",\n              isMatched: isSmallDevice,\n              icon: <PhoneIcon size={20} />,\n            },\n            {\n              name: \"Medium\",\n              isMatched: isMediumDevice,\n              icon: <TabletIcon size={20} />,\n            },\n            {\n              name: \"Large\",\n              isMatched: isLargeDevice,\n              icon: <LaptopIcon size={20} />,\n            },\n            {\n              name: \"Extra Large\",\n              isMatched: isExtraLargeDevice,\n              icon: <MonitorIcon size={20} />,\n            },\n          ].map(({ name, icon, isMatched }) => (\n            <div\n              key={name}\n              className={cn(\n                \"flex flex-col items-center gap-2 rounded border-2 p-4\",\n                isMatched && \"border-green-800 text-green-200\"\n              )}\n            >\n              {icon}\n              <p>{name}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </ClientOnly>\n  );\n}\n\nexport default function ClientOnlyDemo() {\n  return (\n    <ClientOnly>\n      <Demo />\n    </ClientOnly>\n  );\n}\n"}]
    },
    "demos/hooks/use-intersection-observer": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-intersection-observer")),
      code : [{"title":"use-intersection-observer.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { ScrollArea } from \"@/lib/components/core/default/scroll-area\";\nimport { useIntersectionObserver } from \"@/lib/hooks/use-intersection-observer\";\nimport { cn } from \"@/lib/utils/classes\";\n\nexport default function Demo() {\n  const [ref, entry] = useIntersectionObserver({\n    threshold: 0,\n    root: null,\n    rootMargin: \"0px\",\n  });\n\n  return (\n    <div className=\"w-full max-w-sm\">\n      <p>\n        Element{\" \"}\n        <span\n          className={cn(entry?.isIntersecting ? \"text-green-700\" : \"text-yellow-600\")}\n        >\n          {entry?.isIntersecting ? \"inside\" : \"outside\"}\n        </span>{\" \"}\n        the viewport\n      </p>\n      <ScrollArea type=\"always\" className=\"mt-4 h-32 border\">\n        <div className=\"flex h-96 flex-col items-center justify-between py-8\">\n          <p className=\"text-fg-muted\">Scroll me down!</p>\n          <p ref={ref} className=\"border-4 border-dashed p-4\">\n            Hello world!\n          </p>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-window-size": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-window-size")),
      code : [{"title":"use-window-size.tsx","code":"\"use client\";\n\nimport { useWindowSize } from \"@/lib/hooks/use-window-size\";\n\nexport default function Demo() {\n  const size = useWindowSize();\n\n  return (\n    <div>\n      <p className=\"text-center text-xl font-bold\">Resize your window</p>\n      <div className=\"mt-4 grid grid-cols-2 gap-8\">\n        <div>\n          <p className=\"text-fg-muted\">width</p>\n          <p className=\"text-xl\">{size.width}px</p>\n        </div>\n        <div>\n          <p className=\"text-fg-muted\">height</p>\n          <p className=\"text-xl\">{size.height}px</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-battery": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-battery")),
      code : [{"title":"use-battery.tsx","code":"\"use client\";\n\nimport {\n  BatteryChargingIcon,\n  BatteryFullIcon,\n  BatteryLowIcon,\n  BatteryMediumIcon,\n  BatteryWarning,\n  Loader2Icon,\n} from \"lucide-react\";\nimport { useBattery } from \"@/lib/hooks/use-battery\";\n\nexport default function Demo() {\n  const { isLoading, isSupported, isCharging, level } = useBattery();\n\n  const size = 120;\n\n  return (\n    <div className=\"text-center\">\n      <h2 className=\"text-xl font-semibold\">Battery status</h2>\n      <div className=\"mt-4 flex items-center justify-center space-x-4\">\n        {isLoading ? (\n          <Loader2Icon className=\"animate-spin\" />\n        ) : !isSupported ? (\n          <p className=\"text-fg-muted\">\n            Battery status API is not supported in your browser.\n          </p>\n        ) : (\n          <>\n            <span className=\"text-5xl font-bold\">{Math.round(level * 100)}%</span>\n            {isCharging ? (\n              <BatteryChargingIcon size={size} />\n            ) : level === 1 ? (\n              <BatteryFullIcon size={size} />\n            ) : level > 0.5 ? (\n              <BatteryMediumIcon size={size} />\n            ) : level > 0.2 ? (\n              <BatteryLowIcon size={size} />\n            ) : (\n              <BatteryWarning size={size} />\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-mouse": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-mouse")),
      code : [{"title":"use-mouse.tsx","code":"\"use client\";\n\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/lib/components/core/default/table\";\nimport { useMouse } from \"@/lib/hooks/use-mouse\";\nimport { cn } from \"@/lib/utils/classes\";\n\nexport default function Demo() {\n  const [mouse, ref] = useMouse<HTMLDivElement>();\n\n  const xIntersecting = mouse.elementX > 0 && mouse.elementX < 300;\n  const yIntersecting = mouse.elementY > 0 && mouse.elementY < 300;\n  const isIntersecting = xIntersecting && yIntersecting;\n\n  return (\n    <div>\n      <div className=\"mx-auto flex rounded-lg border bg-bg-muted py-4\">\n        {[\n          {\n            caption: \"Mouse Position\",\n            headers: [\"X\", \"Y\"],\n            rows: [[mouse.x, mouse.y]],\n          },\n          {\n            caption: \"Relative to ref\",\n            headers: [\"ElementX\", \"ElementY\"],\n            rows: [[mouse.elementX, mouse.elementY]],\n          },\n        ].map(({ caption, headers, rows }) => (\n          <Table key={caption} className=\"mx-auto\">\n            <TableCaption>{caption}</TableCaption>\n            <TableHeader>\n              <TableRow>\n                {headers.map((header, i) => (\n                  <TableHead key={i} className=\"w-[100px]\">\n                    {header}\n                  </TableHead>\n                ))}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {rows.map((row, i) => (\n                <TableRow key={i}>\n                  {row.map((cell, j) => (\n                    <TableCell key={j} className=\"max-w-[50px] truncate\">\n                      {cell}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        ))}\n      </div>\n      <div\n        ref={ref}\n        className={cn(\n          \"mx-auto mt-4 flex h-[200px] w-full max-w-sm items-center justify-center rounded-lg border bg-background p-4 transition-colors\",\n          isIntersecting && \"bg-green-900\"\n        )}\n      >\n        <span>Use a ref to add coords relative to the element</span>\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-orientation": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-orientation")),
      code : [{"title":"use-orientation.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { useOrientation } from \"@/lib/hooks/use-orientation\";\n\nexport default function Demo() {\n  const orientation = useOrientation();\n\n  return (\n    <section>\n      <p className=\"text-xl font-bold\">Orientation</p>\n      <div className=\"mt-4 grid grid-cols-2 gap-4\">\n        <div>\n          <p className=\"text-fg-muted\">Angle</p>\n          <p className=\"text-xl\">{orientation.angle}</p>\n        </div>\n        <div>\n          <p className=\"text-fg-muted\">Type</p>\n          <p className=\"text-xl\">{orientation.type}</p>\n        </div>\n      </div>\n    </section>\n  );\n}\n"}]
    },
    "demos/hooks/use-local-storage": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-local-storage")),
      code : [{"title":"use-local-storage.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { Textarea } from \"@/lib/components/core/default/textarea\";\nimport { ClientOnly } from \"@/lib/components/utils/client-only\";\nimport { useLocalStorage } from \"@/lib/hooks/use-local-storage\";\n\nfunction Demo() {\n  const [writing, saveWriting] = useLocalStorage<string | null>(\"writing\", null);\n  const [input, setInput] = React.useState(writing ?? \"\");\n\n  return (\n    <div className=\"w-full max-w-sm\">\n      <Textarea\n        value={input}\n        onChange={(e) => {\n          setInput(e.target.value);\n        }}\n        placeholder=\"Start your writing here, save it and refresh the page to see it persist.\"\n      />\n      <div className=\"mt-4 flex items-center justify-end space-x-2\">\n        <Button\n          variant=\"neutral\"\n          size=\"sm\"\n          onClick={() => {\n            setInput(\"\");\n            saveWriting(null);\n          }}\n        >\n          Clear\n        </Button>\n        <Button\n          variant=\"primary\"\n          size=\"sm\"\n          onClick={() => {\n            saveWriting(input);\n            // TODO: toast notification\n          }}\n        >\n          Save\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default function ClientOnlyDemo() {\n  return (\n    <ClientOnly>\n      <Demo />\n    </ClientOnly>\n  );\n}\n"}]
    },
    "demos/hooks/use-counter": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-counter")),
      code : [{"title":"use-counter.tsx","code":"\"use client\";\n\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { useCounter } from \"@/lib/hooks/use-counter\";\n\nexport default function Demo() {\n  const [count, { increment, decrement, set, reset }] = useCounter(3, {\n    min: 0,\n    max: 10,\n  });\n  return (\n    <div>\n      <p className=\"text-center text-fg-muted\">startingValue: 3, min: 0, max: 10</p>\n      <div className=\"mt-4 flex items-center gap-2\">\n        <Button onClick={increment} disabled={count >= 10}>\n          Increment\n        </Button>\n        <Button onClick={decrement} disabled={count <= 0}>\n          Decrement\n        </Button>\n        <Button\n          onClick={() => {\n            set(5);\n          }}\n        >\n          Set to 5\n        </Button>\n        <Button onClick={reset}>Reset</Button>\n      </div>\n      <p className=\"mt-8 text-center text-4xl\">{count}</p>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-debounce": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-debounce")),
      code : [{"title":"use-debounce.tsx","code":"\"use client\";\n\nimport * as React from \"react\";\nimport { SearchIcon } from \"lucide-react\";\n// import { Input } from \"@/lib/components/core/default/input\";\nimport { useDebounce } from \"@/lib/hooks/use-debounce\";\n\nexport default function Demo() {\n  const [searchInput, setSearchInput] = React.useState(\"\");\n  const debouncedValue = useDebounce(searchInput, 1000);\n\n  return (\n    <div className=\"w-full max-w-sm\">\n      <div className=\"relative\">\n        <SearchIcon\n          size={18}\n          className=\"pointer-events-none absolute left-2 top-1/2 -translate-y-1/2 transform text-fg-muted\"\n        />\n        {/* <Input\n          value={searchInput}\n          onChange={(e) => {\n            setSearchInput(e.target.value);\n          }}\n          placeholder=\"Search\"\n          className=\"full-w pl-8\"\n        /> */}\n      </div>\n      <div className=\"mt-10 text-center\">\n        {debouncedValue ? (\n          <p>Results for &quot;{debouncedValue}&quot;</p>\n        ) : (\n          <p className=\"text-fg-muted\">Start searching</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-list": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-list")),
      code : [{"title":"use-list.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { EditIcon, Trash2Icon } from \"lucide-react\";\nimport { Button } from \"@/lib/components/core/default/button\";\n// import { Input } from \"@/lib/components/core/default/input\";\nimport { useList } from \"@/lib/hooks/use-list\";\n\nexport default function Demo() {\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [list, { set, push, removeAt, insertAt, clear }] = useList<string | number>([\n    \"First\",\n    \"Second\",\n    \"Third\",\n  ]);\n  return null\n  return (\n    <div>\n      <div className=\"flex gap-2\">\n        <Button disabled={list.length < 1} onClick={() => insertAt(1, \"woo\")}>\n          Insert After First\n        </Button>\n        <Button disabled={list.length < 2} onClick={() => removeAt(1)}>\n          Remove Second Item\n        </Button>\n        <Button onClick={() => set([1, 2, 3])}>Reset</Button>\n        <Button onClick={() => clear()}>Clear</Button>\n      </div>\n      <div className=\"mt-4 space-y-2\">\n        <div className=\"flex items-center space-x-2\">\n          <Input\n            value={inputValue}\n            onChange={(e) => {\n              setInputValue(e.target.value);\n            }}\n          />\n          <Button onClick={() => push(inputValue)}>Add</Button>\n        </div>\n        {list.map((item, index) => (\n          <div\n            key={index}\n            className=\"group relative flex h-10 items-center rounded-md border bg-background px-2\"\n          >\n            <div className=\"mr-2\">{item}</div>\n            <div className=\"absolute right-3 top-[50%] flex translate-y-[-50%] items-center space-x-2 opacity-0 duration-100 group-hover:opacity-100\">\n              <Button variant=\"ghost\" size=\"sm\" shape=\"square\">\n                <EditIcon size={15} />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                shape=\"square\"\n                onClick={() => {\n                  removeAt(index);\n                }}\n              >\n                <Trash2Icon size={15} />\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"}]
    },
    "demos/hooks/use-previous": {
      component: React.lazy<React.FC>(() => import("@/lib/demos/hooks/use-previous")),
      code : [{"title":"use-previous.tsx","code":"\"use client\";\n\nimport React from \"react\";\nimport { Button } from \"@/lib/components/core/default/button\";\nimport { usePrevious } from \"@/lib/hooks/use-previous\";\n\nfunction getRandomColor() {\n  const colors = [\"green\", \"blue\", \"purple\", \"red\", \"pink\"];\n  return colors[Math.floor(Math.random() * colors.length)];\n}\n\nexport default function Demo() {\n  const [color, setColor] = React.useState(getRandomColor());\n  const previousColor = usePrevious(color);\n\n  const handleClick = () => {\n    function getNewColor() {\n      const newColor = getRandomColor();\n      if (color === newColor) {\n        getNewColor();\n      } else {\n        setColor(newColor);\n      }\n    }\n    getNewColor();\n  };\n\n  return (\n    <div className=\"text-center\">\n      <Button size=\"sm\" onClick={handleClick}>\n        Next\n      </Button>\n      <div className=\"mt-8 grid grid-cols-2 gap-4\">\n        <div\n          className=\"flex h-16 w-52 items-center justify-center rounded-lg\"\n          style={{ background: previousColor ?? undefined }}\n        >\n          Previous: {previousColor ?? \"null\"}\n        </div>\n        <div\n          className=\"flex h-16 w-52 items-center justify-center rounded-lg\"\n          style={{ background: color }}\n        >\n          Previous: {color ?? \"null\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n"}]
    },
  }
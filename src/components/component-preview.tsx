import React from "react";
import { Code } from "bright";
import { tabs } from "@/components/code-highlighter/code-tabs";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/lib/components/core/default/tabs";
import { previews } from "@/autogenerated/previews";
import { Preview } from "./preview";

type PreviewsKeys = keyof typeof previews;

export interface ComponentPreviewProps {
  name: PreviewsKeys;
  centered?: boolean;
  className?: string;
  containerClassName?: string;
  aspect?: "default" | "page";
}

export const ComponentPreview = ({
  name,
  centered = true,
  className,
  containerClassName,
  aspect = "default",
}: ComponentPreviewProps) => {
  const component = React.useMemo(() => {
    const Component = previews[name]?.component;

    if (!Component) {
      return <p className="text-sm text-muted-foreground">Component not found.</p>;
    }

    return <Component />;
  }, [name]);

  const code = React.useMemo(() => {
    const allCodeFiles = previews[name]?.code;

    if (allCodeFiles.length === 0) {
      return [];
    }

    return allCodeFiles.map((file) => ({
      ...file,
      code: file.code.replace("export default", "export"),
    }));
  }, [name]);

  return (
    <Tabs defaultValue="preview" className={containerClassName}>
      <TabsList className="grid w-[200px] grid-cols-2 lg:w-[400px]">
        <TabsTrigger value="preview">Preview</TabsTrigger>
        <TabsTrigger value="code">Code</TabsTrigger>
      </TabsList>
      <TabsContent value="preview" className="rounded-md border">
        <Preview aspect={aspect} centered={centered} className={className}>
          {component}
        </Preview>
      </TabsContent>
      <TabsContent value="code" className="rounded border">
        <Code
          subProps={code.map((file) => ({
            title: code.length > 1 ? file.title : undefined,
            code: file.code.replace(/[\r\n]+$/, ""),
            lang: "tsx",
          }))}
          style={{ marginTop: 0, marginBottom: 0 }}
          theme="github-dark-dimmed"
          codeClassName="text-xs"
          extensions={[tabs]}
        />
      </TabsContent>
    </Tabs>
  );
};

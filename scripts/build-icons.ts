import { transform } from "@svgr/core";
import fs from "fs";
import * as lucideIcons from "lucide-static";
import path from "path";
import { rimraf } from "rimraf";


async function processLucideIcons() {
  let index = `
  // This file is autogenerated by scripts/build-icons.ts
  // Do not edit this file directly.
  
  export const icons = [
  `;
  const promises = Object.keys(lucideIcons).map(async (name) => {
    const icon = lucideIcons[name as keyof typeof lucideIcons];
    // Using transform from @svgr/core to transform the SVG into a React component string
    const component = await transform(
      icon,
      {
        plugins: ["@svgr/plugin-jsx", "@svgr/plugin-prettier"],
        icon: true,
      },
      { componentName: `${name}Icon` }
    );
    console.log(component);
    // Append the transformed SVG component to the index string
    index += ` {
        name: \`${name}\`,
        icon: \`${icon}\`,
        code: \`${component}\`
        },`;
  });
  try {
    await Promise.all(promises.slice(0, 10));
  } catch (e) {
    console.log(e);
  }
  index += `]`;

  rimraf.sync(path.join(process.cwd(), "src", "autogenerated", "lucide-icons.ts"));
  fs.writeFileSync(
    path.join(process.cwd(), "src", "autogenerated", "icons", "lucide-icons.ts"),
    index
  );
}

void processLucideIcons();
